{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>2023-12-05</p> <p>\u5982\u4f55\u505a\u597d\u793e\u533a\uff1f\u5728\u4f0a\u65af\u5766\u5e03\u5c14 Devconnect \u671f\u95f4\u7684\u601d\u8003</p> <p>2023-12-06</p> <p>\u5982\u4f55\u53d1\u5e03\u4e00\u4e2a Obsidian \u7684\u7b14\u8bb0\u7f51\u7ad9</p> <p>2023-12-07</p> <p>ZKP Twitter Space: Lookups</p> <p>2023-12-09</p> <p>Lookup Arguments Overview</p> <p>2023-12-25</p> <p>\u692d\u5706\u66f2\u7ebf(Elliptic Curve)\u7684\u795e\u5947\u6027\u8d28</p> <p>2024-01-06</p> <p>\u6211\u7684\u4eba\u751f\u54f2\u5b66: \u5feb\u4e50\u7406\u8bba</p> <p>2024-05-16</p> <p>Notes about Jolt</p> <p>2024-05-28</p> <p>How bit commitment works</p> <p>2024-05-29</p> <p>BitVM \u4ecb\u7ecd</p> <p>2024-05-30</p> <p>\u4e3a\u4ec0\u4e48\u6bd4\u7279\u5e01\u4e0a\u6ca1\u6709 ZK</p> <p>2024-06-23</p> <p>\u4ea4\u6362\u4ee3\u6570\u5b66\u4e60\u7b14\u8bb0</p> <p>2024-09-03</p> <p>Roots of unity</p> <p>2024-09-11</p> <p>Field Extensions</p> <p>2024-09-23</p> <p>FFT Code</p>"},{"location":"2023-12-05/thoughts-about-community/","title":"\u5982\u4f55\u505a\u597d\u793e\u533a\uff1f\u5728\u4f0a\u65af\u5766\u5e03\u5c14 Devconnect \u671f\u95f4\u7684\u601d\u8003","text":"<p>\u505a\u793e\u533a\u7684\u8fc7\u7a0b\u4e5f\u662f\u6211\u63a2\u7d22\u8fd9\u4e2a\u4e16\u754c\u7684\u8fc7\u7a0b\uff0c\u901a\u8fc7\u8fd9\u4e9b\u63a2\u7d22\uff0c\u6709\u673a\u4f1a\u4e86\u89e3\u4e16\u754c\u66f4\u591a\u7684\u771f\u76f8\uff0c\u770b\u5230\u66f4\u591a\u7684\u53ef\u80fd\u6027\uff0c\u4ece 2023 \u5e74 10 \u6708 22 \u65e5\u5f00\u59cb\u7684\u8fd9\u4e00\u4e2a\u6708 hacker house \u5728\u4f0a\u65af\u5766\u5e03\u5c14\u7684\u7ecf\u5386\u6b63\u662f\u8fd9\u4e9b\u63a2\u7d22\u7684\u5b8c\u7f8e\u4f53\u73b0\u3002\u8fd9\u4e9b\u7ecf\u5386\u6fc0\u53d1\u6211\u7684\u601d\u8003\uff0c\u8ba9\u6211\u5f62\u6210\u65b0\u7684\u7ecf\u9a8c\uff0c\u8fd9\u4e9b\u7ecf\u9a8c\u7ee7\u7eed\u63a8\u52a8\u6211\u63a2\u7d22\u65b0\u7684\u53ef\u80fd\u6027\u3002</p> <p>\u8fd9\u6b21\u6211\u4eec hacker house(Antalpha HackerHouse) \u7684\u4e3b\u9898\u662f Research &amp; Build\uff0c\u6bcf\u4e2a\u4eba\u9700\u8981\u5728\u4e24\u5468\u7684\u65f6\u95f4\u5185\u9009\u62e9 1-2 \u4e2a ZKP \u76f8\u5173\u7684 paper \u9605\u8bfb\uff0c\u7136\u540e\u7ed9\u5927\u5bb6\u5206\u4eab\uff0c\u4e4b\u540e\u7684\u7b2c\u4e09\u5468\u548c\u7b2c\u56db\u5468\u662f build \u9636\u6bb5\uff0c\u5927\u5bb6\u4e00\u8d77\u53bb\u53c2\u52a0\u9ed1\u5ba2\u677e\u548c\u6253 CTF\uff0c\u6211\u4eec\u9f13\u52b1 hacker \u5229\u7528\u6240\u8bfb paper \u7684\u77e5\u8bc6\u53bb build\u3002\u4ece\u6211\u4e2a\u4eba\u6765\u770b\uff0c\u8fd9\u6b21\u7684 hacker house \u5f88\u6210\u529f\uff0c\u5728 house \u4e2d\u6709\u975e\u5e38\u591a\u7684\u6df1\u5165\u8ba8\u8bba\uff0c\u4e5f\u6709\u5f88\u591a\u534f\u4f5c\uff0c\u6700\u540e\u4e5f\u83b7\u5f97\u4e86\u5f88\u591a\u9ed1\u5ba2\u677e\u5956\u9879\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_1","title":"\u627e\u5230\u81ea\u5df1\u7684\u5b9a\u4f4d\uff0c\u5982\u679c\u4e0d\u77e5\u9053\uff0c\u6301\u7eed\u63a2\u7d22\u548c\u5bfb\u627e","text":"<p>\u6211\u4eec\u81ea\u5df1\u7684\u5b9a\u4f4d\u662f\u5f00\u53d1\u8005\u793e\u533a\uff0c\u6211\u4eec\u66f4\u5173\u6ce8\u6280\u672f\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u4eec\u505a hacker house \u62db\u52df\u7684\u4e5f\u662f\u5f00\u53d1\u8005\u3002\u8fd9\u6b21\u6211\u7528\u540c\u6837\u7684\u5185\u5bb9\u5728\u6211\u4eec\u7684 hacker house \u4ee5\u53ca zuconnect(zuzalu) \u5206\u522b\u8fdb\u884c\u4e86\u5206\u4eab\uff0c\u53d1\u73b0\u5728\u6211\u4eec house \u6548\u679c\u66f4\u597d\uff0c\u5927\u5bb6\u5bf9\u5185\u5bb9\u66f4\u611f\u5174\u8da3\uff0c\u6709\u66f4\u591a\u7684\u8ba8\u8bba\uff0c\u800c\u5728 zuconnect\uff0c\u53cd\u800c\u6ca1\u6709\u5f88\u597d\u7684\u8ba8\u8bba\uff0c\u6211\u611f\u89c9\u662f\u56e0\u4e3a zuconnect \u5f88\u5927\u4e00\u90e8\u5206\u4eba\u4e0d\u662f\u5f00\u53d1\u8005\uff0c\u6240\u4ee5\u5bf9 ZKP \u91cc\u9762\u7684\u4e00\u4e9b\u6280\u672f\u7ec6\u8282\u4e0d\u662f\u592a\u611f\u5174\u8da3\uff0c\u5927\u591a\u66f4\u4e13\u6ce8\u5e94\u7528\u5c42\u9762\u7684\u521b\u65b0\u3002</p> <p>\u6211\u542c\u5230\u4e00\u4e9b\u670b\u53cb\u8bf4\u6211\u4eec\u505a\u7684\u4e8b\u60c5\u6bd4\u8f83\u786c\u6838\uff0c\u8fd9\u4e5f\u8ba9\u6211\u770b\u5230\u4e86\u6211\u4eec\u81ea\u5df1\u505a\u7684\u4e8b\u60c5\u7684\u5dee\u5f02\u5316\u7684\u4ef7\u503c\uff0c\u53ea\u8981\u4e13\u6ce8\u505a\u81ea\u5df1\u64c5\u957f\u7684\u4e8b\u60c5\uff0c\u5c31\u4f1a\u8d70\u51fa\u72ec\u4e00\u65e0\u4e8c\u7684\u8def\u3002\u6211\u4eec\u8fd9\u6b21\u571f\u8033\u5176\u7684 hacker house \u5c31\u662f\u4e00\u4e2a\u4f8b\u8bc1\uff0c\u524d\u671f\u62db\u52df\uff0c\u6709\u4e00\u534a\u7684\u7533\u8bf7\u4eba\u662f\u901a\u8fc7\u670b\u53cb\u4ecb\u7ecd\u8fc7\u6765\u7684\uff0c\u5728 Devconnect \u73b0\u573a\uff0c\u4e5f\u78b0\u5230\u4e00\u4e9b\u964c\u751f\u7684\u670b\u53cb\uff0c\u8bf4\u770b\u5230\u6211\u4eec\u7684\u6d3b\u52a8\u505a\u7684\u4e0d\u9519\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_2","title":"\u597d\u7684\u5927\u4f1a\u53ef\u4ee5\u805a\u96c6\u4f18\u79c0\u7684\u4eba\u624d","text":"<p>\u8fd9\u662f\u6211\u4eec\u79ef\u7d2f\u7684\u4e00\u4e2a\u91cd\u8981\u7ecf\u9a8c\uff0c\u6700\u5f00\u59cb\u6211\u4eec\u4ec0\u4e48\u6d77\u5916\u7684\u8d44\u6e90\u90fd\u6ca1\u6709\uff0c\u4f9d\u9760\u5927\u4f1a\u7684\u6d41\u91cf\u83b7\u5f97\u4e86\u5173\u6ce8\uff0c\u4e3a\u6211\u4eec\u7684 hacker house \u5438\u5f15\u5230\u4e86\u975e\u5e38\u4f18\u79c0\u7684\u4eba\uff0c\u8fd9\u4e9b\u4eba\u4e5f\u5e2e\u6211\u4eec\u5e26\u6765\u66f4\u591a\u4f18\u79c0\u7684\u4eba\uff0c\u8fd9\u662f\u4e00\u4e2a\u6b63\u5411\u5faa\u73af\uff0c\u4e5f\u662f\u8ba9\u6211\u4eec\u6301\u7eed\u8fdb\u6b65\u7684\u91cd\u8981\u56e0\u7d20\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_3","title":"\u5927\u4f1a\u671f\u95f4\u592a\u5377\uff0c\u8ba9\u6211\u4eec\u524d\u7f6e\u6d3b\u52a8\u5427","text":"<p>\u5927\u4f1a\u671f\u95f4\u529e\u6d3b\u52a8\u7684\u95ee\u9898\u662f\uff0c\u56e0\u4e3a\u5404\u79cd\u6d3b\u52a8\u548c\u4ea4\u6d41\u6bd4\u8f83\u591a\uff0c\u5927\u5bb6\u5f88\u96be\u5b8c\u5168\u4e13\u6ce8\u4e8e\u6211\u4eec\u7684 hacker house\u3002</p> <p>\u8fd9\u6b21\u6211\u4eec\u8c03\u6574\u4e86\u4e00\u4e0b\uff0c\u65f6\u95f4\u603b\u5171\u56db\u5468\uff0c\u5728 Devconnect \u5f00\u59cb\u524d\u4e09\u5468\u5c31\u5f00\u59cb\u6211\u4eec\u7684 hacker house\uff0c\u6700\u540e\u4e00\u5468\u548c Devconnect \u5927\u4f1a\u91cd\u5408\uff0c\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u4e2a\u5b89\u6392\u662f\u6b63\u786e\u7684\uff0c\u524d\u4e09\u5468\u5927\u5bb6\u57fa\u672c\u90fd\u975e\u5e38\u4e13\u6ce8\u4e8e\u6211\u4eec\u7684 house\uff0c\u8ba8\u8bba\u548c\u5b66\u4e60\u6c1b\u56f4\u975e\u5e38\u597d\uff0c\u6700\u540e\u4e00\u5468\u4e3b\u8981\u4e3e\u529e\u6d3b\u52a8\u3001\u53c2\u52a0\u5927\u4f1a\u3001\u6253\u9ed1\u5ba2\u677e\u3001\u548c\u5176\u4ed6\u4f19\u4f34\u4ea4\u6d41\uff0c\u6574\u4e2a\u56db\u5468\u5b89\u6392\u975e\u5e38\u9971\u6ee1\u3002</p> <p>\u5927\u4f1a\u671f\u95f4\u4e5f\u662f\u7ed9\u6211\u4eec\u81ea\u5df1\u79ef\u7d2f\u58f0\u8a89\u7684\u673a\u4f1a\uff0c\u548c\u5176\u4ed6\u670b\u53cb\u4ea4\u6d41\u7684\u65f6\u5019\u4f1a\u63d0\u5230\u6211\u4eec\u524d\u4e09\u5468\u53d6\u5f97\u7684\u6210\u679c\uff0c\u8fd9\u79cd\u53e3\u53e3\u76f8\u4f20\u5176\u5b9e\u5f88\u6709\u6548\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_4","title":"\u767d\u677f\u6548\u679c\u975e\u5e38\u597d","text":"<p>\u6211\u4eec\u8fd9\u6b21\u9f13\u52b1\u6240\u6709\u4eba\u90fd\u901a\u8fc7\u767d\u677f\u6765\u5206\u4eab\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\uff0c\u5206\u4eab\u4eba\u5f88\u96be\u8df3\u8fc7\u67d0\u4e2a\u7ec6\u8282\uff0c\u56e0\u4e3a\u5199\u4e0b\u6765\u7684\u4e1c\u897f\u90fd\u8981\u89e3\u91ca\u7ed9\u522b\u4eba\u542c\uff0c\u53e6\u5916\u56e0\u4e3a\u9700\u8981\u5199\u51fa\u6765\u548c\u8bb2\u51fa\u6765\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u6240\u8bb2\u8ff0\u7684\u5185\u5bb9\u6bd4\u8f83\u719f\u6089\u624d\u884c\uff0c\u8fd9\u6837\u5c31\u8981\u6c42\u5206\u4eab\u4eba\u8981\u51c6\u5907\u5145\u5206\u624d\u884c\u3002\u8fd8\u6709\u4e00\u70b9\uff0c\u5c31\u662f\u5199\u767d\u677f\u6bd4\u8f83\u6162\uff0c\u8fd9\u6837\u5c31\u7ed9\u4e86\u542c\u7684\u4eba\u6bd4\u8f83\u591a\u7684\u601d\u8003\u65f6\u95f4\uff0c\u5bb9\u6613\u8ddf\u4e0a\u5206\u4eab\u4eba\u7684\u601d\u8def\uff0c\u6700\u7ec8\u8fbe\u5230\u6bd4\u8f83\u597d\u7684\u5206\u4eab\u6548\u679c\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_5","title":"\u8010\u5fc3\u5f88\u91cd\u8981","text":"<p>\u793e\u533a\u662f\u5173\u4e8e\u4eba\u7684\u96c6\u5408\uff0c\u6784\u5efa\u4fe1\u4efb\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u4fe1\u4efb\u7684\u6784\u5efa\u8fc7\u7a0b\u6bd4\u8f83\u6162\uff0c\u6cbf\u7740\u6b63\u786e\u7684\u65b9\u5411\u53ef\u80fd\u9700\u8981\u534a\u5e74\u5230\u4e00\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u9010\u6e10\u83b7\u5f97\u884c\u4e1a\u8ba4\u53ef\uff0c\u5f88\u591a\u4eba\u505a\u793e\u533a\u6ca1\u6709\u8010\u5fc3\u6216\u8005\u4e0d\u77e5\u9053\u524d\u671f\u7684\u79ef\u7d2f\u662f\u7f13\u6162\u7684\uff0c\u8fc7\u65e9\u8ffd\u6c42\u4e00\u4e9b\u793e\u533a\u6570\u636e\uff0c\u6bd4\u5982\u4eba\u6570\u7b49\uff0c\u8fd9\u79cd kpi \u5bb9\u6613\u6bc1\u6389\u793e\u533a\uff0c\u56e0\u4e3a\u521d\u59cb\u7684\u4fe1\u4efb\u96be\u4ee5\u91cf\u5316\u3002\u4fdd\u6301\u8010\u5fc3\uff0c\u6700\u7ec8\u4f1a\u83b7\u5f97\u884c\u4e1a\u7684\u8ba4\u53ef\u3002</p> <p>\u8fd9\u4e00\u70b9\u4e0d\u4f46\u5bf9\u4e8e\u6280\u672f\u793e\u533a\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u9879\u76ee\u7684\u793e\u533a\u6765\u8bb2\uff0c\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u4ee4\u6211\u5370\u8c61\u6df1\u523b\u7684\u662f EZKL \u548c ZK Email \u8fd9\u4e24\u4e2a\u9879\u76ee\uff0c\u4ed6\u4eec\u4ece\u6700\u5f00\u59cb\u4eba\u5f88\u5c11\u7684\u65f6\u5019\u5c31\u975e\u5e38\u8ba4\u771f\u7684\u5728\u7ef4\u62a4\u81ea\u5df1\u7684\u793e\u533a\uff0c\u5728 telegram \u7fa4\u91cc\u8ba4\u771f\u56de\u7b54\u6bcf\u4e00\u4e2a\u95ee\u9898\uff0c\u534f\u52a9\u89e3\u51b3\u5f00\u53d1\u8005\u9047\u5230\u7684\u95ee\u9898\uff0c\u5feb\u901f\u7684\u8fed\u4ee3\u4ea7\u54c1\u3002\u8fd9\u4e9b\u5c0f\u7684\u6b63\u9762\u7684\u4e92\u52a8\u662f\u5f62\u6210\u597d\u7684\u793e\u533a\u7684\u5173\u952e\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_6","title":"\u793e\u533a\u4e0d\u80fd\u88ab\u63a7\u5236\uff0c\u53ea\u80fd\u88ab\u5f15\u5bfc\uff0c\u5f15\u5bfc\u7684\u6700\u597d\u65b9\u5f0f\u662f\u81ea\u5df1\u4e0b\u573a\u5e72","text":"<p>\u5728\u793e\u533a\u4e2d\u4eba\u7684\u5173\u7cfb\u6bd4\u8f83\u5e73\u7b49\uff0c\u4f60\u5f88\u96be\u8981\u6c42\u793e\u533a\u7684\u5176\u4ed6\u4eba\u53bb\u505a\u4f60\u60f3\u505a\u800c\u5bf9\u65b9\u4e0d\u60f3\u505a\u7684\u4e8b\uff0c\u4eba\u5bb6\u4e0d\u723d\u5c31\u79bb\u5f00\u4e86\uff0c\u5c31\u8fde Linux \u7684\u521b\u59cb\u4eba Linus Torvalds \u4e5f\u8bf4\uff0c\u5728\u793e\u533a\u4e2d\u4f60\u53ea\u80fd\u5728\u4ed6\u4eec\u60f3\u505a\u7684\u65b9\u5411\u4e0a\u5f15\u5bfc\u3002\u6211\u89c9\u5f97\u6700\u597d\u7684\u5f15\u5bfc\u65b9\u5f0f\u5c31\u662f\u53c2\u4e0e\u5230\u5177\u4f53\u7684\u4e8b\u52a1\u4e2d\uff0c\u63a8\u52a8\u4e8b\u60c5\u5411\u81ea\u5df1\u60f3\u8981\u7684\u65b9\u5411\u53d1\u5c55\uff0c\u6bd4\u5982\u8fd9\u6b21\uff0c\u6211\u4e5f\u8ddf\u7740\u5927\u5bb6\u8bfb paper \u548c\u505a\u5206\u4eab\uff0c\u6211\u4e2a\u4eba\u7684\u6536\u83b7\u4e5f\u5f88\u5927\uff0c\u540c\u65f6\u4e5f\u518d\u6b21\u9a8c\u8bc1\u4e86\u6211\u4eec\u8fd9\u79cd\u7ec4\u7ec7\u65b9\u5f0f\u7684\u6709\u6548\u6027\uff0c\u4e5f\u7ed9\u540e\u7eed\u8981\u505a\u7684\u4e8b\u60c5\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u601d\u8def\u548c\u7ecf\u9a8c\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_7","title":"\u96be\u7684\u4e8b\u53ef\u4ee5\u5438\u5f15\u4f18\u79c0\u7684\u4eba","text":"<p>\u8fd9\u6b21\u7684\u8981\u6c42\u662f\u9700\u8981\u6bcf\u4e2a\u4eba\u8bfb\u4e00\u7bc7 ZKP \u65b9\u9762\u7684 paper\uff0c\u7136\u540e\u6bcf\u5468\u5411\u5927\u5bb6\u5206\u4eab\uff0c\u8fd9\u4e2a\u4e8b\u60c5\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u96be\u4ee5\u60f3\u8c61\u7684\uff0c\u5927\u5bb6\u90fd\u8ba4\u4e3a\u8bfb\u4e0d\u61c2\uff0c\u4f46\u8fd9\u6b21\u4e0b\u6765\uff0c\u5927\u5bb6\u90fd\u5b8c\u6210\u7684\u975e\u5e38\u4e0d\u9519\uff0c\u6574\u4f53\u7684\u6210\u5c31\u611f\u975e\u5e38\u5f3a\uff0c\u8fd8\u8bf4\u5e0c\u671b\u540e\u9762\u7684 hacker house \u7ee7\u7eed\u591a\u8bfb paper\u3002\u4e4b\u6240\u4ee5\u80fd\u5b8c\u6210\u7684\u4e0d\u9519\uff0c\u6211\u89c9\u5f97\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4ef6\u96be\u7684\u4e8b\u60c5\u5438\u5f15\u4e86\u4f18\u79c0\u7684\u4eba\uff0c\u672c\u8eab\u5c31\u5df2\u7ecf\u6210\u529f\u4e86\u4e00\u534a\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_8","title":"\u7ebf\u4e0b\u6d3b\u52a8\u5f88\u91cd\u8981\uff0c\u4eba\u4e0e\u4eba\u4e92\u76f8\u6fc0\u53d1","text":"<p>\u4eba\u6700\u5173\u6ce8\u7684\u8fd8\u662f\u4eba\u3002\u7ebf\u4e0b\u6d3b\u52a8\u6709\u673a\u4f1a\u8ba9\u6765\u81ea\u4e0d\u540c\u5730\u57df\u7684\u4eba\u8fdb\u884c\u4ea4\u6d41\uff0c\u5bb9\u6613\u6fc0\u53d1\u4e2a\u4f53\u8fdb\u6b65\u7684\u52a8\u529b\u3002\u6bd4\u5982\u6211\u4eec\u51e0\u4e2a\u82f1\u8bed\u53e3\u8bed\u6ca1\u90a3\u4e48\u6d41\u5229\u7684\u4eba\uff0c\u56e0\u4e3a\u5e0c\u671b\u548c\u5927\u5bb6\u4ea4\u6d41\uff0c\u6240\u4ee5\u6709\u5f88\u5927\u7684\u52a8\u529b\u63d0\u5347\u81ea\u5df1\u7684\u82f1\u6587\u53e3\u8bed\uff0c\u8fd9\u6b21\u4e5f\u786e\u5b9e\u63d0\u5347\u4e86\u5f88\u591a\u3002  \u7ebf\u4e0b\u6d3b\u52a8\u5f88\u5bb9\u6613\u521b\u9020\u4fe1\u4efb\u3002\u8fd9\u4e00\u70b9\u5728\u7f51\u7edc\u4e0a\u5f88\u96be\u505a\u5230\uff0c\u56e0\u4e3a\u4fe1\u4efb\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u60c5\u611f\u4e0a\u7684\u8fde\u63a5\u548c\u826f\u597d\u7684\u4e92\u52a8\uff0c\u8fd9\u79cd\u4fe1\u4efb\u7684\u5efa\u7acb\u901a\u8fc7\u7ebf\u4e0b\u7684\u4ea4\u6d41\u66f4\u5bb9\u6613\u8fbe\u6210\u3002</p>"},{"location":"2023-12-05/thoughts-about-community/#_9","title":"\u6700\u540e","text":"<p>\u6211\u4eec\u5728\u6d77\u5916\u7684\u63a2\u7d22\uff0c\u4ece 2023 \u5e74 2 \u6708\u5f00\u59cb\uff0c\u7ecf\u8fc7 9 \u4e2a\u6708\uff0c\u5b8c\u6210\u4e86\u4ece\u96f6\u5230\u4e00\u7684\u9636\u6bb5\uff0c\u79ef\u7d2f\u4e86\u4e00\u5b9a\u7684\u58f0\u8a89\uff0c\u4e3a\u6211\u4eec\u540e\u9762\u7684\u53d1\u5c55\u5960\u5b9a\u4e86\u8f83\u597d\u7684\u57fa\u7840\u3002\u6211\u4e2a\u4eba\u4e5f\u4ece\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8ba4\u8bc6\u4e86\u8ba4\u8bc6\u4e86\u5f88\u591a\u4eba\uff0c\u770b\u5230\u4e86\u4eba\u4e0e\u4eba\u4e4b\u95f4\u826f\u597d\u4e92\u52a8\u7684\u91cd\u8981\u6027\u548c\u4e50\u8da3\u3002\u6211\u8fd8\u4f1a\u7ee7\u7eed\u63a2\u7d22\uff0c\u63ed\u793a\u4e16\u754c\u66f4\u591a\u7684\u771f\u76f8\uff0c\u521b\u9020\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002</p>"},{"location":"2023-12-06/publish-obsidian-notes-to-website/","title":"\u5982\u4f55\u53d1\u5e03\u4e00\u4e2a Obsidian \u7684\u7b14\u8bb0\u7f51\u7ad9","text":"<p>\u6628\u5929\u628a Obsidian \u53d1\u5e03\u7f51\u7ad9\u7684\u4e8b\u60c5\u641e\u5b9a\u4e86\uff0c\u8fd8\u4e70\u4e86\u4e2a\u65b0\u7684\u57df\u540d\uff0c\u4e0a\u7ebf\u4e86 https://harryx1x1.fun/</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u8fd8\u633a\u987a\u7545\u7684\uff0c\u7528 obsidian \u5199\uff0c\u7136\u540e\u53d1\u5e03\u5230 github\uff0c\u81ea\u52a8\u90e8\u7f72\u5230\u7f51\u7ad9\u4e86\uff0c\u4e0d\u9700\u8981\u592a\u6298\u817e\u4ee3\u7801\u7684\u4e8b\u60c5\uff0c\u7b80\u5355\uff0c\u8282\u7701\u65f6\u95f4\u3002\u53e6\u5916\u8fd8\u80fd\u7ee7\u7eed\u7528 obsidian \u5199\u4e1c\u897f\uff0c\u4fdd\u7559 md \u6587\u4ef6\u548c\u5199\u4f5c\u4e60\u60ef\u3002</p> <p>\u8fd9\u4e2a\u6d41\u7a0b\u6bd4 gatsby \u597d\u7684\u4e00\u70b9\u662f\uff0c\u66f4\u7b80\u5355\uff0cgatsby \u8fd8\u662f\u9700\u8981\u505a\u76f8\u5bf9\u591a\u7684\u4ee3\u7801\u65b9\u9762\u7684\u5de5\u4f5c\u7684\uff0c\u5de5\u4f5c\u6d41\u57fa\u672c\u6ca1\u6cd5\u4fdd\u6301\u5728 obsidian \u4e2d\u5b8c\u6210\uff0c\u9ebb\u70e6\u3002</p> <p>\u80fd\u4fdd\u6301\u7528\u6237\u4e60\u60ef\u548c\u5de5\u4f5c\u6d41\u7684\u4e8b\u60c5\u66f4\u597d\u3002</p> <p>\u4e3b\u8981\u6709\u4e24\u90e8\u5206\u8bbe\u7f6e\uff1a</p> <ol> <li>Obsidian \u53d1\u5e03\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc \u3002</li> <li>\u57df\u540d\u8bbe\u7f6e\u53ef\u4ee5\u53c2\u8003 \u8fd9\u91cc\u3002</li> </ol> <p>\u57df\u540d\u8bbe\u7f6e\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a</p> <ol> <li>github \u8fd9\u8fb9\u57df\u540d\u7684\u751f\u6548\u53ef\u80fd\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6</li> <li>\u8bb0\u5f97\u5728 docs \u4e0b\u9762\u52a0\u4e00\u4e2a CNAME \u6587\u4ef6\uff0c\u5185\u5bb9\u662f\u81ea\u5df1\u8bbe\u7f6e\u7684\u57df\u540d/\u5b50\u57df\u540d\u3002\u8981\u4e0d\u7136\u6bcf\u6b21\u90e8\u7f72\u540e\uff0c\u5728 github \u7684\u57df\u540d\u8bbe\u7f6e\u5c31\u4e22\u5931\u4e86</li> </ol> <p>\u9644\uff1a\u6211\u5728\u57df\u540d\u670d\u52a1\u5546 namecheap \u7684\u57df\u540d\u8bbe\u7f6e\u662f\u8fd9\u6837\u7684:</p> <p></p> <p>\u5982\u4f55\u60f3\u5728\u672c\u5730\u8fd0\u884c, \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 <code>mkdocs serve</code></p>"},{"location":"2023-12-07/zkp-space-lookups/","title":"Twitter space: Lookups","text":""},{"location":"2023-12-07/zkp-space-lookups/#twitter-space","title":"Twitter space \u94fe\u63a5","text":"<p>https://twitter.com/i/spaces/1gqxvQzwmbOJB</p>"},{"location":"2023-12-07/zkp-space-lookups/#_1","title":"\u5feb\u901f\u7b14\u8bb0\uff08\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\uff09","text":""},{"location":"2023-12-07/zkp-space-lookups/#_2","title":"\u90ed\u8001\u5e08","text":"<ul> <li>\u770b\u8d77\u6765\u7b80\u5355\uff0c\u5b9e\u9645\u4e0d\u7b80\u5355</li> <li>\u571f\u8033\u5176\u90a3\u8fb9\u7ed9\u5927\u5bb6\u8bb2\u4e86 landscape\uff0c\u524d\u9762\u90fd\u8fd8\u7b97\u7b80\u5355\uff0c\u5230\u4e86 lasso \u5c31\u6709\u70b9\u7ed5\u4e86</li> <li>\u4f46 lasso \u53ef\u80fd\u4e0d\u7b97 lookup\uff0c\u4f46\u53ef\u4ee5\u62ff\u6765\u7528 lookup</li> <li>lookup \u7b97\u662f\u76ee\u7684\uff0c\u5f88\u591a\u4e1c\u897f\u90fd\u53ef\u4ee5\u505a lookup</li> <li>\u591a\u9879\u5f0f\u627f\u8bfa\u4e5f\u53ef\u4ee5\u7528\u6765\u505a lookup</li> <li>\u770b\u8d77\u6765\u5bb9\u6613\u805a\u5408\uff0c\u5b9e\u9645\u4e5f\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613</li> <li>lookup \u5728\u5927\u7684\u7535\u8def\u91cc\u9762\u6709\u5f88\u591a\u7528\u6cd5</li> <li>\u603b\u4f53\u4e0a\u6211\u89c9\u5f97\u770b\u8d77\u6765\u4e0d\u590d\u6742\uff0c\u4f46\u534f\u8bae\u7ec6\u8282\u8fd8\u633a\u591a\u7684</li> <li>\u5e94\u7528\u573a\u666f\u8981\u9009\u54ea\u79cd lookup\uff0c\u8fd8\u633a tricky\uff0c\u5f88\u96be\u6709\u67d0\u4e2a lookup \u53ef\u4ee5\u4e00\u7edf\u6c5f\u6e56</li> <li>lookup \u7684\u6027\u80fd\u6bd4\u8f83\u4e5f\u6bd4\u8f83\u7384\u5b66</li> <li>lookup \u7684\u5b9e\u73b0\u8fd8\u6bd4\u8f83\u5c11\uff0c\u5927\u591a\u5728\u60f3\u6cd5\u548c\u5b9e\u73b0\u5c42\uff0c\u5b9e\u9645\u7528\u7684\u65f6\u5019\u8fd8\u662f\u7528\u7684\u6bd4\u8f83\u8001\u7684\u4e1c\u897f</li> <li>lookup \u6700\u8fd1\u6ca1\u6709\u65b0\u7684\u8bba\u6587</li> </ul>"},{"location":"2023-12-07/zkp-space-lookups/#_3","title":"\u5c0f\u718a","text":"<ul> <li>sumcheck \u548c GKR \u5c5e\u4e8e PIOP \u8fd9\u4e2a\u7c7b\u522b</li> <li>cq \u5f15\u7528\u4e86 hab22\uff0chab22 \u8bf4\u81ea\u5df1\u53eb logup</li> <li>\u6700\u8fd1\u770b\u4e86\u5728 decision tree \u7684\u5e94\u7528\uff0c\u8bba\u6587\u4e2d\u7684\u9519\u8bef\u8fd8\u633a\u591a\u7684\uff0c\u4e0d\u8fc7\u6709\u4e09\u4e2a\u8d21\u732e<ul> <li>\u628a cq \u6539\u8fdb\u4e86\u4e00\u70b9\uff0c\u52a0\u4e86 zk \u5c5e\u6027\uff0c\u4fdd\u6301\u590d\u6742\u5ea6\u4e0d\u53d8</li> <li>matrix lookup<ul> <li>\u6211\u4eec\u5e73\u65f6 lookup\uff0c\u4e0d\u5173\u5fc3\u8868\u683c\u7684\u5bbd\u5ea6</li> <li>\u548c vector \u65e0\u5173\u7684 lookup<ul> <li>\u6211\u4eec lookup \u4e00\u884c\uff0c\u4f1a\u968f\u673a\u7ec4\u5408\uff0c\u901a\u5e38\u4e0d\u4f1a\u5f88\u5927\uff0c\u8868\u683c\u7684\u5bbd\u5ea6\u662f\u7ebf\u6027\u7684</li> <li>\u5982\u679c\u8868\u683c\u5bbd\u5ea6\u662f\u51e0\u5341\uff0c\u6211\u53ef\u4ee5\u8ba9\u590d\u6742\u5ea6\u548c\u8868\u683c\u5bbd\u5ea6\u65e0\u5173</li> <li>\u5e94\u7528\u573a\u666f\u5728 zkml \u4e2d\u4f1a\u7528\u5230<ul> <li>zkml \u4e2d\u4e00\u4e2a x \u53ef\u80fd\u662f vector\uff0c\u6709\u51e0\u5341\u4e2a\u7279\u5f81</li> <li>\u8fd9\u65f6\u5019\u590d\u6742\u5ea6\u548c vector \u957f\u5ea6\u7ebf\u6027\u6709\u5173\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u6709\u7528</li> </ul> </li> </ul> </li> </ul> </li> <li>\u548c zkml \u6709\u5173\u7684 lookup<ul> <li>zkml \u4e2d\u4e0d\u5173\u5fc3\u6a21\u578b\uff0c\u53ea\u5173\u5fc3\u4e00\u4e2a valid \u7684\u8f93\u51fa\u548c\u4e00\u4e2a proof</li> <li>\u8fd9\u5c31\u53ef\u4ee5\u4f7f\u7528 lookup argument</li> <li>\u6bd4\u5982\uff1a<ul> <li>prover commit \u4e00\u4e2a\u6a21\u578b\uff0c\u5bf9\u4ec0\u4e48\u8303\u56f4\u7684\u8f93\u51fa\uff0ctable \u662f\u6a21\u578b\u7684\u4fe1\u606f\uff0c\u662f commit \u7684</li> <li>prover \u9700\u8981\u63d0\u4f9b f(x) \u7684\u503c\uff0c\u8bc1\u660e\u548c x \u7684\u5173\u7cfb</li> </ul> </li> </ul> </li> </ul> </li> <li>2+2 = 4 \u5982\u4f55\u8bc1\u660e<ul> <li>\u8f93\u5165\uff082,2\uff09\u548c\u8f93\u51fa\uff084\uff09\u90fd\u4f1a\u653e\u5230\u8868\u4e2d\uff0c\u6bd4\u5982\u653e\u5230\u4e00\u884c</li> <li>\u8bc1\u660e\u8f93\u5165\u8f93\u51fa\u90fd\u5728\u8868\u7684\u67d0\u4e00\u884c\u4e2d\uff08lookup \u5230\uff09\uff0c\u5c31\u8868\u793a\u7ea6\u675f\u6210\u7acb</li> </ul> </li> </ul>"},{"location":"2023-12-07/zkp-space-lookups/#0xhhh","title":"0xhhh","text":"<ul> <li>halo2 lookup<ul> <li>\u6709\u4e00\u4e2a\u5411\u91cf\uff0c\u5e0c\u671b\u53bb\u8bc1\u660e\u67e5\u8be2\u5411\u91cf f \u662f\u8868\u683c\u5411\u91cf t \u4e2d\u7684</li> </ul> </li> <li>plookup<ul> <li>\u548c halo2 lookup \u76f8\u6bd4\uff0c\u4e0d\u9700\u8981\u91cd\u6392\u4e24\u4e2a\u5143\u7d20</li> </ul> </li> <li>cq\u3001caulk \u76f8\u5bf9\u8fd9\u4e24\u4e2a\u7684\u4f18\u5316\u5728\u54ea<ul> <li>\u5c0f\u718a<ul> <li>caulk \u591a\u4e86\u4e2a\u9884\u5904\u7406\uff0c\u4f7f\u5f97\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u548c\u8868\u7684\u5927\u5c0f\u65e0\u5173</li> <li>\u8fd9\u6837\u53ef\u4ee5\u641e\u5f88\u5927\u7684\u8868</li> <li>\u81ea\u5df1\u4e3b\u8981\u770b\u4e86 plookup \u548c cq</li> </ul> </li> </ul> </li> <li>lasso<ul> <li>\u5bf9 t \u7528\u4e86 spark\uff0c\u62c6\u6210 sub table\uff0c\u53d8\u6210\u4f4e degree \u7684\u591a\u9879\u5f0f\uff0c\u53ef\u4ee5\u505a commit</li> <li>lasso \u7528\u5230 GKR + spartan \u7684 spark\uff0c\u6ca1\u6709 get \u7cbe\u9ad3\uff0c\u60f3\u77e5\u9053 GKR \u7684\u7cbe\u9ad3\u5728\u54ea\u91cc</li> </ul> </li> </ul>"},{"location":"2023-12-07/zkp-space-lookups/#_4","title":"\u90b9\u8001\u5e08","text":"<ul> <li>\u6700\u8fd1\u6ca1\u6709\u770b\u8fc7 lookup</li> <li>ingonyama \u5199\u4e86\u4e2a\u6587\u7ae0\uff0c\u505a\u4e86\u4e2a\u5bf9\u6bd4</li> <li>\u5f88\u591a zkvm \u9879\u76ee\u7528 logup\uff0c\u53ef\u4ee5\u51cf\u5c11\u5bf9 witness \u627f\u8bfa\u7684\u5f00\u9500</li> <li>lasso<ul> <li>lasso \u5b9e\u73b0\u548c\u76ee\u6807\u8fd8\u6709\u5dee\u8ddd</li> <li>lasso \u60f3\u6362\u65b9\u6848\uff0cJustin Thaler 11 \u6708\u4efd\u6709\u4e2ablog \u8c08\u8fd9\u4e2a\u4e8b<ul> <li>\u73b0\u5728\u662f\u57fa\u4e8e\u66f2\u7ebf\u7684\u627f\u8bfa\uff0c\u53ef\u80fd\u8981\u6362\uff0c\u6362\u6210\u57fa\u4e8e binary shield \u7684\uff0c\u6539 breakdown \u548cLigero \u7684\u627f\u8bfa</li> </ul> </li> </ul> </li> </ul>"},{"location":"2023-12-07/zkp-space-lookups/#even","title":"Even","text":"<ul> <li>\u4e4b\u524d\u770b\u8fc7 plookup \u548c flookup</li> <li>\u4e4b\u524d\u770b\u8fc7 lasso</li> <li>\u571f\u8033\u5176\u770b\u4e86 caulk \u548c caulk+</li> <li>\u4e5f\u5728\u770b logup</li> <li>\u611f\u53d7<ul> <li>\u770b\u4e86 lasso \u548c caulk \u540e\uff0c\u5f88\u591a\u7684\u534f\u8bae\uff0c\u6253\u5f00\u601d\u8def\u540e\u90fd\u80fd\u7528\u6765\u505a lookup</li> <li>\u4e0d\u8fc7\u5177\u4f53\u8981\u770b\u7528\u5230\u54ea\u4e9b\u573a\u666f\u4e0b</li> <li>\u540e\u9762\u5f88\u591a\u7684 lookup \u90fd\u53ef\u4ee5\u7528\u73b0\u6709\u7684\u534f\u8bae\u53bb\u6539\u505a\u6210 lookup</li> </ul> </li> <li>\u65e9\u671f\u7528 copy constraint</li> <li>caulk \u7528 kzg10 \u6539\u6539\u505a lookup</li> <li>lasso \u7528 spark \u53bb\u505a</li> <li>logup \u548c cq \u7528 sumcheck</li> <li>\u8fd9\u4e9b\u90fd\u7528\u73b0\u6709\u7684\u4e1c\u897f\uff0c\u505a\u4e00\u4e9b\u73b0\u6709\u7684\u6539\u52a8\uff0c\u7136\u540e\u53bb\u505a lookup</li> <li>\u95ee\u9898\uff1adynamic lookup \u662f\u5982\u4f55\u5b9e\u73b0\u7684<ul> <li>PSE zkevm \u91cc\u9762\u7528\u8fc7\uff0clookup table \u4e0d\u4e00\u5b9a\u662f\u9759\u6001\u7684\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u662f\u52a8\u6001\u7684</li> </ul> </li> </ul>"},{"location":"2023-12-07/zkp-space-lookups/#-","title":"\u6c34\u6ef4\ud83d\udca7-\u9a6c","text":"<ul> <li>\u81ea\u5df1\u5728\u7814\u7a76\u4e00\u4e9b halo2 \u57fa\u7840\u7684\u534f\u8bae</li> <li>\u6709\u4e2a\u95ee\u9898\uff0c\u770b halo2 \u7684\u65f6\u5019\uff0c\u6709\u4e2a look any\uff1blookup \u7684\u8bf7\u6c42\u662f\u548c table \u5bf9\u9f50\u7684\uff0c\u4f46 look any \u662f witness \u5bf9 witness \u7684\uff0c\u4e0d\u9700\u8981\u8bc1\u660e<ul> <li>\u5c0f\u718a\uff1a\u8fd9\u662f fully zk</li> </ul> </li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/","title":"Lookup Arguments Overview","text":"<p>\u7b14\u8bb0\u6574\u7406\u81ea 2023.12.9 \u90ed\u5b87\u8001\u5e08\u5728 dapp learning \u793e\u533a\u7684\u5206\u4eab</p>"},{"location":"2023-12-09/lookup-arguments-overview/#1-lookup-gate","title":"1. Lookup gate","text":"<ul> <li>Lookup Arguments \u73b0\u5728\u53d8\u5f97\u7279\u522b\u91cd\u8981\uff0c\u80fd\u89e3\u51b3\u5f88\u591a\u68d8\u624b\u7684\u95ee\u9898</li> <li>\u901a\u5e38\u6211\u4eec\u4f1a\u8bc1\u660e circuit\uff0c\u4e00\u822c\u662f\u52a0\u6cd5\u6216\u8005\u4e58\u6cd5\uff0c\u6bcf\u4e2a\u95e8\u6709\u4e24\u4e2a\u8f93\u5165\u548c\u4e00\u4e2a\u8f93\u51fa</li> <li>P \u548c V \u4ea4\u4e92\u8bc1\u660e\u8ba1\u7b97\u662f\u5bf9\u7684\uff0c\u6bd4\u5982\uff1a<ul> <li>a + b = c</li> <li>a * b = c</li> <li></li> </ul> </li> <li>\u6709\u4e9b\u8fd0\u7b97\u9700\u8981\u6bd4\u8f83\u9ad8 degree \u7684\u95e8</li> <li>\u65b0\u7684\u95e8 lookup gate \u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898<ul> <li>\u53ef\u4ee5\u628a\u8f93\u5165\u8f93\u51fa\u8fd8\u6709\u8ba1\u7b97\u7ed3\u679c\u90fd\u653e\u5728\u8868\u4e2d</li> <li>\u8fd9\u6837\u53ef\u4ee5\u628a\u7535\u8def\u4e2d\u7684\u67d0\u4e2a\u95e8\u66ff\u6362\u4e3a lookup gate</li> <li>\u5982\u679c\u8ba1\u7b97\u91cf\u4e0d\u662f\u5f88\u5927\uff0c\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8fd0\u7b97\u653e\u5728 lookup table \u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u8ba1\u7b97\u8f6c\u6362\u4e3a\u67e5\u8868</li> </ul> </li> <li></li> <li>\u5982\u4f55\u7528\u8fd9\u5f20\u8868\u53bb prove \u8fd9\u4e2a\u95e8\u662f\u6b63\u786e\u7684\uff1f<ul> <li>\u628a\u8868\u5408\u5e76\u6210\u5355\u4e2a\u5217\u7684 table</li> <li>\u8bc1\u660e f \u5c5e\u4e8e t</li> </ul> </li> <li>Lookup argument\uff1a\u8bc1\u660e f \u5c5e\u4e8e t<ul> <li></li> </ul> </li> <li>\u4f7f\u7528\u573a\u666f<ul> <li>range check</li> <li>bits operation</li> <li>storage/memory</li> </ul> </li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#2-plookup","title":"2. Plookup","text":"<ul> <li>\u8bc1\u660e f \u5c5e\u4e8e t</li> <li>prover cost: O(NlogN)</li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#3-halo2-lookup","title":"3. Halo2-lookup","text":"<ul> <li>\u548c plookup \u8bc1\u660e\u65b9\u6cd5\u533a\u522b\u4e0d\u5927\uff0c\u4e0d\u8fc7\u66f4\u5bb9\u6613\u4e86\u89e3</li> <li>prover cost: O(NlogN)</li> </ul> <p>\u5230\u76ee\u524d\u4e3a\u6b62\u90fd\u8fd8\u6ce2\u6f9c\u4e0d\u60ca\u3002</p> <p>\u4e0d\u8fc7 2022 \u5e74\u53d1\u73b0\u4e86\u8f6c\u673a\uff0cCaulk \u51fa\u73b0\u4e86\u3002</p>"},{"location":"2023-12-09/lookup-arguments-overview/#4-caulk","title":"4. Caulk","text":"<ul> <li>\u5bf9\u524d\u9762\u7684 lookup \u505a\u4e86\u5f88\u5927\u7684\u6539\u8fdb\uff0c\u53ef\u4ee5\u4f18\u5316 prover \u7684 cost\uff08\u5728 m &lt;&lt; N \u7684\u60c5\u51b5\u4e0b\uff09</li> <li>prover cost: O(m^2 + mlogN)</li> <li></li> <li>Caulk \u57fa\u672c\u7684 idea\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u80fd\u505a\u5230 sub-linear \u7684 prover cost<ul> <li>cached quotients<ul> <li>kzg10: \\(f(x) - f(a) = (x-a) q(x)\\)</li> <li>\u6784\u9020\u4e00\u4e2a\u901a\u8fc7 f(a) \u548c f(b) \u7684 g(x)</li> </ul> </li> <li>extract subtable<ul> <li></li> <li>t(x) represents T</li> <li>\\(t_I(x)\\) represents S \u5c5e\u4e8e T</li> <li>\u5219 F \u5c5e\u4e8e T</li> </ul> </li> </ul> </li> <li>Caulk \u628a\u8bc1\u660e\u8fc7\u7a0b\u62c6\u6210\u56db\u4e2a\u90e8\u5206<ul> <li></li> </ul> </li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#5-caulk","title":"5. Caulk+","text":"<ul> <li>\u57fa\u672c\u601d\u60f3\u662f\u66ff\u6362\u6389 EQ4<ul> <li>\\(Z_I(X) Z_J(X)  = Z_V(X)\\)</li> </ul> </li> <li>prover cost: O(m^2)\uff0c\u964d\u4f4e\u4e86</li> <li>\u4f46\u662f\u9700\u8981 commit J degree \u7684\u591a\u9879\u5f0f</li> <li></li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#6-flookup-gk22","title":"6. Flookup [GK22]","text":"<ul> <li>\u7ee7\u7eed\u6539\u8fdb\uff0cprover cost from \\(O(m^2)\\) \u5230 \\(O(mlog^2m)\\)</li> <li>\u8fd9\u6837\u5c31\u6709\u70b9\u5b9e\u9645\u7684\u7528\u5904\u4e86</li> <li>Basic idea:<ul> <li>\\(t_I(X)\\) </li> <li>\\(t_I(X)\\)  \u7528\u6765\u505a subtable</li> <li></li> </ul> </li> <li>\u7f3a\u70b9\u662f\u5b83\u4e0d\u662f\u52a0\u6cd5\u540c\u6001\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u628a\u8868\u7684\u5217 merge \u6210\u66f4\u5c0f\u7684\u8868\u3002\u8fd9\u6837\u53ea\u80fd\u505a\u7b80\u5355\u7684\u573a\u666f\uff0c\u6bd4\u5982 range check \u548c membership check</li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#7-baloo-zgkmr22","title":"7. Baloo [ZGKMR22]","text":"<ul> <li>Prover cost: \\(O(mlog^2m)\\), \u4fdd\u6301\u4e0d\u53d8</li> <li>\u597d\u5904\u662f\u652f\u6301\u52a0\u6cd5\u540c\u6001</li> <li>cost\uff1a\u9700\u8981\u5f15\u5165\u66f4\u591a\u7684 \\(G_2\\) points</li> <li></li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#8-logup-hab22","title":"8. Logup [Hab22]","text":"<ul> <li>\u6700\u91cd\u8981\u7684\u8d21\u732e\uff1a\u5f15\u5165 logarithmic derivatives\uff08\u5148\u53d6\u5bf9\u6570\uff0c\u518d\u6c42\u5bfc\uff09<ul> <li>\u597d\u5904\u662f\u53ef\u4ee5\u628a\u8fde\u4e58\u7684\u5173\u7cfb\u8f6c\u6362\u6210\u8fde\u52a0\u7684\u5173\u7cfb</li> <li>\u8fd9\u6837\u65e2\u652f\u6301\u52a0\u6cd5\u540c\u6001\uff0c\u6027\u80fd\u4e5f\u6bd4\u8f83\u597d</li> <li></li> </ul> </li> <li>\u95ee\u9898\uff1a<ul> <li>\u6ca1\u6709\u89e3\u51b3 caulk \u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0cprover cost \u548c t \u8868\u683c\u7684\u5927\u5c0f\u6709\u5173</li> <li>\u540e\u9762 CQ \u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898</li> </ul> </li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#9-cq","title":"9. CQ","text":"<ul> <li>Prover cost:  \\(O(mlogm)\\)</li> <li>\u597d\u5904<ul> <li>\u5728 proof \u4e2d\u6ca1\u6709 \\(G_2\\) \u70b9\uff0c\u8fd9\u6837\u5728\u5408\u7ea6\u4e2d\u6bd4\u8f83\u597d\u9a8c\u8bc1</li> <li>\u89e3\u51b3\u4e86 logup \u7684\u95ee\u9898\uff0c\u901a\u8fc7 pre-computation\uff0c\u8ba9 prover cost \u548c t \u8868\u683c\u7684\u5927\u5c0f\u65e0\u5173</li> </ul> </li> <li></li> </ul>"},{"location":"2023-12-09/lookup-arguments-overview/#10-lassojolt","title":"10. Lasso/Jolt","text":"<ul> <li>\u53f7\u79f0\u662f lookup singularity</li> <li>\u4f46\u6211\u5f88\u96be\u628a\u5b83\u5f52\u7c7b\u5230 lookup table</li> <li>idea \u662f\u628a\u5927\u8868\u62c6\u6210\u5c0f\u8868</li> <li>\u7528\u4e86\u548c Baloo \u5f88\u50cf\u7684\u601d\u60f3</li> <li>\u4e0d\u8fc7\u5bf9 M \u548c t \u6709\u4e00\u5b9a\u7684\u8981\u6c42</li> <li></li> </ul>"},{"location":"2023-12-25/ec/","title":"\u692d\u5706\u66f2\u7ebf(Elliptic Curve)\u7684\u795e\u5947\u6027\u8d28","text":""},{"location":"2023-12-25/ec/#_1","title":"\u692d\u5706\u66f2\u7ebf\u7684\u5e94\u7528","text":""},{"location":"2023-12-25/ec/#_2","title":"\u7b7e\u540d","text":"<p>\u5229\u7528\u692d\u5706\u66f2\u7ebf\u7684\u7b7e\u540d\u7b97\u6cd5\u53eb\u505a ECDSA (Elliptic Curve Digital Signature Algorithm)\u3002</p>"},{"location":"2023-12-25/ec/#_3","title":"\u7ed9\u4efb\u4f55\u6d88\u606f\u7b7e\u540d","text":"<p>https://app.mycrypto.com/sign-message  <pre><code>{\n    \"address\": \"0x32197ff73E5A309f51Bd94F1728DbFE2BED452b0\",\n    \"msg\": \"Hello EC!\",\n    \"sig\": \"0xc79ad7b9a57fdd9b0f1e3c7dd7910f3042a57848d51f399caa8c755c80bd03267d9d9cdf2d10361a0d5cc2096c74837bc33c7dea3369982b405f963bbb1806921c\",\n    \"version\": \"2\"\n}\n</code></pre></p> <p> \u53c2\u8003 https://medium.com/mycrypto/the-magic-of-digital-signatures-on-ethereum-98fe184dc9c7</p>"},{"location":"2023-12-25/ec/#_4","title":"\u7ed9\u4ee5\u592a\u574a\u4ea4\u6613\u7b7e\u540d","text":"<p> \u7ed9\u4ea4\u6613\u7b7e\u540d\u672c\u8d28\u4e0a\u4e5f\u662f\u7b7e\u7f72\u4e00\u4e2a\u7279\u5b9a\u7684\u4fe1\u606f\u3002\u53ea\u4e0d\u8fc7\u53ef\u4ee5\u628a\u7b7e\u7f72\u540e\u7684\u4ea4\u6613\u53d1\u5230\u533a\u5757\u94fe\u4e0a\uff0c\u94fe\u4e0a\u7b7e\u540d\u9a8c\u8bc1\u901a\u8fc7\u540e\uff0c\u53ef\u4ee5\u6267\u884c\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u8f6c\u8d26\u7b49\u3002</p>"},{"location":"2023-12-25/ec/#_5","title":"\u79d8\u94a5\u4ea4\u6362","text":"<p>\u53c2\u8003 https://andrea.corbellini.name/2015/05/30/elliptic-curve-cryptography-ecdh-and-ecdsa/</p> <p>\u5229\u7528\u692d\u5706\u66f2\u7ebf\u7684\u79d8\u94a5\u4ea4\u6362\u53eb\u505a ECDH (Elliptic curve Diffie-Hellman)\u3002</p> <p>\u8fc7\u7a0b\uff1a</p> <ol> <li>\u9996\u5148\uff0cAlice \u548c Bob \u751f\u6210\u4ed6\u4eec\u81ea\u5df1\u7684\u79c1\u94a5\u548c\u516c\u94a5</li> <li>Alice \u548c Bob \u901a\u8fc7\u4e0d\u5b89\u5168\u7684\u901a\u9053\u4ea4\u6362\u4ed6\u4eec\u7684\u516c\u94a5</li> <li>Alice \u8ba1\u7b97\u00a0\\(S=d_AH_B\\)\u00a0\uff0cBob \u8ba1\u7b97 \u00a0\\(S=d_BH_A\\)</li> </ol> <p></p> <p>S \u5c31\u662f\u83b7\u5f97\u7684\u5171\u4eab\u79d8\u94a5\uff0c\u53ea\u6709\u4ed6\u4eec\u4e24\u4eba\u77e5\u9053\uff0c\u4e4b\u540e\u4ed6\u4eec\u5c31\u53ef\u4ee5\u7528 S \u8fdb\u884c\u52a0\u5bc6\u548c\u89e3\u5bc6\u3002</p> <p>Code:</p> <pre><code># Alice generates her own keypair.\n\nalice_private_key, alice_public_key = make_keypair()\n\nprint(\"Alice's private key:\", hex(alice_private_key))\n\nprint(\"Alice's public key: (0x{:x}, 0x{:x})\".format(*alice_public_key))\n\n\n\n# Bob generates his own key pair.\n\nbob_private_key, bob_public_key = make_keypair()\n\nprint(\"Bob's private key:\", hex(bob_private_key))\n\nprint(\"Bob's public key: (0x{:x}, 0x{:x})\".format(*bob_public_key))\n\n\n\n# Alice and Bob exchange their public keys and calculate the shared secret.\n\ns1 = scalar_mult(alice_private_key, bob_public_key)\n\ns2 = scalar_mult(bob_private_key, alice_public_key)\n\nassert s1 == s2\n\n\n\nprint('Shared secret: (0x{:x}, 0x{:x})'.format(*s1))\n</code></pre> <p>Result: <pre><code>Alice's private key: 0x4f637def8cd2bffd769fedf79f65656780e1701f9b64d26ea8a5c6729e02ea16\n\nAlice's public key: (0x4a1ae99a3451ba1fadfdf7b4705c3568cd5ecc5c4c21e9f86ce3ae5166fc2d25, 0xabb6fdaaadc42a83ee3bd761af7950bbe81624da7153af2e538a1538ad8aff55)\n\nBob's private key: 0xc64fda9723d8a7380d0a78becf2f161e41cecc61bdd39795bd94dc5894f81382\n\nBob's public key: (0xfb47290bd33fdbd133b40bd4df078cb2231e9a7854cb18dc10fd183f7cedac55, 0xf20e82a1b020f4c2ca712d11c1ed9b64fc7e60df657c5e0223a48c79dd6809fa)\n\nShared secret: (0x6e7b7773764d62ed36000f09c7db1b66a5341d29c2c10c395ded5d5ec97eb9cf, 0x507aea85dee2ba199692b0a5ff3fb017e5f4179b2012065a9912a8f7851056d1)\n</code></pre></p>"},{"location":"2023-12-25/ec/#_6","title":"\u8d39\u9a6c\u5927\u5b9a\u7406","text":"<p>\u60ac\u800c\u672a\u51b3350\u591a\u5e74\u7684\u8457\u540d\u6570\u5b66\u96be\u9898\u201c\u8d39\u9a6c\u731c\u60f3\u201d(\u5373\u201c\u8d39\u9a6c\u5927\u5b9a\u7406\u201d)\uff0c\u5c31\u662f\u7531\u82f1\u56fd\u6570\u5b66\u5bb6Andrew Wiles(\u73b0\u4e3a\u7f8e\u56fd\u666e\u6797\u65af\u987f\u5927\u5b66\u6559\u6388)\u4e8e1994\u5e74\u5e94\u7528\u692d\u5706\u66f2\u7ebf\u7684\u7406\u8bba\u800c\u5f7b\u5e95\u89e3\u51b3\u7684\u3002</p>"},{"location":"2023-12-25/ec/#ecc","title":"\u692d\u5706\u66f2\u7ebf\u5bc6\u7801\u5b66(ECC) \u7684\u4f18\u52bf","text":"RSA key size (bits) ECC key size (bits) 1024 160 2048 224 3072 256 7680 384 15360 521 <p>ECC \u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\uff0c\u800c\u4e14\u5bc6\u94a5\u751f\u6210\u548c\u7b7e\u540d\u7684\u901f\u5ea6\u8981\u5feb\u5f97\u591a\u3002\u4e0d\u8fc7RSA \u5bc6\u94a5\u5927\u5c0f\u548c ECC \u5bc6\u94a5\u5927\u5c0f\u4e4b\u95f4\u4e0d\u5b58\u5728\u7ebf\u6027\u5173\u7cfb\u3002</p>"},{"location":"2023-12-25/ec/#_7","title":"\u692d\u5706\u66f2\u7ebf\u2014\u2014\u201c\u4e00\u6839\u795e\u7ebf\u201d","text":"<p>\u692d\u5706\u66f2\u7ebf\u7684\u7406\u8bba\u53ca\u5176\u5e94\u7528\u4f5c\u4e3a\u73b0\u4ee3\u6570\u8bba\u4e2d\u7684\u4e00\u4e2a\u5206\u652f\u5b66\u79d1\uff0c\u53ef\u4ee5\u8bf4\u662f\u96c6\u7eaf\u7cb9\u6027\u3001\u4f18\u7f8e\u6027\u3001\u6311\u6218 \u6027\u3001\u5e94\u7528\u6027\u3001\u5b9e\u7528\u6027\u4e3a\u4e00\u4f53\u7684\u4e00\u4e2a\u201c\u7a81\u51fa\u4f8b\u5b50\u201d\uff0c\u5982\u679c\u8bf4\u201c\u6570\u8bba\u662f\u6570\u5b66\u7684\u7687\u540e\u201d(\u9ad8\u65af\u7684\u540d\u8a00)\u7684\u8bdd\uff0c\u90a3\u4e48\u692d\u5706\u66f2\u7ebf\u7406\u8bba\u5c31\u662f\u7687\u540e\u7684\u7687\u51a0\u4e0a\u7684\u4e00\u9897\u95ea\u4eae\u7684\u201c\u660e\u73e0\u201d.</p>"},{"location":"2023-12-25/ec/#_8","title":"\u5b9e\u6570\u57df\u4e0a\u7684\u692d\u5706\u66f2\u7ebf","text":"<p>\u5b9a\u4e49\uff1a</p> <p>\\(y^2 = x^3 + ax + b\\) </p> <p>\u5176\u4e2d \\(4a^3 + 27b^2 \\neq 0\\)</p> <p>\u518d\u52a0\u4e0a\u4e00\u4e2a\u65e0\u7a77\u8fdc\u70b9\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a 0 \u70b9\uff1aA + 0 = 0 + A = A</p> <p></p>"},{"location":"2023-12-25/ec/#group","title":"\u7fa4(Group)","text":"<p>\u4e4b\u6240\u4ee5\u4ecb\u7ecd\u7fa4\uff0c\u662f\u56e0\u4e3a\u7fa4\u6709\u5f88\u591a\u4f18\u7f8e\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u628a\u692d\u5706\u66f2\u7ebf\u5b9a\u4e49\u6210\u4e00\u4e2a\u7fa4\uff0c\u8fd9\u6837\u692d\u5706\u66f2\u7ebf\u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u7fa4\u7684\u6027\u8d28\u3002</p> <p>\u7fa4\u7684\u6027\u8d28: </p> <p>\u6bd4\u5982\uff0c\u5728\u6570\u7684\u4e58\u6cd5\u4e0b\uff0c\u6240\u6709\u6b63\u6709\u7406\u6570\u548c\u6b63\u5b9e\u6570\u90fd\u5206\u522b\u6784\u6210 \u4e00\u4e2a\u4e58\u6cd5\u7fa4\uff0c\u4f46\u6240\u6709\u6b63\u6574\u6570\u4e0d\u80fd\u6784\u6210\u4e00\u4e2a\u7fa4\uff0c\u56e0\u4e3a\u6027\u8d28 (3)\u4e0d\u6210\u7acb.</p> <p>\u518d\u6bd4\u5982\uff0c\u5728\u6570\u7684\u52a0\u6cd5\u4e0b\uff0c\u6240\u6709\u6574\u6570\u3001\u6240\u6709\u6709\u7406\u6570\uff0c\u6240\u6709\u5b9e\u6570\uff0c\u548c\u6240\u6709\u590d\u6570\u90fd\u5206\u522b\u6784\u6210\u4e00\u4e2a\u52a0\u6cd5\u7fa4(Additive Group).</p> <p>\u5982\u4f55\u5728\u692d\u5706\u66f2\u7ebf\u4e0a\u5b9a\u4e49\u4e00\u4e2a\u7fa4\uff1a</p> <ul> <li>\u8be5\u7fa4\u7684\u5143\u7d20\u662f\u692d\u5706\u66f2\u7ebf\u7684\u70b9\uff1b</li> <li>\u5355\u4f4d\u5143\u662f\u65e0\u7a77\u8fdc 0 \u5904\u7684\u70b9\uff1b</li> <li>\u70b9\u00a0P\u00a0\u7684\u5012\u6570\u662f\u5173\u4e8e\u00a0x\u00a0\u8f74\u5bf9\u79f0\u7684\u70b9\uff1b</li> <li>\u52a0\u6cd5\u7531\u4ee5\u4e0b\u89c4\u5219\u7ed9\u51fa\uff1a\u7ed9\u5b9a\u4e09\u4e2a\u5bf9\u9f50\u7684\u975e\u96f6\u70b9\u00a0P\u3001Q\u3001R\u00a0\uff0c\u5b83\u4eec\u7684\u603b\u548c\u4e3a\u00a0P + Q + R = 0\u00a0\u3002</li> </ul> <p></p>"},{"location":"2023-12-25/ec/#_9","title":"\u8ba1\u7b97","text":""},{"location":"2023-12-25/ec/#_10","title":"\u52a0\u6cd5\u7684\u51e0\u4f55\u8ba1\u7b97\u6cd5","text":"<p>P + Q + R = 0 =&gt; P + Q = -R</p> <p>\u901a\u8fc7\u00a0P\u00a0\u548c\u00a0Q\u00a0\u7ed8\u5236\u76f4\u7ebf\u3002\u8be5\u7ebf\u4e0e\u692d\u5706\u66f2\u7ebf\u7b2c\u4e09\u4e2a\u70b9\u00a0R\u00a0\u76f8\u4ea4\u3002\u4e0e\u4e4b\u5bf9\u79f0\u7684\u70b9\u00a0\u2212R\u00a0\u662f\u00a0 P+Q\u00a0\u7684\u7ed3\u679c\u3002</p>"},{"location":"2023-12-25/ec/#_11","title":"\u52a0\u6cd5\u7684\u4ee3\u6570\u7b97\u6cd5","text":"<p>  \u4f8b\u5b50\uff1a</p> <p>\u66f2\u7ebf \\(y^2 = x^3 - 7x + 10\\) </p> <p>P = (1, 2), Q = (3, 4) </p> <p>P + Q = -R = (-3, 2)</p> <p>\u9a8c\u8bc1\u53d1\u73b0\u8fd9\u4e2a\u70b9\u4e5f\u5728\u692d\u5706\u66f2\u7ebf\u4e0a\u3002</p> <p>Try https://andrea.corbellini.name/ecc/interactive/reals-add.html</p>"},{"location":"2023-12-25/ec/#scalar-multiplication","title":"\u4e58\u6cd5\uff1aScalar multiplication\u00a0\u6807\u91cf\u4e58\u6cd5","text":"<p>\u692d\u5706\u66f2\u7ebf\u4e0d\u652f\u6301\u70b9\u548c\u70b9\u4e4b\u95f4\u7684\u4e58\u6cd5( P * Q)\uff0c\u53ea\u652f\u6301\u6807\u91cf\u4e58\u6cd5\uff1a  \u5176\u4e2d n \u4e3a\u81ea\u7136\u6570\u3002</p> <p>\u6807\u91cf\u4e58\u6cd5\u53ef\u4ee5\u8f6c\u6362\u4e3a\u52a0\u6cd5\u3002</p> <p>\u4e0d\u8fc7\u76f4\u63a5\u52a0\u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u662f \\(O(2^k)\\)\uff08\u5982\u679c n \u662f k \u4e2a\u4e8c\u8fdb\u5236\u6570\uff09\u3002</p> <p>\u4f18\u5316: double and add \u7b97\u6cd5</p> <p>\u4f8b\u5982 n=151\u00a0\u3002\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a\u00a0\\(10010111_2\\)\u00a0\u3002\u8fd9\u79cd\u4e8c\u8fdb\u5236\u8868\u793a\u53ef\u4ee5\u8f6c\u5316\u4e3a 2 \u7684\u5e42\u548c  </p> <p>\u4e03\u6b21\u52a0\u500d\u548c\u56db\u6b21\u52a0\u6cd5</p>"},{"location":"2023-12-25/ec/#_12","title":"\u6709\u9650\u57df\u4e0a\u7684\u692d\u5706\u66f2\u7ebf","text":"<p>p \u4e3a\u7d20\u6570\u3002</p> <p>\u6709\u9650\u57df\u4e0a\u7684\u8ba1\u7b97\uff1a </p> <p>\u6709\u9650\u57df\u4e0a\u7684\u692d\u5706\u66f2\u7ebf:</p> <p></p>"},{"location":"2023-12-25/ec/#_13","title":"\u8ba1\u7b97","text":""},{"location":"2023-12-25/ec/#_14","title":"\u52a0\u6cd5\uff1a\u51e0\u4f55\u4e0a","text":""},{"location":"2023-12-25/ec/#_15","title":"\u52a0\u6cd5\uff1a\u4ee3\u6570\u4e0a","text":"<p>\u548c\u5b9e\u6570\u57df\u4e0a\u7684\u516c\u5f0f\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981 \\(\\mod p\\) try https://andrea.corbellini.name/ecc/interactive/modk-add.html</p>"},{"location":"2023-12-25/ec/#order","title":"\u692d\u5706\u66f2\u7ebf\u7684\u9636(order)","text":"<p>\u692d\u5706\u66f2\u7ebf\u7684\u9636\uff1a\u70b9\u7684\u6570\u91cf</p>"},{"location":"2023-12-25/ec/#_16","title":"\u6807\u91cf\u4e58\u6cd5\u548c\u5faa\u73af\u5b50\u7fa4","text":"<p>\u6807\u91cf\u4e58\u6cd5\u548c\u5b9e\u6570\u57df\u4e00\u6837\uff1a  \u5176\u4e2d n \u4e3a\u81ea\u7136\u6570\u3002</p> <p>\u6709\u9650\u57df\u4e2d\u692d\u5706\u66f2\u7ebf\u7684\u70b9\u76f8\u4e58\uff08\u6807\u91cf\u4e58\u6cd5\uff09\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u6027\u3002\u9009\u53d6\u66f2\u7ebf\u00a0\\(y^2\u2261x^3+2x+3\\)(mod 97)\u00a0\u548c\u70b9\u00a0P=(3,6)\u00a0\u3002\u73b0\u5728\u8ba1\u7b97\u00a0P\u00a0\u7684\u6240\u6709\u500d\u6570\uff1a</p> <p></p> <p></p> <p>\u8fd9\u6784\u6210\u4e86\u53ea\u5305\u542b 5 \u4e2a\u5143\u7d20\u7684\u5faa\u73af\u5b50\u7fa4\uff0cP \u53eb\u505a generator \u6216\u8005 base point\u3002</p> <p>\u5faa\u73af\u5b50\u7fa4\u662f ECC \u548c\u5176\u4ed6\u5bc6\u7801\u7cfb\u7edf\u7684\u57fa\u7840\u3002</p> <p>\u5faa\u73af\u5b50\u7fa4\u7684\u9636\uff08order\uff09n\uff0c\u662f\u4f7f\u5f97\u00a0nP = 0 \u7684\u6700\u5c0f\u7684\u6b63\u6574\u6570\u00a0n\u3002</p> <p>\u692d\u5706\u66f2\u7ebf\u7b97\u6cd5\u5c31\u662f\u5728\u5faa\u73af\u5b50\u7fa4\u4e0a\u5de5\u4f5c\u7684\uff0c\u76f8\u5173\u7684\u53c2\u6570:</p> <p> domain parameters\u00a0\u4e00\u5171\u5305\u542b\u4e0a\u9762\u7684 6 \u4e2a tuple \\((p, a, b, G, n, h)\\)</p> <p>Code: https://github.com/andreacorbellini/ecc/blob/master/scripts/ecdhe.py <pre><code>import collections\nimport random\n\nEllipticCurve = collections.namedtuple('EllipticCurve', 'name p a b g n h')\n\ncurve = EllipticCurve(\n    'secp256k1',\n    # Field characteristic.\n    p=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f,\n    # Curve coefficients.\n    a=0,\n    b=7,\n    # Base point.\n    g=(0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798,\n       0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8),\n    # Subgroup order.\n    n=0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141,\n    # Subgroup cofactor.\n    h=1,\n)\n</code></pre></p>"},{"location":"2023-12-25/ec/#_17","title":"\u5982\u4f55\u5bfb\u627e\u5faa\u73af\u5b50\u7fa4\u7684\u9636","text":"<p>P \u7684\u9636\u6570\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u4e0e\u692d\u5706\u66f2\u7ebf\u7684\u9636\u6570\u8054\u7cfb\u8d77\u6765\uff0c\u8be5\u5b9a\u7406\u6307\u51fa\u5b50\u7fa4\u7684\u9636\u6570\u662f\u7236\u7fa4\u9636\u6570\u7684\u9664\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u692d\u5706\u66f2\u7ebf\u5305\u542b\u00a0N \u4e2a\u70b9\uff0c\u5e76\u4e14\u5176\u5b50\u7fa4\u4e4b\u4e00\u5305\u542b\u00a0n\u00a0\u70b9\uff0c\u5219\u00a0n\u00a0\u662f\u00a0N \u7684\u9664\u6570\u3002</p> <p>\u627e\u5230 n \u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u4f7f\u7528 Schoof \u7b97\u6cd5\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u7684\u9636\u6570 N</li> <li>\u627e\u51fa N \u7684\u6240\u6709\u9664\u6570</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u9664\u6570 n\uff0c\u8ba1\u7b97 nP</li> <li>\u4f7f\u5f97 nP = 0 \u6700\u5c0f\u7684 n \u662f\u5b50\u7fa4\u7684\u9636</li> </ol>"},{"location":"2023-12-25/ec/#generator","title":"\u5982\u4f55\u5bfb\u627e generator","text":"<p>\u5bf9\u4e8e\u6211\u4eec\u7684 ECC \u7b97\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u9ad8\u9636\u5b50\u7ec4\u3002\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u4f1a\u9009\u62e9\u4e00\u6761\u692d\u5706\u66f2\u7ebf\uff0c\u8ba1\u7b97\u5b83\u7684\u9636\u6570\uff08\u00a0N\u00a0\uff09\uff0c\u9009\u62e9\u4e00\u4e2a\u9ad8\u9664\u6570\u4f5c\u4e3a\u5b50\u7fa4\u9636\u6570\uff08\u00a0n\u00a0\uff09\u5e76\u6700\u7ec8\u627e\u5230\u5408\u9002\u7684\u57fa\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\u6211\u4eec\u4e0d\u4f1a\u9009\u62e9\u4e00\u4e2a\u57fa\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u5b83\u7684\u9636\u6570\uff0c\u800c\u662f\u76f8\u53cd\uff1a\u6211\u4eec\u4f1a\u5148\u9009\u62e9\u4e00\u4e2a\u770b\u8d77\u6765\u8db3\u591f\u597d\u7684\u9636\u6570\uff0c\u7136\u540e\u518d\u5bfb\u627e\u5408\u9002\u7684\u57fa\u70b9\u3002</p> <p>\u62c9\u683c\u6717\u65e5\u5b9a\u7406\u610f\u5473\u7740\u6570\u5b57 \\(h = N/n\\)\u00a0\u59cb\u7ec8\u662f\u6574\u6570\uff08\u56e0\u4e3a\u00a0n\u00a0\u662f\u00a0N\u00a0\u7684\u9664\u6570\uff09\u3002\u6570\u5b57\u00a0h\u00a0\u6709\u4e00\u4e2a\u540d\u79f0\uff1a\u5b83\u662f\u5b50\u7fa4\u7684\u8f85\u56e0\u5b50(cofactor of the subgroup)\u3002</p> <p>\u5bf9\u4e8e\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u70b9 P\uff0c\u90fd\u6709 NP = 0</p> <p>\u5219\uff1an(hP) = 0</p> <p>G = hP \u5c31\u662f\u6211\u4eec\u8981\u627e\u7684 generator\uff08\u5982\u679c G \u4e0d\u4e3a 0\uff09</p> <p>\u5bfb\u627e generator\u65b9\u6cd5\uff1a</p> <ol> <li>\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u7684\u9636 N</li> <li>\u9009\u62e9\u5b50\u7fa4\u7684 order n\u3002\u4e3a\u4e86\u4f7f\u7b97\u6cd5\u6b63\u5e38\u5de5\u4f5c\uff0c\u8be5\u6570\u5b57\u5fc5\u987b\u662f\u7d20\u6570\u5e76\u4e14\u5fc5\u987b\u662f\u00a0N\u00a0\u7684\u9664\u6570\u3002</li> <li>\u8ba1\u7b97  \\(h = N/n\\) </li> <li>\u5728\u66f2\u7ebf\u4e0a\u9009\u62e9\u4e00\u4e2a\u968f\u673a\u70b9 P</li> <li>\u8ba1\u7b97 G = hP </li> <li>\u5982\u679c G \u4e3a 0\uff0c\u8fd4\u56de\u6b65\u9aa4 4\uff0c\u5982\u679c G \u4e0d\u4e3a 0\uff0c\u5219 G \u5c31\u662f generator</li> </ol> <p>\u6ce8\u610f\uff0c\u6b64\u7b97\u6cd5\u4ec5\u5728\u00a0n\u00a0\u4e3a\u7d20\u6570\u65f6\u624d\u6709\u6548\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u7d20\u6570\uff0c\u5c31\u8868\u660e n \u6709\u9664\u6570\uff0c\u5c31\u65e0\u6cd5\u4fdd\u8bc1 n \u662f\u4f7f\u5f97\u00a0nP = 0 \u7684\u6700\u5c0f\u7684\u6b63\u6574\u6570\u00a0n\u3002\u62ff\u4e0a\u9762 order \u4e3a 5 \u7684\u5faa\u73af\u5b50\u7fa4\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u5982\u679c\u627e\u5230\u7684 n = 10\uff0c\u4e5f\u6ee1\u8db3 10P = 0\uff0c\u4f46\u662f 10 \u4e0d\u662f\u771f\u6b63\u7684\u9636\uff0c\u800c 5 \u624d\u662f\u3002\u8fd9\u91cc 10 \u4e0d\u662f\u7d20\u6570\uff0c5 \u662f\u7d20\u6570\u3002</p>"},{"location":"2023-12-25/ec/#_18","title":"\u53c2\u8003","text":"<ul> <li>https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/</li> <li>\u300a\u692d\u5706\u66f2\u7ebf (\u989c\u677e\u8fdc) \u300b</li> </ul>"},{"location":"2024-01-06/joy/","title":"\u6211\u7684\u4eba\u751f\u54f2\u5b66: \u5feb\u4e50\u7406\u8bba","text":"<p>\u4eca\u5929\u662f\u6211 40 \u5468\u5c81\u751f\u65e5\uff0c\u5728\u6e05\u8fc8\u3002\u8fdb\u884c\u4e86\u6668\u8dd1\uff0c\u4e70\u4e86 GPT-4\uff0c\u548c\u8001\u5a46\u4e00\u8d77\u5403\u4e86 why ribs and rumps \u7684\u808b\u6392\uff0c\u53bb\u65c1\u8fb9 711 \u4e70\u4e86\u4e00\u4e2a\u5f88\u5c0f\u7684\u86cb\u7cd5\uff0c\u53bb\u81ea\u52a9\u6d17\u8863\u5e97\u628a\u8863\u670d\u6d17\u4e86\u3002\u665a\u4e0a\u56de\u5230\u9152\u5e97\u5199\u4e0b\u81ea\u5df1\u7684\u4e00\u4e9b\u601d\u8003\u3002</p> <p>\u4eca\u5e74\u6211\u7684\u6210\u957f\uff0c\u5bf9\u5185\uff0c\u662f\u589e\u52a0\u4e86\u8ba4\u8bc6\u81ea\u5df1\u7684\u80fd\u529b\uff0c\u4e5f\u5c31\u662f\u5143\u8ba4\u77e5\u80fd\u529b\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u89c2\u5bdf\u81ea\u5df1\u7684\u60c5\u7eea\u548c\u884c\u52a8\uff0c\u5e76\u601d\u8003\u5b83\u4eec\u6765\u81ea\u54ea\u91cc\uff0c\u6df1\u5c42\u7684\u52a8\u673a\u662f\u4ec0\u4e48\u3002\u56e0\u4e3a\u8fd9\u79cd\u6df1\u5c42\u7684\u52a8\u673a\u5f88\u591a\u662f\u6765\u81ea\u8eab\u4f53\u81ea\u8eab\u7684\u7b2c\u4e00\u611f\u89c9\uff0c\u6765\u81ea\u4e8e\u67d0\u4e2a\u4fe1\u53f7\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u81ea\u8eab\u7684\u795e\u7ecf\u7cfb\u7edf\u5176\u5b9e\u5c31\u662f\u5bf9\u4fe1\u53f7\u7684\u5904\u7406\u548c\u53cd\u5e94\uff0c\u6211\u8981\u4e86\u89e3\u7684\u662f\u6211\u7684\u795e\u7ecf\u7cfb\u7edf\u5bf9\u54ea\u4e9b\u4fe1\u53f7\u8fdb\u884c\u4e86\u5904\u7406\u548c\u4e3b\u89c2\u89e3\u8bfb\uff0c\u5b83\u662f\u5982\u4f55\u8f93\u51fa\u7684\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u4e00\u79cd\u4e3b\u89c2\u7684\u89e3\u8bfb\u6216\u8005\u67d0\u4e2a\u884c\u52a8\uff0c\u63a2\u5bfb\u4e3a\u4ec0\u4e48\u6709\u8fd9\u6837\u7684\u8f93\u51fa\u3002</p> <p>\u6709\u4e86\u8fd9\u6837\u7684\u80fd\u529b\uff0c\u4f1a\u8ba9\u6211\u66f4\u597d\u7684\u8c03\u8282\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u63a7\u5236\u81ea\u5df1\u5bf9\u67d0\u4e9b\u770b\u6cd5\uff0c\u8fdb\u800c\u5f71\u54cd\u81ea\u5df1\u7684\u884c\u4e3a\u3002</p> <p>\u6bd4\u5982\u4e00\u5e74\u524d\u6211\u5e0c\u671b\u81ea\u5df1\u6210\u4e3a\u4e00\u4e2a\u5065\u5eb7\u7684\u4eba\uff0c\u90a3\u6211\u9700\u8981\u8fd0\u52a8\uff0c\u4f46\u662f\u4e0d\u559c\u6b22\u8dd1\u6b65\uff0c\u800c\u6211\u77e5\u9053\u8dd1\u6b65\u662f\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u90a3\u6211\u53ef\u4ee5\u89c2\u5bdf\u81ea\u5df1\u4e3a\u4ec0\u4e48\u4e0d\u559c\u6b22\uff0c\u539f\u56e0\u662f\u56e0\u4e3a\u89c9\u5f97\u8dd1\u6b65\u592a\u67af\u71e5\u4e86\uff0c\u6211\u60f3\u8dd1\u6b65\u7684\u65f6\u5019\u6709\u54ea\u4e9b\u53ef\u4ee5\u4e0d\u90a3\u4e48\u67af\u71e5\u548c\u53ef\u4ee5\u5e26\u6765\u5956\u52b1\u7684\u4e8b\u60c5\u5462\uff0c\u5f00\u59cb\u81f3\u5c11\u8ba9\u6211\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u7231\u8fd0\u52a8\u7684\u4eba\uff0c\u53ef\u6ca1\u6709\u591a\u4e45\u5b9e\u9645\u4e0a\u8fd0\u52a8\u672c\u8eab\u5c31\u5e26\u6765\u4e86\u5bf9\u8eab\u4f53\u7684\u76ca\u5904\uff0c\u8eab\u4f53\u786e\u5b9e\u53d8\u5065\u5eb7\u4e86\uff0c\u56e0\u4e3a\u957f\u65f6\u95f4\u5de5\u4f5c\u5bfc\u81f4\u7684\u80cc\u75db\u51cf\u8f7b\u4e86\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5956\u52b1\u8ba9\u6211\u6709\u52a8\u529b\u6301\u7eed\u7684\u628a\u8dd1\u6b65\u8fdb\u884c\u4e0b\u53bb\u3002</p> <p>\u6211\u89c9\u5f97\u8981\u65f6\u523b\u89c2\u5bdf\u81ea\u5df1\uff0c\u800c\u4e0d\u662f\u51a5\u60f3\u7684\u65f6\u5019\u624d\u53bb\u505a\u3002</p> <p>\u5bf9\u5916\uff0c\u6211\u4eca\u5e74\u53bb\u4e86\u5f88\u591a\u5730\u65b9\uff0c\u56fd\u5916\u6709\u6cf0\u56fd\u3001\u97e9\u56fd\u3001\u6cd5\u56fd\u3001\u65b0\u52a0\u5761\u3001\u571f\u8033\u5176\uff0c\u8ba4\u8bc6\u4e86\u5f88\u591a\u4eba\uff0c\u89c1\u5230\u4e86\u5f88\u591a\u7f51\u53cb\uff0c\u6211\u53d1\u73b0\u6211\u5bf9\u4eba\u6709\u5f88\u591a\u504f\u89c1\uff0c\u7279\u522b\u662f\u5728\u6ca1\u6709\u89c1\u9762\u524d\uff0c\u81ea\u5df1\u4f1a\u5bf9\u4eba\u6709\u5f88\u591a\u8bc4\u5224\uff0c\u4f46\u5b9e\u9645\u89c1\u9762\u540e\u53d1\u73b0\u5927\u5bb6\u90fd\u662f\u633a\u597d\u7684\u4eba\uff0c\u6211\u73b0\u5728\u6bcf\u6b21\u51fa\u73b0\u8bc4\u5224\u7684\u5ff5\u5934\u7684\u65f6\u5019\uff0c\u6211\u90fd\u4f1a\u7a0d\u5fae\u505c\u4e0b\u6765\u60f3\u60f3\uff0c\u6211\u7684\u504f\u89c1\u57fa\u672c\u6765\u81ea\u4e8e\u6211\u7684\u4e0d\u8ba4\u53ef\uff0c\u90a3\u6211\u4f1a\u60f3\uff0c\u53ef\u80fd\u662f\u6211\u6ca1\u6709\u7406\u89e3\u5bf9\u65b9\u7684\u60f3\u6cd5\uff0c\u4e5f\u53ef\u80fd\u5bf9\u65b9\u6ca1\u6709\u60f3\u5230\u6211\u60f3\u5230\u7684\uff0c\u5982\u679c\u662f\u6211\u6ca1\u6709\u7406\u89e3\u5bf9\u65b9\uff0c\u90a3\u53ef\u4ee5\u95ee\u5bf9\u65b9\uff0c\u5982\u679c\u662f\u5bf9\u65b9\u6ca1\u6709\u60f3\u5230\uff0c\u90a3\u6211\u53ef\u4ee5\u5e2e\u52a9\u5bf9\u65b9\uff0c\u8fd9\u6837\u8ba9\u53cc\u65b9\u90fd\u6709\u6536\u83b7\uff0c\u51cf\u5c11\u504f\u89c1\u3002</p> <p>\u5728\u571f\u8033\u5176 Devconnect \u7684 hacker house \u671f\u95f4\uff0c\u6211\u7684\u82f1\u6587\u80fd\u529b\u6709\u6240\u63d0\u5347\uff0c\u7b2c\u4e00\u6b21\u505a\u4e86\u82f1\u6587\u7684\u6280\u672f\u5206\u4eab\uff0c\u540e\u6765\u53c8\u505a\u4e86\u4e09\u6b21\uff0c\u6211\u4ece\u5206\u4eab\u4e2d\u83b7\u5f97\u4e86\u5f88\u5927\u7684\u4fe1\u5fc3\uff0c\u540e\u6765\u5728 zk hack \u9ed1\u5ba2\u677e\u671f\u95f4\u8fd8\u5b9e\u73b0\u4e86 hacker house \u671f\u95f4\u8bfb\u7684 cq lookup \u8bba\u6587\uff0c\u611f\u89c9\u8fd9\u4e00\u4e2a\u6708\u662f\u6211\u4eca\u5e74\u6700\u597d\u7684\u4e00\u4e2a\u6708\u3002\u8ba9\u6211\u611f\u5230\uff0c\u81ea\u5df1\u5bf9\u4e8e\u7a81\u7834\u81ea\u5df1\u7684\u8212\u9002\u533a\uff0c\u505a\u5230\u4e86\u81ea\u5df1\u8ba4\u4e3a\u5f88\u96be\u7684\u4e8b\u60c5\uff0c\u80fd\u7ed9\u81ea\u5df1\u5e26\u6765\u5de8\u5927\u7684\u5feb\u4e50\u3002</p> <p>\u4e24\u5468\u524d zisu \u548c\u6211\u8bf4\uff0c\u5728\u521b\u4e1a\u4e2d\u53ef\u4ee5\u5b66\u5230\u5f88\u591a\u4e1c\u897f\uff0c\u6211\u5f88\u8ba4\u53ef\uff0c\u8ba9\u6211\u4e5f\u601d\u8003\u5f88\u591a\uff0c\u6211\u4eca\u5929\u6b63\u597d\u542c\u4e86\u4e00\u4e2a\u5173\u4e8e\u66f4\u597d\u5851\u9020\u5927\u8111\u7684\u8282\u76ee\uff0c\u4e5f\u8c08\u5230\u4e86\u8f93\u51fa\u5e26\u52a8\u5b66\u4e60\u4ee5\u53ca\u4ee5\u5b9e\u9645\u7684\u9879\u76ee\u53bb\u5b66\u4e60\uff0c\u53ef\u4ee5\u6709\u66f4\u597d\u7684\u5b66\u4e60\u6548\u679c\uff0c\u6211\u76ee\u524d\u8fd8\u6ca1\u6709\u51b3\u5b9a\u53bb\u521b\u4e1a\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u8981\u505a\u9879\u76ee\uff0c\u8981\u6709\u8f93\u51fa\uff0c\u8981\u4ea4\u4ed8\u4e1c\u897f\uff0c\u53ef\u4ee5\u662f\u6587\u7ae0\uff0c\u5206\u4eab\uff0c\u4e5f\u53ef\u4ee5\u662f\u5f00\u6e90\u9879\u76ee\u3002\u65e2\u7136\u6211\u5f88\u5728\u610f\u81ea\u5df1\u7684\u4e2a\u4eba\u6210\u957f\uff0c\u90a3\u73b0\u5728\u53d1\u73b0\u4e86\u597d\u7684\u6210\u957f\u65b9\u5f0f\uff0c\u5c31\u8981\u5b9e\u8df5\u3002\u6211\u60f3\u6211\u53ef\u4ee5\u4ece zkp \u8fd9\u4e2a\u65b9\u5411\u5f00\u59cb\u505a\u8d77\u3002</p> <p>\u5bf9\u4e8e\u60f3\u6cd5\u7684\u63d0\u5347\uff0c\u8fd9\u4e00\u70b9\u6211\u4ece\u5468\u671f\u535a\u58eb\u5b66\u4e60\u5230\u4e86\u4e00\u70b9\u662f\uff0c\u8981\u52c7\u4e8e\u53d1\u8868\u89c2\u70b9\uff0c\u8ba9\u81ea\u5df1\u7684\u60f3\u6cd5\u548c\u89c2\u70b9\u63a5\u53d7\u5927\u5bb6\u7684\u68c0\u9a8c\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b8c\u5584\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u63d0\u5347\u81ea\u5df1\u3002\u6240\u4ee5\u6211\u540e\u9762\u4f1a\u53d1\u4e00\u4e9b\u6ca1\u6709\u975e\u5e38\u6210\u719f\u7684\u60f3\u6cd5\uff0c\u5305\u62ec\u8fd9\u7bc7\u7b14\u8bb0\uff0c\u4ee5\u53ca\u5176\u5b83\u7684\u7b14\u8bb0\uff0c\u63a5\u53d7\u53cd\u9988\u3002</p> <p>\u5bf9\u4e8e\u4eba\u751f\uff0c\u6211\u5728\u53d1\u5c55\u81ea\u5df1\u7684\u4e00\u4e2a\u54f2\u5b66\u7406\u8bba\uff0c\u8fd9\u4e00\u70b9\u548c Linux \u7684\u521b\u59cb\u4eba Linus Torvalds \u5f88\u50cf\uff0c\u5c31\u662f\u5feb\u4e50\u662f\u4eba\u751f\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u4ee5\u8fd9\u4e2a\u4e3a\u6838\u5fc3\u8fdb\u884c\u601d\u8003\uff0c\u6539\u53d8\u4e86\u6211\u5bf9\u5f88\u591a\u4e8b\u60c5\u7684\u770b\u6cd5\uff0c\u4e5f\u8ba9\u6211\u91cd\u65b0\u601d\u8003\u4e86\u539f\u6709\u7684\u4e00\u4e9b\u60f3\u6cd5\uff0c\u5e76\u8ba9\u8fd9\u4e2a\u300c\u5feb\u4e50\u300d\u7406\u8bba\u66f4\u52a0\u5065\u58ee\u4e86\uff0c\u5c06\u5f88\u591a\u770b\u4f3c\u77db\u76fe\u7684\u60f3\u6cd5\u4e5f\u7edf\u4e00\u4e86\u8d77\u6765\u3002\u4e0b\u9762\u6211\u901a\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u6765\u89e3\u91ca\u6e38\u620f\u3002</p> <p>\u5c06\u300c\u5feb\u4e50\u300d\u7406\u8bba\u5e94\u7528\u4e8e\u91d1\u94b1\u89c2\u3002\u5bf9\u4e8e\u91d1\u94b1\uff0c\u6211\u53d1\u73b0\u6211\u4e4b\u524d\u4e00\u76f4\u60f3\u7740\u5982\u4f55\u8d5a\u94b1\uff0c\u867d\u7136\u5634\u4e0a\u8bf4\u4e0d\u662f\u4e3a\u4e86\u94b1\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5185\u5fc3\u8fd8\u662f\u5e0c\u671b\u6709\u94b1\u3002\u5f53\u524d\uff0c\u73b0\u5728\u6211\u4e5f\u4f9d\u7136\u5e0c\u671b\u81ea\u5df1\u6709\u94b1\uff0c\u4e0d\u8fc7\u6211\u7684\u60f3\u6cd5\u53d8\u4e86\uff0c\u6211\u4e0d\u4f1a\u6267\u8457\u548c\u7126\u8651\uff0c\u6211\u6709\u4e86\u4e00\u4e2a\u4eba\u751f\u54f2\u5b66\u7406\u8bba\u6765\u652f\u6301\u6211\u5bf9\u91d1\u94b1\u7684\u60f3\u6cd5\uff0c\u65e2\u7136\u4eba\u751f\u6700\u91cd\u8981\u7684\u662f\u5feb\u4e50\uff0c\u91d1\u94b1\u53ea\u662f\u5feb\u4e50\u7684\u526f\u4ea7\u54c1\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u76ee\u7684\uff0c\u76ee\u7684\u662f\u5feb\u4e50\uff0c\u8fd9\u4e2a\u94fe\u6761\u662f\u4e0b\u9762\u8fd9\u6837\uff0c\u6211\u4eec\u559c\u6b22\u505a\u4e00\u4e9b\u4e8b\u60c5\u8ba9\u81ea\u5df1\u611f\u5230\u5feb\u4e50\uff0c\u505a\u4e00\u4e9b\u65b0\u7684\u6ca1\u6709\u4eba\u505a\u8fc7\u7684\u4e8b\u60c5\u66f4\u8ba9\u4eba\u5feb\u4e50\uff0c\u53d1\u6325\u81ea\u5df1\u7684\u7279\u957f\u66f4\u8ba9\u81ea\u5df1\u5feb\u4e50\uff0c\u8fd9\u79cd\u505a\u4e8b\u5e26\u6765\u7684\u6b63\u53cd\u9988\u548c\u6301\u7eed\u7684\u79ef\u7d2f\u4f1a\u8ba9\u81ea\u5df1\u628a\u4e8b\u60c5\u505a\u7684\u66f4\u597d\uff0c\u4e5f\u5c31\u66f4\u5feb\u4e50\uff0c\u76f4\u5230\u81ea\u5df1\u628a\u8fd9\u4ef6\u4e8b\u505a\u5230\u4e86\u4e16\u754c\u505a\u597d\uff0c\u76f4\u5230\u6709\u4e00\u5929\uff0c\u6709\u4eba\u8bf4\u6211\u613f\u610f\u7ed9\u4f60\u94b1\uff0c\u4f60\u6765\u53d1\u6325\u4f60\u7684\u624d\u80fd\uff0c\u5e2e\u6211\u505a\u4f60\u64c5\u957f\u7684\u8fd9\u4ef6\u4e8b\uff0c\u8fd9\u6837\u770b\uff0c\u94b1\u53ea\u662f\u526f\u4ea7\u54c1\uff0c\u662f\u4eba\u4eec\u5bf9\u4f60\u505a\u4e8b\u60c5\u7684\u5956\u52b1\uff0c\u800c\u6cbf\u7740\u5feb\u4e50\u4e3a\u6838\u5fc3\u4f1a\u5e26\u81ea\u5df1\u5230\u8fbe\u8fd9\u4e2a\u5730\u65b9\u3002\u5feb\u4e50\u5f53\u7136\u4e0d\u662f\u8bf4\u505a\u4e8b\u60c5\u7684\u65f6\u5019\u6ca1\u6709\u75db\u82e6\uff0c\u75db\u82e6\u6765\u81ea\u4e8e\u5f88\u591a\u65b9\u9762\uff0c\u6211\u5f88\u96be\u5728\u8fd9\u91cc\u4e00\u4e0b\u5b50\u7ed9\u51fa\u4e00\u4e2a\u5168\u9762\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u8fc7\u6211\u89c9\u5f97\u8fd9\u91cc\u628a\u75db\u82e6\u7ffb\u8bd1\u6210\u56f0\u96be\u6bd4\u8f83\u597d\uff0c\u56e0\u4e3a\u56f0\u96be\u662f\u6211\u4eec\u505a\u4e8b\u7684\u4e8b\u60c5\u90fd\u4f1a\u9047\u5230\u7684\uff0c\u800c\u75db\u82e6\u662f\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u641e\u5b9a\u56f0\u96be\u800c\u4ea7\u751f\u7684\u4e3b\u89c2\u611f\u53d7\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u529e\u6cd5\u89e3\u51b3\u6216\u8005\u653e\u5f03\uff0c\u800c\u4e0d\u9700\u8981\u75db\u82e6\u3002</p> <p>\u5c06\u300c\u5feb\u4e50\u300d\u7406\u8bba\u5e94\u7528\u4e8e\u5927\u5403\u5927\u559d\u3002\u5f88\u591a\u4eba\u6709\u8fd9\u79cd\u89c2\u70b9\uff0c\u89c9\u5f97\u4eba\u751f\u7684\u610f\u4e49\u65e2\u7136\u662f\u5feb\u4e50\uff0c\u90a3\u6211\u5c31\u5927\u5403\u5927\u559d\uff0c\u6ca1\u65e5\u6ca1\u591c\u7684\u6253\u6e38\u620f\uff0c\u6211\u53ea\u80fd\u90e8\u5206\u8ba4\u540c\uff0c\u8ba4\u540c\u7684\u662f\uff0c\u4ed6\u4eec\u505a\u7684\u90a3\u4e9b\u4e8b\u786e\u5b9e\u80fd\u8ba9\u81ea\u5df1\u5feb\u4e50\uff0c\u4e0d\u8fc7\u95ee\u9898\u662f\u8fd9\u79cd\u5feb\u4e50\u5c5e\u4e8e\u77ed\u671f\u7684\u5feb\u4e50\uff0c\u6ca1\u6cd5\u957f\u671f\u6301\u7eed\uff0c\u6211\u4eec\u5e94\u8be5\u4f18\u5316\u81ea\u5df1\u7684\u884c\u4e3a\uff0c\u8ba9\u81ea\u5df1\u53ef\u4ee5\u957f\u671f\u7684\u4f53\u9a8c\u5230\u5feb\u4e50\uff0c\u8ba9\u5feb\u4e50\u5728\u81ea\u5df1\u4e00\u751f\u7684\u7d2f\u79ef\u6700\u5927\u5316\uff0c\u5982\u679c\u8ba4\u540c\u8fd9\u4e00\u70b9\uff0c\u90a3\u5c31\u4f1a\u8bd5\u56fe\u8ba9\u81ea\u5df1\u7684\u8eab\u4f53\u66f4\u5065\u5eb7\uff0c\u6709\u673a\u4f1a\u5403\u5230\u66f4\u591a\u597d\u5403\u7684\u4e1c\u897f\uff0c\u66f4\u591a\u7684\u673a\u4f1a\u6253\u6e38\u620f\u3002</p> <p>\u5c06\u300c\u5feb\u4e50\u300d\u7406\u8bba\u5e94\u7528\u4e8e\u4f53\u9a8c\u3002\u505a\u4e8b\u60c5\u53ef\u4ee5\u83b7\u5f97\u4e00\u79cd\u4f53\u9a8c\uff0c\u4e0d\u540c\u7684\u4e8b\u60c5\u53ef\u4ee5\u5e26\u6765\u4e0d\u540c\u7684\u4f53\u9a8c\u3002\u5f88\u591a\u4e8b\u60c5\u90fd\u80fd\u5e26\u6765\u4e0d\u9519\u7684\u4f53\u9a8c\uff0c\u6bd4\u5982\u6253\u6e38\u620f\u3001\u8df3\u821e\u3001\u559d\u9152\uff0c\u8fd9\u4e9b\u4f53\u9a8c\u80fd\u5e26\u6765\u5feb\u4e50\u3002\u6211\u89c9\u5f97\u6784\u5efa\u5f00\u6e90\u9879\u76ee\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u9ad8\u7ea7\u7684\u4f53\u9a8c\uff0c\u6784\u5efa\u5f00\u6e90\u9879\u76ee\u5c31\u662f\u5728\u521b\u9020\u827a\u672f\uff0c\u80fd\u83b7\u5f97\u975e\u5e38\u9ad8\u7ea7\u7684\u667a\u8bc6\u4e0a\u7684\u5feb\u4e50\uff0c\u5f88\u591a\u4eba\u6d45\u5c1d\u8f84\u6b62\uff0c\u9047\u5230\u667a\u8bc6\u4e0a\u7684\u6311\u6218\u5c31\u653e\u5f03\u4e86\uff0c\u65e0\u6cd5\u4f53\u9a8c\u8fd9\u79cd\u5feb\u4e50\u3002\u79d1\u7814\u4e5f\u662f\u5c5e\u4e8e\u8fd9\u79cd\u667a\u8bc6\u7684\u5feb\u4e50\u3002</p>"},{"location":"2024-01-23/cq-en/","title":"An Introduction to Cached Quotients Lookup Arguments","text":"<p>This article is supported by the PSE Acceleration Program.</p> <p>Code: pylookup</p> <p>This code is an implementation based on the CQ paper. Please see <code>README.md</code> to learn how to run it.</p> <p>Additionally, it includes a file <code>cq.ipynb</code>, which is a Python notebook version of the implementation. It's a simplified version of the CQ implementation and is quite similar to this tutorial.</p>"},{"location":"2024-01-23/cq-en/#the-problem-lookup-arguments-solve","title":"The Problem Lookup Arguments Solve","text":"<p>In zero-knowledge proof systems, it's common to use arithmetic processes to convert a computational problem into an equivalent mathematical expression (usually a polynomial). This allows the use of mathematical properties to transform, compute, and verify polynomials. This is a key step in constructing zero-knowledge proofs because it enables complex computational processes to be precisely expressed and verified in mathematics.</p> <p>However, some computations cannot be effectively arithmetized, or their arithmetization may produce more constraints (polynomials). For example, proving a value is within a range (\\(0&lt;x&lt;5\\)) might require more than 10 constraints. In such cases, using lookup arguments can reduce the number of constraints and the size of the generated proof.</p> <p>Lookup arguments allow the prover to demonstrate that a value belongs to a predefined set.</p> <p>Taking the previous example, to prove \\(0&lt;x&lt;5\\), we only need one lookup constraint: \\(x \\in \\{1, 2, 3, 4\\}\\), that is, proving \\(x\\) is in the table \\(\\{1, 2, 3, 4\\}\\).</p> Table 1 2 3 4 <p>The above example is a single-column table. Further, a table can express any relationship, as long as the corresponding input and output can be found in the table, we can say that the lookup proof is valid.</p> Input 1 Input 2 Input 3 Output 1 2 3 6 2 3 4 24 2 3 8 48 4 8 3 13 13 6 4 33 <p>For example, the first row of the table can be defined as an addition: \\(1+2+3=6\\). As long as the given lookup is \\(\\{1, 2, 3, 6\\}\\), it satisfies the lookup constraint; the second row can be defined as multiplication: \\(2 * 3 * 4 = 24\\), and as long as the given lookup is \\(\\{2, 3, 4, 24\\}\\), it meets the lookup constraint.</p>"},{"location":"2024-01-23/cq-en/#the-contribution-of-cq","title":"The Contribution of CQ","text":"<p>As seen in the comparison from the paper (illustrated below), CQ (Cached Quotients Lookup Arguments) currently has the lowest computational complexity for the prover among lookup arguments, standing at \\(O(n \\log n)\\). This is achieved through certain preprocessing steps. Compared to Baloo, CQ offers fewer group operations and a smaller proof size.</p> <p></p> <p>The main difference between CQ and the four lookup arguments mentioned in the above table is that CQ utilizes the technique of logarithmic derivatives. This allows the prover's computations to be based on the original large table, without needing to extract a subtable from the large table, thereby making the prover's computations more efficient.</p> <p>Below, we explain the core principle of CQ. If you're interested in more details and optimizations, please refer to the original paper.</p>"},{"location":"2024-01-23/cq-en/#logarithmic-derivatives","title":"Logarithmic Derivatives","text":"<p>Lookup arguments is about proving that elements of a vector/table \\(\\vec f\\) are all contained within \\(\\vec t\\). This is consistent with other lookup arguments.</p> <p>Assume:</p> <ul> <li>\\(\\vec f = \\{f_1,  f_2,  f_3,  f_4,  ...,  f_n\\}\\)</li> <li>\\(\\vec t = \\{t_1,  t_2,  t_3,  t_4, ..,  t_n\\}\\)</li> </ul> <p>For example:</p> <ul> <li>\\(\\vec f = \\{1,  2,  2,  3,  3,  3\\}\\)</li> <li>\\(\\vec t = \\{1,  2,  3,  4\\}\\)</li> </ul> <p>The above problem can be transformed into a new one: construct a polynomial using these elements, which have the same roots:</p> <ul> <li>\\(f(x) = (x-1)(x-2)(x-2)(x-3)(x-3)(x-3)\\)</li> <li>\\(t(x) = (x-1)^1(x-2)^2(x-3)^3(x-4)^0\\)</li> </ul> <p>The advantage here is that we can utilize the mathematical properties of polynomials for subsequent calculations and proofs.</p> <p>Note that in \\(t(x)\\), the times of each element in \\(\\vec f\\) needs to be counted as the power of the corresponding root in the polynomial \\(t(x)\\). The times of elements not present is 0. As seen, the times of elements of \\(\\vec f\\) in \\(\\vec t\\) is:</p> <ul> <li>1 appears 1 time</li> <li>2 appears 2 times</li> <li>3 appears 3 times</li> <li>4 appears 0 time</li> </ul> <p>This can be represented by a vector \\(\\vec m\\):</p> <p>\\(\\vec m = \\{1,  2,  3,  0\\}\\)</p> <p>Hence, \\(t(x)\\) is constructed as: \\(t(x) = (x-1)^1(x-2)^2(x-3)^3(x-4)^0\\).</p> <p>If \\(f(x)\\) equals to \\(t(x)\\), it means that the elements of \\(\\vec f\\) are all in \\(\\vec t\\), satisfying the lookup argument proof. </p> <p>Constructing a multiplicative polynomial has another benefit: the order of elements in \\(\\vec f\\) and \\(\\vec t\\) does not need to be considered.</p> <p>However, in practice, we usually do not directly compare in this way because: 1. \\(\\vec f\\) is usually a secret value and not public, so a direct comparison is not possible. 2. The size of \\(\\vec f\\) and \\(\\vec t\\) is generally large, and the polynomials constructed have high degrees, making them relatively difficult to handle.</p> <p>Is there a better way to prove \\(f(x) = t(x)\\)?</p> <p>Yes. CQ uses the method of \"logarithmic derivatives\" mentioned in the paper Multivariate lookups based on logarithmic derivatives, transforming the multiplication relationship into an addition relationship, making the proof much more concise.</p> <p>What is logarithmic derivative?</p> <p>In mathematics, logarithmic derivative is a technique for finding the derivative of a function/polynomial, especially useful when the function is a product of multiple functions. This method simplifies the derivation process by applying the natural logarithm (\\(ln\\)) and the chain rule.</p> <p>Let's calculate the logarithmic derivative of \\(f(x) = (x-1)(x-2)^2(x-3)^3\\). Following the steps of logarithmic derivative, we first take the logarithm of \\(f(x)\\) and then differentiate the resulting expression. Here are the steps:</p> <p>Taking the logarithm:</p> <p>\\(\\ln(f(x)) = \\ln((x-1)(x-2)(x-2)(x-3)(x-3)(x-3))\\)</p> <p>Expanding the logarithm (using logarithmic properties to convert multiplication to addition):</p> <p>\\(\\ln(f(x)) = \\ln(x-1) + \\ln(x-2)+ \\ln(x-2)+ \\ln(x-3)+ \\ln(x-3) + \\ln(x-3)\\)</p> <p>Differentiating both sides (applying the chain rule and basic derivative rules):</p> <p>\\(\\frac{d}{dx}\\ln(f(x)) = \\frac{d}{dx}(\\ln(x-1) + \\ln(x-2)+ \\ln(x-2)+ \\ln(x-3)+ \\ln(x-3) + \\ln(x-3))\\)</p> <p>Simplifying to:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\frac{1}{x-1} + \\frac{1}{x-2}+ \\frac{1}{x-2} + \\frac{1}{x-3} + \\frac{1}{x-3} + \\frac{1}{x-3}\\)</p> <p>So:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\sum_{j \\in |\\vec f|} \\frac{1}{x-f_j}\\)</p> <p>Similarly, the logarithmic derivative of \\(t(x)\\) is:</p> <p>\\(\\frac{t'(x)}{t(x)} = \\frac{1}{x-1} + \\frac{2}{x-2}+ \\frac{3}{x-3}\\)</p> <p>So:</p> <p>\\(\\frac{t'(x)}{t(x)} = \\sum_{i \\in |\\vec t|} \\frac{m_i}{x-t_j}\\)</p> <p>Therefore, we need to prove:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\frac{t'(x)}{t(x)}\\)</p> <p>Or:</p> <p>\\(\\sum_{j \\in |\\vec f|} \\frac{1}{x-f_j} = \\sum_{i \\in |\\vec t|} \\frac{m_i}{x-t_i}\\)</p> <p>Simplifying further, define \\(a_i = m_i / (x - t_i)\\) and \\(b_j = 1 / (x - f_j)\\),</p> <p>We need to prove:</p> <p>\\(\\sum_i a_i = \\sum_j b_j\\) </p> <p>This process transforms the product of multiple functions into a summation form. Ultimately, the lookup proof is converted to proving the equality of logarithmic derivatives (\\(\\frac{f'(x)}{f(x)}\\) and \\(\\frac{t'(x)}{t(x)}\\)).</p>"},{"location":"2024-01-23/cq-en/#logarithmic-derivative-lookup-protocol","title":"Logarithmic Derivative Lookup Protocol","text":"<p>Through the above logarithmic derivatives, we can construct a simple lookup argument:</p> <ul> <li>The prover sends \\(\\vec f, \\vec t, \\vec m\\) to the verifier.</li> <li>The verifier sends a random number \\(\\beta\\) to the prover.</li> <li>The prover sends multiple values to the verifier: \\(a_i = m_i / (\\beta - t_i)\\) and \\(b_j = 1 / (\\beta - f_j)\\), where the ranges of \\(i\\) and \\(j\\) are the number of elements in \\(\\vec t\\) and \\(\\vec f\\), respectively, \\(i \\in |\\vec t|, j \\in |\\vec f|\\).</li> <li>The verifier performs three types of checks:<ul> <li>Check of \\(a_i\\) values: \\(a_i \\times (\\beta - t_i) = m_i\\).</li> <li>Check of \\(b_i\\) values: \\(b_i \\times (\\beta - f_i) = 1\\).</li> <li>Sum check: \\(\\sum_i a_i = \\sum_j b_j\\).</li> </ul> </li> </ul> <p>For the checks of \\(a_i\\) and \\(b_i\\), the above lookup protocol has an issue: the proof size is relatively large because all the \\(a_i\\) and \\(b_i\\) values need to be sent to the verifier. To resolve this issue, we can use the Schwartz-Zippel lemma, first encode all the \\(a_i\\) and \\(b_i\\) values into polynomials, then, the verifier only needs to send a random value for verification, which ensures that all the values of \\(a_i\\) and \\(b_i\\) provided by the prover are correct.</p> <p>For the sum check, we can directly use the univariate sumcheck.</p> <p>Next, let's see how to construct the corresponding proofs.</p>"},{"location":"2024-01-23/cq-en/#polynomial-construction-and-pairing-proving-a_i-and-b_i","title":"Polynomial Construction and Pairing: Proving \\(a_i\\) and \\(b_i\\)","text":"<p>To verify:</p> <ul> <li>The correctness of \\(a_i\\): \\(a_i \\times (t_i - \\beta) = m_i\\).</li> <li>The correctness of \\(b_i\\): \\(b_i \\times (f_i - \\beta) = 1\\).</li> </ul> <p>We construct polynomials for \\(a_i\\) and \\(b_i\\) respectively and then use the properties of polynomials for verification.</p> <p>This requires:</p> <ul> <li>Constructing polynomial \\(A(x)\\) from \\(a_i\\) and verifying its correctness.</li> <li>Constructing polynomial \\(B(x)\\) from \\(b_i\\) and verifying its correctness.</li> </ul> <p>Polynomials are usually constructed using Lagrange interpolation. This requires constructing a series of \\(\\{x_i, y_i\\}\\) value pairs to interpolate into a polynomial, usually \\(\\{x_i\\}\\) values come from a multiplicative subgroup, the size of the group is the size of \\(\\{y_i\\}\\), here respectively \\(|\\vec t|\\) and \\(|\\vec f|\\).</p> <p>How to construct \\(A(x)\\)?</p> <ol> <li>The verifier sends a random number \\(\\beta\\), let \\(x = \\beta\\).</li> <li>Select a multiplicative subgroup \\(H_t = \\{\\omega_i\\}\\) of size \\(|\\vec t|\\), \\(i \\in |\\vec t|\\).</li> <li>\\(A(\\omega_i) = a_i = m_i / (t_i - \\beta)\\). The \\(\\{x_i, y_i\\}\\) value pairs are \\(\\{\\omega_i, a_i\\}\\).</li> <li>Use Lagrange interpolation to construct the polynomial \\(A(x)\\).</li> </ol> <p>How to check if \\(A(x)\\) is correctly constructed?</p> <ol> <li>Interpolate \\(\\vec m\\) and \\(\\vec t\\) on the multiplicative subgroup to get polynomials \\(M(x), T(x)\\).</li> <li>On the multiplicative subgroup \\(H_t\\), the polynomial satisfies \\(A(x) = M(x)/(T(x) - \\beta)\\).</li> <li>Transform to \\(A(x)(T(x) - \\beta) - M(x) = 0\\).</li> <li>By the polynomial remainder theorem, \\(A(x)(T(x) - \\beta) - M(x) = Q_A(x) * Z_A(x)\\). This equation holds for any value of \\(x\\) on the entire group. \\(Q_A(x)\\) is the quotient polynomial, \\(Z_A(x) = \\prod_i(x - \\omega_i)\\) is the vanishing polynomial.</li> <li>The prover sends:<ol> <li>The commitment of \\(A(x)\\): \\([A(x)]_1\\).</li> <li>The commitment of \\(Q_A(x)\\): \\([Q_A(x)]_1\\).</li> <li>The commitment of \\(M(x)\\): \\([M(x)]_1\\).</li> </ol> </li> <li>The verifier independently computes the commitments of \\(T(x)\\) \\([T(x)]_2\\) and \\(Z_A(x)\\) \\([Z_A(x)]_2\\), then verifies using elliptic curve pairing for KZG verification: \\(e([T(x)]_2, [A(x)]_1) = e([1]_2, [A(x)]_1 * \\beta + [M(x)]_1) * e([Z_A(x)]_2, [Q_A(x)]_1)\\).</li> </ol> <p>Note: Different from the paper, for ease of explanation, some places in this article use a \\(-\\) sign instead of a \\(+\\) sign. This is because subtraction operations on the group are transformed into addition operations, e.g., for a group with \\(modulus = 5\\), \\(\\beta=-2\\%5 = 3\\), so \\((x - 2)\\%5 = x + 3\\). We can always transform subtraction into addition representation, so the symbols are not distinguished in certain scenarios.</p> <p>Construct \\(B(x)\\) in the same way:</p> <ol> <li>The verifier sends a random number \\(\\beta\\), let \\(x = \\beta\\).</li> <li>Select a multiplicative subgroup \\(H_f = \\{\\omega_j\\}\\) of size \\(|\\vec f|\\), \\(j \\in |\\vec f|\\).</li> <li>\\(B(\\omega_j) = b_j = 1 / (f_j - \\beta)\\). The \\(\\{x_j, y_j\\}\\) value pairs are \\(\\{\\omega_j, b_j\\}\\).</li> <li>Use Lagrange interpolation to construct the polynomial \\(B(x)\\).</li> </ol> <p>Check if \\(B(x)\\) is correctly constructed:</p> <ol> <li>Interpolate \\(\\vec f\\) on the multiplicative subgroup to get polynomial \\(F(x)\\).</li> <li>On the multiplicative subgroup \\(H_f\\), the polynomial satisfies \\(B(x) = 1/(F(x) - \\beta)\\).</li> <li>Transform to \\(B(x)(F(x) - \\beta) - 1 = 0\\).</li> <li>By the polynomial remainder theorem, \\(B(x)(F(x) - \\beta) - 1 = Q_B(x) * Z_B(x)\\). This equation holds for any value of \\(x\\) on the entire group. \\(Q_B(x)\\) is the quotient polynomial, \\(Z_B(x) = \\prod_j(x - \\omega_j)\\) is the vanishing polynomial.</li> <li>The prover sends:<ol> <li>The commitment of \\(B(x)\\): \\([B(x)]_1\\).</li> <li>The commitment of \\(Q_B(x)\\): \\([Q_B(x)]_1\\).</li> <li>The commitment of \\(F(x)\\): \\([F(x)]_1\\).</li> </ol> </li> <li>The verifier independently computes the commitment of \\(Z_B(x)\\) \\([Z_B(x)]_2\\), then verifies using elliptic curve pairing: \\(e([F(x)]_2, [B(x)]_1) = e([1]_2, [B(x)]_1 * \\beta + [1]_1) * e([Z_B(x)]_2, [Q_B(x)]_1)\\).</li> </ol> <p>Note: The verification process in the paper has been optimized. For ease of explanation, we do not use the same verification method as in the paper, but the core principle is the same, which is KZG verification through pairing.</p> <p>\\(B(x)\\) also needs further check to verify the polynomial's degree is correct, specifically by:</p> <ul> <li>Let \\(N = |\\vec t|, n = |\\vec f|\\)</li> <li>The prover sends<ul> <li>The commitment of \\(B(x)\\), \\(b = [B(x)]_1\\)</li> <li>The commitment of \\(X^{N\u22121\u2212(n\u22121)}\\), \\(r = [X^{N\u22121\u2212(n\u22121)}]_2\\)</li> <li>The commitment of \\(P(x)\\), \\(p = [P(x)]_2\\), where \\(P(X) := B(X) * X^{N\u22121\u2212(n\u22121)}\\)</li> </ul> </li> <li>The verifier checks: \\(e(b, r) = e(p, [1]_2)\\)</li> </ul> <p>The paper here makes a certain optimization, using \\(B_0(x)\\) instead of \\(B(x)\\), but the goal is the same: to check the degree of the polynomial.</p>"},{"location":"2024-01-23/cq-en/#sumcheck","title":"Sumcheck","text":"<p>Next, we need to verify that the sum holds: \\(\\sum_i a_i = \\sum_j b_j\\).</p> <p>After proving that each item on both sides is correct, we now need to prove that the sum of both sides is correct, i.e., they are equal to each other. The method to prove is univariate sumcheck. This can be demonstrated using the following lemma originally used in the Aurora construction (\\([BCR+19]\\), Remark 5.6):</p> \\[ \\sum_{a \\in H} f(a) = t \\cdot f(0) \\] <p>Where:</p> <ul> <li>\\(H\\) is a multiplicative subgroup: \\(H=\\{1, \\omega, \\omega^2, ..., \\omega^{t-2}, \\omega^{t-1} \\}\\), \\(t\\) is the number of elements in \\(H\\), \\(t=|H|\\), \\(\\omega\\) is a primitive root.</li> <li>\\(f(x)\\) is a polynomial, \\(f(x) = f_0 + f_1x + f_2x^2 + ... + f_{t-2}x^{t-2} + f_{t-1}x^{t-1}\\).</li> </ul> <p>Let's decompose the calculation process, substitute the values of \\(a\\) from \\(H\\) into \\(f(x)\\):</p> \\[ \\begin{align*} &amp; \\sum_{a \\in H} f(a) = f(1) + f(\\omega) + f(\\omega^2) + ... + + f(\\omega^{t-1}) \\\\ &amp; \\\\ &amp; \\\\ &amp; = f_0 + f_1 + f_2 + ... + f_{t-2} + f_{t-1} \\\\ &amp; + f_0 + f_1\\omega + f_2\\omega^2 + ... + f_{t-2}\\omega^{t-2} + f_{t-1}\\omega^{t-1} \\\\ &amp; + f_0 + f_1(\\omega^2) + f_2(\\omega^2)^2 + ... + f_{t-2}(\\omega^2)^{t-2} + f_{t-1}(\\omega^2)^{t-1} \\\\ &amp; . \\\\ &amp; . \\\\ &amp; . \\\\ &amp; + f_0 + f_1(\\omega^{t-2}) + f_2(\\omega^{t-2})^2 + ... + f_{t-2}(\\omega^{t-2})^{t-2} + f_{t-1}(\\omega^{t-2})^{t-1} \\\\ &amp; + f_0 + f_1(\\omega^{t-1}) + f_2(\\omega^{t-1})^2 + ... + f_{t-2}(\\omega^{t-1})^{t-2} + f_{t-1}(\\omega^{t-1})^{t-1} \\\\ &amp; \\\\ &amp; \\\\ &amp; = t \\cdot f_0 + f_1\\sum_{i \\in t}(\\omega)^i + f_2\\sum_{i \\in t}(\\omega^2)^i + ... + f_{t-2}\\sum_{i \\in t}(\\omega^{t-2})^i + f_{t-1}\\sum_{i \\in t}(\\omega^{t-1})^i \\\\ \\end{align*} \\] <p>In the above formula, except for the first term, the sum of each of the last \\(t-1\\) terms is 0. This is because each \\(\\omega^i\\) is an element of the multiplicative subgroup in the finite field, and each element can be the generator of the multiplicative subgroup, which means that the sum of each of the last \\(t-1\\) terms is the sum of all elements in the multiplicative subgroup.</p> <p>The multiplicative subgroup in the finite field is structurally similar to the unit circle in the complex field. On the unit circle:</p> <ul> <li>All elements are generated by the generator and are evenly distributed on the unit circle.</li> <li>Each element has another symmetric point based on the origin, the vectors of these two points in the complex plane cancel each other out, and their sum is 0.</li> </ul> <p>Therefore, the sum of all elements of the unit circle is 0.</p> <p>Since we need to do the interpolation with FFT(Fast Fourier Transform) algorithm, so the number of elements in the multiplicative subgroup need to be powers of 2. In the multiplicative subgroup, each element also has a symmetric point. For a multiplicative subgroup \\(H\\) with \\(t\\) elements: \\(H_i + H_{i+t/2} = 0\\), these two symmetric points add up to 0, so the sum of all elements in the multiplicative subgroup is also 0. This is why the sum of each of the last \\(t-1\\) terms is 0:</p> <p>$$ \\begin{align*} &amp; \\sum_{i \\in t}(\\omega)^i = 0\\ &amp; \\sum_{i \\in t}(\\omega<sup>2)</sup>i = 0 \\ &amp; . \\</p> <p>&amp; . \\ &amp; . \\ &amp; \\sum_{i \\in t}(\\omega<sup>{t-2})</sup>i = 0 \\ &amp; \\sum_{i \\in t}(\\omega<sup>{t-1})</sup>i = 0 \\ \\end{align*} $$</p> <p>So:</p> \\[ \\begin{align*} &amp; \\sum_{a \\in H} f(a) \\\\ &amp; = t \\cdot f_0 + f_1\\sum_{i \\in t}(\\omega)^i + f_2\\sum_{i \\in t}(\\omega^2)^i + ... + f_{t-2}\\sum_{i \\in t}(\\omega^{t-2})^i + f_{t-1}\\sum_{i \\in t}(\\omega^{t-1})^i \\\\ &amp; = t \\cdot f_0 + f_1 \\cdot 0 + f_2 \\cdot 0 + ... + f_{t-2} \\cdot 0 + f_{t-1} \\cdot 0 \\\\ &amp; = t \\cdot f_0 \\end{align*} \\] <p>Thus:</p> <p>\\(\\sum_{x \\in H_t} A(x) = |\\vec t| \\cdot A(0)\\)</p> <p>\\(\\sum_{x \\in H_f} B(x) = |\\vec f| \\cdot B(0)\\)</p> <p>We only need to verify if the following relation holds: </p> <p>\\(|\\vec t| \\cdot A(0) \\stackrel{?}{=} |\\vec f| \\cdot B(0)\\)</p> <p>Finally, with these three proofs(\\(A(x), B(x), Sumcheck\\)), we complete the CQ lookup arguments.</p>"},{"location":"2024-01-23/cq-en/#acknowledgements","title":"Acknowledgements","text":"<ul> <li>Guo Yu</li> <li>Yu-Ming Hsu</li> <li>Jing-Jie Wang</li> <li>Paul Yu</li> <li>Even</li> <li>Xiaoxiong</li> </ul>"},{"location":"2024-01-23/cq-en/#reference","title":"Reference","text":"<ul> <li>cq: Cached quotients for fast lookups</li> <li>A Close Look at a Lookup Argument - Mary Maller</li> <li>\u7406\u89e3 PLONK\uff08\u4e03\uff09\uff1aLookup Gate</li> </ul>"},{"location":"2024-01-23/cq/","title":"\u7b80\u6790 Cached Quotients Lookup Arguments","text":"<p>\u672c\u6587\u6765\u81ea\u4e8e  PSE Acceleration Program \u7684\u8d5e\u52a9\u652f\u6301.</p> <p>\u4ee3\u7801: pylookup</p> <p>\u8fd9\u4e2a\u4ee3\u7801\u662f\u53c2\u8003 CQ \u7684 paper \u5b9e\u73b0\u7684, \u8bf7\u770b <code>README.md</code> \u4e86\u89e3\u5982\u4f55\u8fd0\u884c.</p> <p>\u53e6\u5916, \u5176\u4e2d\u8fd8\u5305\u62ec\u4e86\u4e00\u4e2a <code>cq.ipynb</code> \u6587\u4ef6, \u662f\u4e00\u4e2a Python notebook \u7248\u672c\u7684\u5b9e\u73b0, \u662f\u4e00\u4e2a\u7b80\u5316\u7248\u672c\u7684 CQ \u5b9e\u73b0, \u548c\u8fd9\u4e2a\u6559\u7a0b\u6bd4\u8f83\u63a5\u8fd1.</p>"},{"location":"2024-01-23/cq/#lookup","title":"Lookup \u8981\u89e3\u51b3\u7684\u95ee\u9898","text":"<p>\u5728\u96f6\u77e5\u8bc6\u8bc1\u660e\u7cfb\u7edf\u4e2d, \u901a\u5e38\u4f1a\u5229\u7528\u7b97\u6570\u5316\u8fc7\u7a0b\u5c06\u4e00\u4e2a\u8ba1\u7b97\u95ee\u9898\u8f6c\u5316\u4e3a\u4e0e\u4e4b\u7b49\u4ef7\u7684\u6570\u5b66\u8868\u8fbe\u5f62\u5f0f(\u901a\u5e38\u662f\u591a\u9879\u5f0f), \u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528\u6570\u5b66\u6027\u8d28\u6765\u5bf9\u591a\u9879\u5f0f\u8fdb\u884c\u53d8\u6362, \u8ba1\u7b97\u548c\u9a8c\u8bc1. \u8fd9\u662f\u6784\u5efa\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684\u5173\u952e\u6b65\u9aa4, \u56e0\u4e3a\u5b83\u4f7f\u5f97\u590d\u6742\u7684\u8ba1\u7b97\u8fc7\u7a0b\u53ef\u4ee5\u5728\u6570\u5b66\u4e0a\u88ab\u7cbe\u786e\u5730\u8868\u8fbe\u548c\u9a8c\u8bc1.</p> <p>\u4f46\u6709\u4e9b\u8ba1\u7b97\u4e0d\u80fd\u88ab\u5f88\u597d\u7684\u7b97\u6570\u5316, \u6216\u8005\u7b97\u6570\u5316\u540e\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u7ea6\u675f(\u591a\u9879\u5f0f). \u6bd4\u5982\u8bc1\u660e\u4e00\u4e2a\u503c\u662f\u5426\u5728\u4e00\u4e2a\u8303\u56f4\u5185(\\(0&lt;x&lt;5\\)), \u53ef\u80fd\u9700\u8981 10 \u4e2a\u4ee5\u4e0a\u7684\u7ea6\u675f. \u8fd9\u65f6\u5019\u4f7f\u7528 Lookup Arguments \u80fd\u51cf\u5c11\u7ea6\u675f\u7684\u6570\u91cf, \u51cf\u5c11\u751f\u6210\u7684\u8bc1\u660e\u5927\u5c0f. </p> <p>Lookup Arguments \u5141\u8bb8\u8bc1\u660e\u8005\uff08prover\uff09\u8bc1\u660e\u4e00\u4e2a\u503c\u5c5e\u4e8e\u4e00\u4e2a\u9884\u5148\u5b9a\u4e49\u7684\u96c6\u5408. </p> <p>\u62ff\u521a\u624d\u7684\u4f8b\u5b50\u6765\u8bf4, \u8bc1\u660e \\(0&lt;x&lt;5\\) \u53ea\u9700\u8981\u4e00\u4e2a lookup \u7ea6\u675f: \\(x \\in \\{1, 2, 3, 4\\}\\), \u5373\u8bc1\u660e \\(x\\) \u5728\u8868 \\(\\{1, 2, 3, 4\\}\\) \u4e2d.</p> Table 1 2 3 4 <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u4e00\u4e2a\u5355\u5217\u7684\u8868\u683c. \u66f4\u8fdb\u4e00\u6b65, \u4e00\u4e2a\u8868\u53ef\u4ee5\u8868\u8fbe\u4efb\u610f\u7684\u5173\u7cfb, \u53ea\u8981\u5bf9\u5e94\u7684\u8f93\u5165\u8f93\u51fa\u80fd\u5728\u8868\u4e2d\u627e\u5230, \u6211\u4eec\u5c31\u53ef\u4ee5\u8bf4 lookup \u8bc1\u660e\u6210\u7acb.</p> Input 1 Input 2 Input 3 Output 1 2 3 6 2 3 4 24 2 3 8 48 4 8 3 13 13 6 4 33 <p>\u6bd4\u5982\u8868\u683c\u7b2c\u4e00\u884c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u52a0\u6cd5: \\(1+2+3=6\\), \u53ea\u8981\u7ed9\u5b9a\u7684\u67e5\u627e\u662f \\(\\{1, 2, 3, 6\\}\\), \u5c31\u6ee1\u8db3 lookup \u7684\u7ea6\u675f; \u7b2c\u4e8c\u884c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e58\u6cd5: \\(2 * 3 * 4 = 24\\), , \u53ea\u8981\u7ed9\u5b9a\u7684\u67e5\u627e\u662f \\(\\{2, 3, 4, 24\\}\\), \u5c31\u6ee1\u8db3 lookup \u7684\u7ea6\u675f.</p>"},{"location":"2024-01-23/cq/#cq","title":"CQ \u7684\u8d21\u732e","text":"<p>\u4ece\u8bba\u6587\u4e2d\u7684\u5bf9\u6bd4(\u4e0b\u56fe)\u53ef\u4ee5\u770b\u5230, CQ(Cached Quotients Lookup Arguments) \u662f\u76ee\u524d prover \u8ba1\u7b97\u590d\u6742\u5ea6\u6700\u4f4e\u7684 lookup argument, \u4ec5\u4e3a \\(O(n logn)\\), \u8fd9\u4e00\u70b9\u901a\u8fc7\u4e00\u5b9a\u7684\u9884\u5904\u7406\u6765\u5b9e\u73b0. \u548c Baloo \u76f8\u6bd4, CQ \u6709\u66f4\u5c11\u7684\u7fa4\u8fd0\u7b97\u548c\u66f4\u5c0f\u7684 proof size.</p> <p></p> <p>CQ \u548c\u4e0a\u8868\u4e2d\u63d0\u5230\u7684\u56db\u4e2a lookup arguments \u4e3b\u8981\u5dee\u522b\u662f, CQ \u5229\u7528\u4e86\u5bf9\u6570\u5bfc\u6570\u8fd9\u4e2a\u6280\u5de7, \u8ba9 prover \u7684\u8ba1\u7b97\u53ef\u4ee5\u57fa\u4e8e\u539f\u59cb\u7684\u5927\u8868, \u800c\u4e0d\u9700\u8981\u4ece\u5927\u8868\u4e2d\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u8868(subtable), \u4ece\u800c\u8ba9 prover \u7684\u8ba1\u7b97\u66f4\u52a0\u9ad8\u6548.</p> <p>\u4e0b\u9762\u6211\u4eec\u9488\u5bf9 CQ \u7684\u6838\u5fc3\u539f\u7406\u8fdb\u884c\u89e3\u91ca, \u5982\u679c\u4f60\u5bf9\u66f4\u591a\u7684\u7ec6\u8282\u548c\u4f18\u5316\u611f\u5174\u8da3, \u53ef\u4ee5\u53c2\u8003\u539f\u59cb\u7684 paper.</p>"},{"location":"2024-01-23/cq/#_1","title":"\u5bf9\u6570\u5bfc\u6570","text":"<p>lookup argument \u5c31\u662f\u8981\u8bc1\u660e\u5411\u91cf/\u8868 \\(\\vec f\\)  \u4e2d\u7684\u5143\u7d20\u90fd\u5728  \\(\\vec t\\)  \u4e2d,  \u8fd9\u4e00\u70b9\u548c\u5176\u5b83 lookup argument \u90fd\u662f\u4e00\u81f4\u7684.</p> <p>\u5047\u8bbe:</p> <ul> <li>\\(\\vec f = \\{f_1,  f_2,  f_3,  f_4,  ...,  f_n\\}\\)</li> <li>\\(\\vec t = \\{t_1,  t_2,  t_3,  t_4, ..,  t_n\\}\\)</li> </ul> <p>\u4f8b\u5982:</p> <ul> <li>\\(\\vec f = \\{1,  2,  2,  3,  3,  3\\}\\)</li> <li>\\(\\vec t = \\{1,  2,  3,  4\\}\\)</li> </ul> <p>\u4e0a\u9762\u7684\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u65b0\u7684\u95ee\u9898: \u7528\u8fd9\u4e9b\u5143\u7d20\u6784\u5efa\u4e00\u4e2a\u591a\u9879\u5f0f, \u4ed6\u4eec\u62e5\u6709\u76f8\u540c\u7684\u6839:</p> <ul> <li>\\(f(x) = (x-1)(x-2)(x-2)(x-3)(x-3)(x-3)\\)</li> <li>\\(t(x) = (x-1)^1(x-2)^2(x-3)^3(x-4)^0\\)</li> </ul> <p>\u8fd9\u6837\u7684\u597d\u5904\u662f, \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u591a\u9879\u5f0f\u7684\u6570\u5b66\u6027\u8d28\u8fdb\u884c\u540e\u7eed\u7684\u8ba1\u7b97\u548c\u8bc1\u660e.</p> <p>\u6ce8\u610f \\(t(x)\\) \u4e2d\u9700\u8981\u7edf\u8ba1 \\(\\vec f\\) \u4e2d\u51fa\u73b0\u91cd\u590d\u5143\u7d20\u7684\u6b21\u6570,  \u4f5c\u4e3a\u591a\u9879\u5f0f \\(t(x)\\) \u5bf9\u5e94\u6839\u7684\u4f4d\u7f6e\u7684\u5e42\u6b21,  \u6ca1\u6709\u51fa\u73b0\u7684\u5143\u7d20\u7684\u6b21\u6570\u4e3a 0. \u53ef\u4ee5\u770b\u5230,   \\(\\vec f\\)  \u4e2d\u5143\u7d20\u5728  \\(\\vec t\\)  \u4e2d\u51fa\u73b0\u7684\u6b21\u6570:</p> <ul> <li>1 \u5728  \\(\\vec t\\)  \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e3a 1</li> <li>2 \u51fa\u73b0\u6b21\u6570\u4e3a 2</li> <li>3 \u51fa\u73b0\u6b21\u6570\u4e3a 3</li> <li>4 \u51fa\u73b0\u6b21\u6570\u4e3a 0</li> </ul> <p>\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e00\u4e2a\u5411\u91cf \\(\\vec m\\) \u8868\u793a:</p> <p>\\(\\vec m = \\{1,  2,  3,  0\\}\\)</p> <p>\u6240\u4ee5 \\(t(x)\\) \u6709\u8fd9\u6837\u7684\u6784\u9020: \\(t(x) = (x-1)^1(x-2)^2(x-3)^3(x-4)^0\\).</p> <p>\u53ef\u4ee5\u770b\u5230, \u5982\u679c \\(f(x)\\) \u7b49\u4e8e \\(t(x)\\) , \u5c31\u53ef\u4ee5\u8bf4  \\(\\vec f\\)  \u4e2d\u7684\u5143\u7d20\u90fd\u5728  \\(\\vec t\\)  \u4e2d, \u6ee1\u8db3 lookup argument \u7684\u8bc1\u660e. </p> <p>\u6784\u9020\u8fde\u4e58\u7684\u591a\u9879\u5f0f\u8fd8\u6709\u4e00\u4e2a\u597d\u5904, \u53ef\u4ee5\u4e0d\u7528\u8003\u8651  \\(\\vec f\\)  \u548c  \\(\\vec t\\)  \u4e24\u4e2a\u5411\u91cf\u4e2d\u5143\u7d20\u7684\u987a\u5e8f.</p> <p>\u4e0d\u8fc7\u5b9e\u9645\u4e2d\u901a\u5e38\u4e0d\u4f1a\u76f4\u63a5\u5bf9\u6bd4, \u56e0\u4e3a: 1.  \\(\\vec f\\) \u901a\u5e38\u662f\u79d8\u5bc6\u7684\u503c, \u4e0d\u662f\u516c\u5f00\u7684, \u4e0d\u80fd\u76f4\u63a5\u5bf9\u6bd4 2.  \\(\\vec f\\)  \u548c  \\(\\vec t\\)  \u7684 size \u4e00\u822c\u90fd\u975e\u5e38\u5927, \u6784\u5efa\u7684\u591a\u9879\u5f0f\u6b21\u6570\u5f88\u9ad8, \u76f8\u5bf9\u96be\u4ee5\u5904\u7406</p> <p>\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u5f0f\u8bc1\u660e \\(f(x) = t(x)\\) \u5462?</p> <p>\u6709. CQ \u4f7f\u7528\u4e86Multivariate lookups based on logarithmic derivatives\u8bba\u6587\u4e2d\u63d0\u5230\u7684\"\u5bf9\u6570\u5bfc\u6570\u6cd5\",  \u5c06\u4e58\u6cd5\u5173\u7cfb\u8f6c\u6362\u4e3a\u52a0\u6cd5\u5173\u7cfb,  \u8ba9\u8bc1\u660e\u53d8\u5f97\u7b80\u6d01\u4e86\u5f88\u591a.</p> <p>\u4ec0\u4e48\u53eb\u5bf9\u6570\u5bfc\u6570\u6cd5? </p> <p>\u5728\u6570\u5b66\u4e2d, \u5bf9\u6570\u5bfc\u6570\u6cd5\u662f\u4e00\u79cd\u6c42\u51fd\u6570\u5bfc\u6570\u7684\u6280\u5de7, \u7279\u522b\u9002\u7528\u4e8e\u590d\u6742\u51fd\u6570\u7684\u6c42\u5bfc, \u5c24\u5176\u662f\u5f53\u51fd\u6570\u662f\u591a\u4e2a\u51fd\u6570\u7684\u4e58\u79ef\u5f62\u5f0f\u65f6. \u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u5e94\u7528\u81ea\u7136\u5bf9\u6570\uff08\\(ln\\)\uff09\u548c\u94fe\u5f0f\u6cd5\u5219\u6765\u7b80\u5316\u6c42\u5bfc\u8fc7\u7a0b. </p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u8ba1\u7b97 \\(f(x) = (x-1)(x-2)^2(x-3)^3\\) \u7684\u5bf9\u6570\u5bfc\u6570. \u6309\u7167\u5bf9\u6570\u5bfc\u6570\u6cd5\u7684\u6b65\u9aa4, \u6211\u4eec\u5148\u5bf9 \\(f(x)\\) \u53d6\u5bf9\u6570, \u7136\u540e\u5bf9\u6240\u5f97\u8868\u8fbe\u5f0f\u6c42\u5bfc. \u4e0b\u9762\u662f\u5177\u4f53\u7684\u8ba1\u7b97\u6b65\u9aa4:</p> <p>\u53d6\u5bf9\u6570:</p> <p>\\(\\ln(f(x)) = \\ln((x-1)(x-2)(x-2)(x-3)(x-3)(x-3))\\)</p> <p>\u5c55\u5f00\u5bf9\u6570\uff08\u5229\u7528\u5bf9\u6570\u7684\u6027\u8d28, \u5c06\u4e58\u79ef\u8f6c\u6362\u4e3a\u6c42\u548c\uff09:</p> <p>\\(\\ln(f(x)) = \\ln(x-1) + \\ln(x-2)+ \\ln(x-2)+ \\ln(x-3)+ \\ln(x-3) + \\ln(x-3)\\)</p> <p>\u5bf9\u7b49\u5f0f\u4e24\u8fb9\u6c42\u5bfc\uff08\u5e94\u7528\u94fe\u5f0f\u6cd5\u5219\u548c\u57fa\u672c\u5bfc\u6570\u89c4\u5219\uff09:</p> <p>\\(\\frac{d}{dx}\\ln(f(x)) = \\frac{d}{dx}(\\ln(x-1) + \\ln(x-2)+ \\ln(x-2)+ \\ln(x-3)+ \\ln(x-3) + \\ln(x-3))\\)</p> <p>\u5316\u7b80\u4e3a:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\frac{1}{x-1} + \\frac{1}{x-2}+ \\frac{1}{x-2} + \\frac{1}{x-3} + \\frac{1}{x-3} + \\frac{1}{x-3}\\)</p> <p>\u5373:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\sum_{j \\in |\\vec f|} \\frac{1}{x-f_j}\\)</p> <p>\u540c\u6837\u5bf9 \\(t(x)\\) \u6c42\u5bf9\u6570\u5bfc\u6570\u5f97\u5230:</p> <p>\\(\\frac{t'(x)}{t(x)} = \\frac{1}{x-1} + \\frac{2}{x-2}+ \\frac{3}{x-3}\\)</p> <p>\u5373:</p> <p>\\(\\frac{t'(x)}{t(x)} = \\sum_{i \\in |\\vec t|} \\frac{m_i}{x-t_j}\\)</p> <p>\u6240\u4ee5\u9700\u8981\u8bc1\u660e:</p> <p>\\(\\frac{f'(x)}{f(x)} = \\frac{t'(x)}{t(x)}\\)</p> <p>\u5373:</p> <p>\\(\\sum_{j \\in |\\vec f|} \\frac{1}{x-f_j} = \\sum_{i \\in |\\vec t|} \\frac{m_i}{x-t_i}\\)</p> <p>\u7b80\u5316\u4e00\u4e0b\u5199\u6cd5, \u5b9a\u4e49 \\(a_i = m_i / (x - t_i)\\) \u548c  \\(b_j = 1 / (x - f_j)\\), </p> <p>\u5373\u9700\u8981\u8bc1\u660e:</p> <p>\\(\\sum_i a_i = \\sum_j b_j\\) </p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u591a\u4e2a\u51fd\u6570\u7684\u4e58\u79ef\u8f6c\u6362\u4e3a\u6c42\u548c\u7684\u5f62\u5f0f. \u6700\u7ec8\u5c06 lookup \u8bc1\u660e\u8f6c\u6362\u4e3a\u8bc1\u660e\u5bf9\u6570\u5bfc\u6570(\\(\\frac{f'(x)}{f(x)}\\) \u548c \\(\\frac{t'(x)}{t(x)}\\)) \u76f8\u7b49.</p>"},{"location":"2024-01-23/cq/#lookup_1","title":"\u5bf9\u6570\u5bfc\u6570 lookup \u534f\u8bae","text":"<p>\u901a\u8fc7\u4e0a\u9762\u7684\u5bf9\u6570\u5bfc\u6570\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 lookup argument:</p> <ul> <li>prover \u7ed9 verifier \u53d1\u9001 \\(\\vec f, \\vec t, \\vec m\\)</li> <li>verifier \u7ed9 prover \u53d1\u9001\u968f\u673a\u6570 \\(\\beta\\)</li> <li>prover \u7ed9 verifier \u53d1\u9001\u591a\u4e2a\u503c:  \\(a_i = m_i / (\\beta - t_i)\\) \u548c  \\(b_j = 1 / (\\beta - f_j)\\),  \u5176\u4e2d \\(i\\) \u548c \\(j\\) \u7684\u53d6\u503c\u8303\u56f4\u4e3a \\(\\vec t\\) \u548c \\(\\vec f\\) \u4e2d\u5143\u7d20\u7684\u4e2a\u6570, \u5373 \\(i \\in |\\vec t|, j \\in |\\vec f|\\) </li> <li> <p>verifier \u505a\u4e09\u79cd\u68c0\u67e5</p> <ul> <li>\\(a_i\\) \u503c\u68c0\u67e5: \\(a_i * (\\beta - t_i) = m_i\\) </li> <li>\\(b_i\\) \u503c\u68c0\u67e5: \\(b_i * (\\beta - f_i) = 1\\) </li> <li>sum \u68c0\u67e5: \\(\\sum_i a_i = \\sum_j b_j\\) </li> </ul> </li> </ul> <p>\u5bf9\u4e8e \\(a_i\\) \u548c \\(b_i\\) \u7684\u68c0\u67e5, \u4e0a\u9762\u7684 lookup \u534f\u8bae\u6709\u4e00\u4e2a\u95ee\u9898, \u5c31\u662f proof size \u6bd4\u8f83\u5927, \u56e0\u4e3a\u9700\u8981\u5c06\u6240\u6709\u7684 \\(a_i\\) \u548c \\(b_i\\) \u503c\u90fd\u53d1\u7ed9 verifier. \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898, \u6211\u4eec\u53ef\u4ee5\u5229\u7528 Schwartz-Zippel \u5b9a\u7406, \u5c06\u6240\u6709 \\(a_i\\) \u548c \\(b_i\\) \u7684\u503c\u7f16\u7801\u5230\u591a\u9879\u5f0f\u4e2d, \u7136\u540e verifier \u53ea\u9700\u8981\u53d1\u9001\u4e00\u4e2a\u968f\u673a\u503c\u8fdb\u884c\u9a8c\u8bc1\u5c31\u53ef\u4ee5\u4fdd\u8bc1 prover \u63d0\u4f9b\u7684\u6240\u6709 \\(a_i\\) \u548c \\(b_i\\) \u7684\u503c\u662f\u6b63\u786e\u7684. </p> <p>\u5bf9\u4e8e sum \u68c0\u67e5, \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 univariate sumcheck.</p> <p>\u4e0b\u9762\u6211\u4eec\u5206\u522b\u770b\u770b\u5982\u4f55\u6784\u9020\u5bf9\u5e94\u7684\u8bc1\u660e.</p>"},{"location":"2024-01-23/cq/#pairing-a_i-b_i","title":"\u591a\u9879\u5f0f\u6784\u9020\u548c pairing: \u8bc1\u660e  \\(a_i\\) \u548c \\(b_i\\)","text":"<p>\u4e3a\u4e86\u9a8c\u8bc1:</p> <ul> <li>\\(a_i\\) \u7684\u6b63\u786e\u6027: \\(a_i * (t_i - \\beta) = m_i\\) </li> <li>\\(b_i\\) \u7684\u6b63\u786e\u6027: \\(b_i * (f_i - \\beta) = 1\\) </li> </ul> <p>\u6211\u4eec\u901a\u8fc7\u5c06 \\(a_i\\) \u548c \\(b_i\\) \u5206\u522b\u6784\u9020\u6210\u4e00\u4e2a\u591a\u9879\u5f0f, \u7136\u540e\u5229\u7528\u591a\u9879\u5f0f\u7684\u6027\u8d28\u6765\u8fdb\u884c\u9a8c\u8bc1.</p> <p>\u6240\u4ee5\u9700\u8981:</p> <ul> <li>\u4ece  \\(a_i\\) \u6784\u5efa\u51fa\u591a\u9879\u5f0f \\(A(x)\\), \u5e76\u9a8c\u8bc1\u6784\u9020\u7684\u6b63\u786e\u6027</li> <li>\u4ece  \\(b_i\\) \u6784\u5efa\u51fa\u591a\u9879\u5f0f \\(B(x)\\), \u5e76\u9a8c\u8bc1\u6784\u9020\u7684\u6b63\u786e\u6027</li> </ul> <p>\u6784\u9020\u591a\u9879\u5f0f\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5. \u8fd9\u5c31\u9700\u8981\u6784\u9020\u4e00\u7cfb\u5217 \\(\\{x_i, y_i\\}\\) \u503c\u5bf9, \u5c06\u8fd9\u4e9b\u503c\u5bf9\u63d2\u503c\u6210\u591a\u9879\u5f0f, \u901a\u5e38 \\(\\{x_i\\}\\) \u7684\u503c\u6765\u81ea\u4e8e\u4e00\u4e2a\u4e58\u6cd5\u5b50\u7fa4, \u7fa4\u7684\u5927\u5c0f\u4e3a \\(\\{y_i\\}\\) \u7684\u5927\u5c0f, \u8fd9\u91cc\u5206\u522b\u4e3a \\(|\\vec t|\\) \u548c \\(|\\vec f|\\)</p> <p>\u5982\u4f55\u6784\u9020 \\(A(x)\\)? </p> <ol> <li>verifier \u53d1\u9001\u968f\u673a\u6570 \\(\\beta\\), \u4ee4 \\(x =  \\beta\\)</li> <li>\u9009\u62e9\u5927\u5c0f\u4e3a \\(|\\vec t|\\) \u7684\u4e58\u6cd5\u5b50\u7fa4  \\(H_t = \\{\\omega_i\\}\\),  \\(i \\in |\\vec t|\\)</li> <li>\\(A(\\omega_i) = a_i = m_i / (t_i - \\beta)\\).  \\(\\{x_i, y_i\\}\\) \u503c\u5bf9\u4e3a  \\(\\{\\omega_i, a_i\\}\\) </li> <li>\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u5f97\u5230\u591a\u9879\u5f0f \\(A(x)\\)</li> </ol> <p>\u5982\u4f55\u68c0\u67e5 \\(A(x)\\) \u88ab\u6b63\u786e\u6784\u9020?</p> <ol> <li>\u5206\u522b\u5bf9 \\(\\vec m\\) \u548c \\(\\vec t\\) \u5728\u4e58\u6cd5\u5b50\u7fa4\u4e0a\u8fdb\u884c\u63d2\u503c\u5f97\u5230\u591a\u9879\u5f0f \\(M(x), T(x)\\)</li> <li>\u5728\u4e58\u6cd5\u5b50\u7fa4  \\(H_t\\) \u4e0a, \u591a\u9879\u5f0f\u6ee1\u8db3 \\(A(x) = M(x)/(T(x) - \\beta)\\)</li> <li>\u53d8\u6362\u4e3a \\(A(x)(T(x) - \\beta) - M(x) = 0\\)</li> <li>\u7531\u591a\u9879\u5f0f\u4f59\u5f0f\u5b9a\u7406\u5f97\u5230 \\(A(x)(T(x) - \\beta) - M(x) = Q_A(x) * Z_A(x)\\). \u8fd9\u4e2a\u7b49\u5f0f\u5bf9 \\(x\\) \u4e3a\u7fa4\u4e0a\u7684\u4efb\u610f\u503c\u90fd\u6210\u7acb. \u5176\u4e2d \\(Q_A(x)\\) \u4e3a\u5546\u591a\u9879\u5f0f, \\(Z_A(x) = \\prod_i(x - \\omega_i)\\) \u4e3a\u6d88\u5931\u591a\u9879\u5f0f</li> <li>prover \u53d1\u9001<ol> <li>\\(A(x)\\) \u7684\u627f\u8bfa \\([A(x)]_1\\)</li> <li>\\(Q_A(x)\\) \u7684\u627f\u8bfa \\([Q_A(x)]_1\\)</li> <li>\\(M(x)\\) \u7684\u627f\u8bfa \\([M(x)]_1\\)</li> </ol> </li> <li>verifier \u81ea\u884c\u8ba1\u7b97 \\(T(x)\\) \u7684\u627f\u8bfa \\([T(x)]_2\\) \u548c  \\(Z_A(x)\\) \u7684\u627f\u8bfa \\([Z_A(x)]_2\\), \u7136\u540e\u901a\u8fc7\u692d\u5706\u66f2\u7ebf\u7684 pairing \u8fdb\u884c KZG  \u9a8c\u8bc1: \\(e([T(x)]_2, [A(x)]_1) = e([1]_2, [A(x)]_1 * \\beta + [M(x)]_1) * e([Z_A(x)]_2, [Q_A(x)]_1)\\)</li> </ol> <p>\u6ce8\u610f: \u548c paper \u6709\u4e9b\u533a\u522b\u7684\u5730\u65b9\u662f, \u4e3a\u4e86\u65b9\u4fbf\u89e3\u91ca, \u6587\u7ae0\u4e2d\u6709\u4e9b\u5730\u65b9\u4f7f\u7528\u4e86 \\(-\\) \u53f7\u800c\u4e0d\u662f \\(+\\) \u53f7, \u8fd9\u662f\u56e0\u4e3a\u5728\u7fa4\u4e0a\u505a\u51cf\u6cd5\u8fd0\u7b97\u4f1a\u8f6c\u5316\u6210\u52a0\u6cd5\u8fd0\u7b97, \u6bd4\u5982\u5bf9\u4e8e \\(modulus = 5\\) \u7684\u7fa4, \\(\\beta=-2\\%5 = 3\\), \u6240\u4ee5  \\((x - 2)\\%5 = x + 3\\), \u6211\u4eec\u968f\u65f6\u53ef\u4ee5\u5c06\u51cf\u6cd5\u8f6c\u5316\u4e3a\u52a0\u6cd5\u8868\u793a, \u56e0\u6b64\u5728\u7b26\u53f7\u8868\u793a\u4e0a, \u5728\u6709\u4e9b\u573a\u666f\u4e0b\u4e0d\u505a\u533a\u5206.</p> <p>\u540c\u6837\u7684\u65b9\u6cd5\u6784\u9020 \\(B(x)\\):</p> <ol> <li>verifier \u53d1\u9001\u968f\u673a\u6570 \\(\\beta\\), \u4ee4 \\(x = \\beta\\)</li> <li>\u9009\u62e9\u5927\u5c0f\u4e3a \\(|\\vec f|\\) \u7684\u4e58\u6cd5\u5b50\u7fa4 \\(H_f = \\{\\omega_j\\}\\), \\(j \\in |\\vec f|\\)</li> <li>\\(B(\\omega_j) = b_j = 1 / (f_j - \\beta)\\). \\(\\{x_j, y_j\\}\\) \u503c\u5bf9\u4e3a \\(\\{\\omega_j, b_j\\}\\)</li> <li>\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u63d2\u503c\u6cd5\u5f97\u5230\u591a\u9879\u5f0f \\(B(x)\\)</li> </ol> <p>\u68c0\u67e5 \\(B(x)\\) \u88ab\u6b63\u786e\u6784\u9020:</p> <ol> <li>\u5bf9 \\(\\vec f\\) \u5728\u4e58\u6cd5\u5b50\u7fa4\u4e0a\u8fdb\u884c\u63d2\u503c\u5f97\u5230\u591a\u9879\u5f0f \\(F(x)\\)</li> <li>\u5728\u4e58\u6cd5\u5b50\u7fa4 \\(H_f\\) \u4e0a, \u591a\u9879\u5f0f\u6ee1\u8db3 \\(B(x) = 1/(F(x) - \\beta)\\)</li> <li>\u53d8\u6362\u4e3a \\(B(x)(F(x) - \\beta) - 1 = 0\\)</li> <li>\u7531\u591a\u9879\u5f0f\u4f59\u5f0f\u5b9a\u7406\u5f97\u5230 \\(B(x)(F(x) - \\beta) - 1 = Q_B(x) * Z_B(x)\\). \u8fd9\u4e2a\u7b49\u5f0f\u5bf9 \\(x\\) \u4e3a\u7fa4\u4e0a\u7684\u4efb\u610f\u503c\u90fd\u6210\u7acb. \u5176\u4e2d \\(Q_B(x)\\) \u4e3a\u5546\u591a\u9879\u5f0f, \\(Z_B(x) = \\prod_j(x - \\omega_j)\\) \u4e3a\u6d88\u5931\u591a\u9879\u5f0f</li> <li>prover \u53d1\u9001<ol> <li>\\(B(x)\\) \u7684\u627f\u8bfa \\([B(x)]_1\\)</li> <li>\\(Q_B(x)\\) \u7684\u627f\u8bfa \\([Q_B(x)]_1\\)</li> <li>\\(F(x)\\) \u7684\u627f\u8bfa \\([F(x)]_1\\)</li> </ol> </li> <li>verifier \u81ea\u884c\u8ba1\u7b97 \\(Z_B(x)\\) \u7684\u627f\u8bfa \\([Z_B(x)]_2\\), \u7136\u540e\u901a\u8fc7\u692d\u5706\u66f2\u7ebf\u7684 pairing \u8fdb\u884c\u9a8c\u8bc1: \\(e([F(x)]_2, [B(x)]_1) = e([1]_2, [B(x)]_1 * \\beta + [1]_1) * e([Z_B(x)]_2, [Q_B(x)]_1)\\)</li> </ol> <p>\u6ce8\u610f: paper \u4e2d\u7684\u9a8c\u8bc1\u5bf9\u8ba1\u7b97\u8fc7\u7a0b\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u4f18\u5316, \u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf, \u6ca1\u6709\u4f7f\u7528\u548c paper \u4e2d\u4e00\u6837\u7684\u9a8c\u8bc1\u65b9\u5f0f, \u4e0d\u8fc7\u6838\u5fc3\u539f\u7406\u662f\u4e00\u6837\u7684, \u90fd\u662f\u901a\u8fc7 pairing \u8fdb\u884c KZG \u9a8c\u8bc1.</p> <p>\\(B(x)\\) \u8fd8\u9700\u8981\u505a\u66f4\u8fdb\u4e00\u6b65\u7684\u68c0\u67e5, \u68c0\u67e5\u591a\u9879\u5f0f\u7684\u9636\u6570\u662f\u6b63\u786e\u7684, \u5177\u4f53\u65b9\u5f0f\u662f:</p> <ul> <li>\u53e6 \\(N = |\\vec t|, n = |\\vec f|\\)</li> <li>prover \u53d1\u9001<ul> <li>\\(B(x)\\) \u7684\u627f\u8bfa \\(b = [B(x)]_1\\)</li> <li>\\(X^{N\u22121\u2212(n\u22121)}\\) \u7684\u627f\u8bfa \\(r = [X^{N\u22121\u2212(n\u22121)}]_2\\)</li> <li>\\(P(x)\\) \u7684\u627f\u8bfa \\(p = [P(x)]_2\\), \\(P(X) := B(X) * X^{N\u22121\u2212(n\u22121)}\\)</li> </ul> </li> <li>verifier \u9a8c\u8bc1: \\(e(b, r) = e(p, [1]_2)\\)</li> </ul> <p>\u8bba\u6587\u5728\u8fd9\u91cc\u8fdb\u884c\u4e86\u4e00\u5b9a\u7684\u4f18\u5316, \u4f7f\u7528\u7684\u662f \\(B_0(x)\\) \u800c\u4e0d\u662f \\(B(x)\\), \u4e0d\u8fc7\u76ee\u6807\u662f\u4e00\u6837\u7684, \u90fd\u662f\u4e3a\u4e86\u505a\u9879\u5f0f\u7684\u9636\u6570\u68c0\u67e5.</p>"},{"location":"2024-01-23/cq/#sumcheck","title":"Sumcheck","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u9a8c\u8bc1 sum \u6210\u7acb: \\(\\sum_i a_i = \\sum_j b_j\\) </p> <p>\u524d\u9762\u8bc1\u660e\u4e86\u5de6\u53f3\u4e24\u8fb9\u6bcf\u4e00\u9879\u90fd\u662f\u6b63\u786e\u7684, \u90a3\u4e0b\u9762\u9700\u8981\u8bc1\u660e\u5de6\u53f3\u4e24\u8fb9\u7684\u52a0\u548c\u662f\u6b63\u786e\u7684, \u4e5f\u5c31\u662f\u9700\u8981\u5f7c\u6b64\u76f8\u7b49. \u8bc1\u660e\u7684\u65b9\u6cd5\u662f sumcheck. \u53ef\u4ee5\u5229\u7528\u8fd9\u6837\u4e00\u4e2a\u5f15\u7406\u6765\u8bc1\u660e:</p> \\[ \\sum_{a \\in H} f(a) = t \\cdot f(0) \\] <p>\u5176\u4e2d:</p> <ul> <li>\\(H\\) \u4e3a\u4e58\u6cd5\u5b50\u7fa4: \\(H=\\{1, \\omega, \\omega^2, ..., \\omega^{t-2}, \\omega^{t-1} \\}\\),  \\(t\\) \u662f \\(H\\) \u4e2d\u5143\u7d20\u7684\u4e2a\u6570, \\(t=|H|\\), \\(\\omega\\) \u662f\u5355\u4f4d\u6839 </li> <li>\\(f(x)\\) \u4e3a\u4e00\u4e2a\u591a\u9879\u5f0f, \\(f(x) = f_0 + f_1x + f_2x^2 + ... + f_{t-2}x^{t-2} + f_{t-1}x^{t-1}\\)</li> </ul> <p>\u8ba9\u6211\u4eec\u6765\u5206\u89e3\u4e00\u4e0b\u8ba1\u7b97\u8fc7\u7a0b, \u5c06 \\(a\\) \u53d6 \\(H\\) \u4e2d\u7684\u503c\u5e26\u5165 \\(f(x)\\) \u53ef\u5f97:</p> \\[ \\begin{align*} &amp; \\sum_{a \\in H} f(a) = f(1) + f(\\omega) + f(\\omega^2) + ... + + f(\\omega^t-1) \\\\ &amp; \\\\ &amp; \\\\ &amp; = f_0 + f_1 + f_2 + ... + f_{t-2} + f_{t-1} \\\\ &amp; + f_0 + f_1\\omega + f_2\\omega^2 + ... + f_{t-2}\\omega^{t-2} + f_{t-1}\\omega^{t-1} \\\\ &amp; + f_0 + f_1(\\omega^2) + f_2(\\omega^2)^2 + ... + f_{t-2}(\\omega^2)^{t-2} + f_{t-1}(\\omega^2)^{t-1} \\\\ &amp; . \\\\ &amp; . \\\\ &amp; . \\\\ &amp; + f_0 + f_1(\\omega^{t-2}) + f_2(\\omega^{t-2})^2 + ... + f_{t-2}(\\omega^{t-2})^{t-2} + f_{t-1}(\\omega^{t-2})^{t-1} \\\\ &amp; + f_0 + f_1(\\omega^{t-1}) + f_2(\\omega^{t-1})^2 + ... + f_{t-2}(\\omega^{t-1})^{t-2} + f_{t-1}(\\omega^{t-1})^{t-1} \\\\ &amp; \\\\ &amp; \\\\ &amp; = t \\cdot f_0 + f_1\\sum_{i \\in t}(\\omega)^i + f_2\\sum_{i \\in t}(\\omega^2)^i + ... + f_{t-2}\\sum_{i \\in t}(\\omega^{t-2})^i + f_{t-1}\\sum_{i \\in t}(\\omega^{t-1})^i \\\\ \\end{align*} \\] <p>\u4e0a\u9762\u516c\u5f0f\u4e2d, \u9664\u4e86\u7b2c\u4e00\u9879, \u540e\u9762\u7684 \\(t-1\\) \u9879\u6bcf\u4e2a \\(sum\\) \u90fd\u4e3a 0. \u8fd9\u662f\u56e0\u4e3a, \u6bcf\u4e2a \\(\\omega^i\\) \u90fd\u662f\u6709\u9650\u57df\u4e0a\u4e58\u6cd5\u5b50\u7fa4\u4e2d\u7684\u5143\u7d20, \u800c\u4e58\u6cd5\u5b50\u7fa4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u4e58\u6cd5\u5b50\u7fa4\u7684\u751f\u6210\u5143, \u4e5f\u5c31\u8bf4\u660e\u540e\u9762\u7684 \\(t-1\\) \u9879\u7684\u6bcf\u4e2a \\(sum\\) \u90fd\u662f\u4e58\u6cd5\u5b50\u7fa4\u4e2d\u6240\u6709\u5143\u7d20\u7684 \\(sum\\). </p> <p>\u6709\u9650\u57df\u4e0a\u7684\u4e58\u6cd5\u5b50\u7fa4\u4e0e\u590d\u6570\u57df\u4e0a\u7684\u5355\u4f4d\u5706\u7ed3\u6784\u7c7b\u4f3c. \u5728\u5355\u4f4d\u5706\u4e0a:</p> <ul> <li>\u6240\u6709\u5143\u7d20\u90fd\u7531\u5355\u4f4d\u5143\u751f\u6210\u5e76\u5747\u5300\u5206\u5e03\u5728\u5355\u4f4d\u5706\u4e0a</li> <li>\u6bcf\u4e2a\u5143\u7d20\u57fa\u4e8e\u539f\u70b9\u90fd\u6709\u53e6\u5916\u4e00\u4e2a\u5bf9\u79f0\u7684\u70b9, \u8fd9\u4e24\u70b9\u590d\u5e73\u9762\u4e0a\u7684\u77e2\u91cf\u548c\u62b5\u6d88, \u52a0\u548c\u7b49\u4e8e 0 </li> </ul> <p>\u56e0\u6b64\u6240\u6709\u5355\u4f4d\u5706\u7684\u5143\u7d20 \\(sum\\) \u7b49\u4e8e 0.</p> <p>\u56e0\u4e3a\u8981\u4f7f\u7528FFT(Fast Fourier Transform)\u505a\u591a\u9879\u5f0f\u7684\u63d2\u503c, \u6240\u4ee5\u8981\u6c42\u4e58\u6cd5\u5b50\u7fa4\u7684\u5143\u7d20\u4e2a\u6570\u662f 2 \u7684\u5e42\u6b21\u4e2a. \u5728\u4e58\u6cd5\u5b50\u7fa4\u4e2d, \u6bcf\u4e2a\u5143\u7d20\u4e5f\u6709\u5bf9\u79f0\u7684\u70b9, \u5bf9\u4e8e\u62e5\u6709 \\(t\\) \u4e2a\u5143\u7d20\u7684\u4e58\u6cd5\u5b50\u7fa4 \\(H\\): \\(H_i + H_{i+t/2} = 0\\), \u8fd9\u4e24\u4e2a\u5bf9\u79f0\u7684\u70b9\u76f8\u52a0\u7b49\u4e8e 0, \u6240\u4ee5\u4e58\u6cd5\u5b50\u7fa4\u6240\u6709\u5143\u7d20\u7684 \\(sum\\) \u4e5f\u7b49\u4e8e 0. \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u540e\u9762\u7684 \\(t-1\\) \u9879\u6bcf\u4e2a \\(sum\\) \u90fd\u4e3a 0:</p> \\[ \\begin{align*} &amp; \\sum_{i \\in t}(\\omega)^i = 0\\\\ &amp; \\sum_{i \\in t}(\\omega^2)^i = 0 \\\\ &amp; . \\\\ &amp; . \\\\ &amp; . \\\\ &amp; \\sum_{i \\in t}(\\omega^{t-2})^i = 0 \\\\ &amp; \\sum_{i \\in t}(\\omega^{t-1})^i = 0 \\\\ \\end{align*} \\] <p>\u6240\u4ee5:</p> \\[ \\begin{align*} &amp; \\sum_{a \\in H} f(a) \\\\ &amp; = t \\cdot f_0 + f_1\\sum_{i \\in t}(\\omega)^i + f_2\\sum_{i \\in t}(\\omega^2)^i + ... + f_{t-2}\\sum_{i \\in t}(\\omega^{t-2})^i + f_{t-1}\\sum_{i \\in t}(\\omega^{t-1})^i \\\\ &amp; = t \\cdot f_0 + f_1 \\cdot 0 + f_2 \\cdot 0 + ... + f_{t-2} \\cdot 0 + f_{t-1} \\cdot 0 \\\\ &amp; = t \\cdot f_0 \\end{align*} \\] <p>\u6240\u4ee5:</p> <p>\\(\\sum_{x \\in H_t} A(x) = |\\vec t| \\cdot A(0)\\)</p> <p>\\(\\sum_{x \\in H_f} B(x) = |\\vec f| \\cdot B(0)\\)</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u9a8c\u8bc1\u4e0b\u9762\u7684\u5173\u7cfb\u662f\u5426\u6210\u7acb: </p> <p>\\(|\\vec t| \\cdot A(0) \\stackrel{?}{=} |\\vec f| \\cdot B(0)\\)</p> <p>\u6700\u7ec8, \u6211\u4eec\u901a\u8fc7\u8fd9\u4e09\u4e2a\u8bc1\u660e\u5c31\u5b8c\u6210\u4e86 CQ \u8981\u8bc1\u660e\u7684 lookup.</p>"},{"location":"2024-01-23/cq/#_2","title":"\u81f4\u8c22","text":"<ul> <li>Guo Yu</li> <li>Yu-Ming Hsu</li> <li>Jing-Jie Wang</li> <li>Paul Yu</li> <li>Even</li> <li>\u963f\u54aa\u54aa\u5c0f\u718a</li> </ul>"},{"location":"2024-01-23/cq/#_3","title":"\u53c2\u8003","text":"<ul> <li>cq: Cached quotients for fast lookups</li> <li>A Close Look at a Lookup Argument - Mary Maller</li> <li>\u7406\u89e3 PLONK\uff08\u4e03\uff09\uff1aLookup Gate</li> </ul>"},{"location":"2024-05-16/jolt-notes/","title":"Notes about Jolt","text":"<p>Source is: https://www.youtube.com/watch?v=DcLQ3daqnqQ</p> <p>Notes:</p> <ul> <li>jolt's new staff: replace execution with lookup(with lasso)</li> <li>cpu tasks: <ul> <li>fetch, decode and execute instructions</li> <li>read/write RAM</li> </ul> </li> <li>riscv cpu<ul> <li>has 32 registers, register is not so efficient in zkvm, so no not need to differentiate it with RAM</li> </ul> </li> <li>fetch: jolt handle RAM with offline memory checking techniques(with sumcheck)</li> <li>decode: with R1CS. <ul> <li>per step of cpu<ul> <li>about 40 constraints</li> <li>about 80 witness elements committed </li> </ul> </li> <li>if you fetch program counter from RAM, you have to decompose it into different fields, so we need to make sure the decomposition is right</li> </ul> </li> <li>main differences from pre-existing zkvm:<ul> <li>use sumcheck everywhere, to minimize the amount of data committed by prover</li> <li>everything is offline memory checking other than the R1CS</li> </ul> </li> </ul>"},{"location":"2024-05-28/bit-commitment/","title":"How bit commitment works","text":""},{"location":"2024-05-28/bit-commitment/#bit-commitment-and-signature","title":"Bit commitment and signature","text":"<p>Often signature is created with this pseudo code: <pre><code>mhash = hash(message)\nprivate_key = some_random_number\npublic_key = create_public_key(private_key) // such as hash\nsignature = create_signature(mhash, private_key)\nassert true == verify_signature(message, signature, public_key)\n</code></pre> Means this signature commit to this message.</p> <p>If message == 0 or 1, we would say this signature is a bit(0/1) commitment.</p>"},{"location":"2024-05-28/bit-commitment/#bit-commitment-with-lamport-signature","title":"Bit commitment with Lamport signature","text":"<p>Lamport signature is a signature scheme that can be used to do bit commitment. Let's see how it works.</p>"},{"location":"2024-05-28/bit-commitment/#private-key-and-public-key","title":"Private key and Public key","text":"<p>Private key and public key in Lamport signature consist of a pair of array.</p> <p>Private key elements(\\(s_i^0\\), \\(s_i^1\\)) and public key elements(hash(\\(s_i^0\\)), hash(\\(s_i^1\\))) are integer.</p> 0th element 1st element 2nd element 3rd element ... private key 0 \\(s_0^0\\) \\(s_1^0\\) \\(s_2^0\\) \\(s_3^0\\) ... private key 1 \\(s_0^1\\) \\(s_1^1\\) \\(s_2^1\\) \\(s_3^1\\) ... public key 0 hash(\\(s_0^0\\)) hash(\\(s_1^0\\)) hash(\\(s_2^0\\)) hash(\\(s_3^0\\)) ... public key 1 hash(\\(s_0^1\\)) hash(\\(s_1^1\\)) hash(\\(s_2^1\\)) hash(\\(s_3^1\\)) ... <p>For example: <pre><code>private key 0: ['0001', '1001', '0001', '1100', ...] // length == 160\n\nprivate key 1: ['1100', '1111', '1100', '1011', ...]\n\npublic key 0: [hash('0001'), hash('1001'), hash('0001'), hash('1100'), ...]\n\npublic key 1: [hash('1100'), hash('1111'), hash('1100'), hash('1011'), ...]\n</code></pre></p> <p>Let's make them as a table:</p> 0th element 1st element 2nd element 3rd element ... private key 0 0001 1001 0001 1100 ... private key 1 1100 1111 1100 1011 ... public key 0 hash(0001) hash(1001) hash(0001) hash(1100) ... public key 1 hash(1100) hash(1111) hash(1100) hash(1011) ..."},{"location":"2024-05-28/bit-commitment/#signature","title":"Signature","text":"<p>The logic to create the signature is as follows: <pre><code>mhash = hash(message) = $[m_0, m_1, m_2, m3...]$\nsig = []\nsig[0] = $m_0$ == 0 ? $s_0^0$ : $s_0^1$\nsig[1] = $m_1$ == 0 ? $s_1^0$ : $s_1^1$\nsig[2] = $m_2$ == 0 ? $s_2^0$ : $s_2^1$\nsig[3] = $m_3$ == 0 ? $s_3^0$ : $s_3^1$\n...\n</code></pre></p> <p>For example, a message and its hash: <pre><code>message: Hello world\n\nmhash = 1111010111101001010101100110100011011010110111110110111111011110111110000101001000011111011111100001101010101000101001011110011001010000110010011111100001001001 // hash(\"Hello world\")\n</code></pre></p> <p>From lowest bit to highest bit: <pre><code>mhash[0] = 1\nmhash[1] = 0\nmhash[2] = 0\nmhash[3] = 1\n.\n.\n.\nmhash[158] = 1\nmhash[159] = 1\n</code></pre></p> <p>The signature for the first 4 bits are: <pre><code>signature: ['1100', '1001', '0001', '1011', ...]\n</code></pre></p> <p>Bit commitment that done in bitcoin is accomplished with Lamport signature.</p>"},{"location":"2024-05-28/bit-commitment/#verify","title":"Verify","text":"<p>Hash each element in signature and compare them with public key.</p>"},{"location":"2024-05-28/bit-commitment/#bit-commitment-in-bitcoin","title":"Bit commitment in Bitcoin","text":"<p>Let's commit the first/lowest bit of mhash, which is <code>0</code>(<code>m[0]</code>)</p> <p>Use Lamport signature to create bit commitment for the 1st bit, we need to put the corresponding public keys for 1st bit onto the stack.</p> <pre><code>OP_HASH160\nOP_DUP\n\nhash(1100) // hash1(the 0th element from public key 1)\nOP_EQUAL\nOP_DUP\n\nOP_ROT\nhash(0001) // hash0(the 0th element from public key 0)\nOP_EQUAL\n\nOP_BOOLOR\nOP_VERIFY\n</code></pre> <p>See how this script works.</p> <p>The initial state of stack and script is:</p> Stack Script OP_HASH160OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY"},{"location":"2024-05-28/bit-commitment/#if-1100-is-pushed-to-the-stack","title":"If 1100 is pushed to the stack","text":"Stack Script 1100 OP_HASH160OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>1100 OP_HASH160</code></p> <p>After execution:</p> Stack Script hash(1100) OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>hash(1100) OP_DUP</code></p> <p>After execution:</p> Stack Script hash(1100)hash(1100) hash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>hash(1100) hash(1100) hash(1100)</code></p> <p>After execution:</p> Stack Script hash(1100)hash(1100)hash(1100) OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>hash(1100) hash(1100) OP_EQUAL</code></p> <p>After execution:</p> Stack Script Truehash(1100) OP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>True OP_DUP</code></p> <p>After execution:</p> Stack Script TrueTruehash(1100) OP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>True True hash(1100) OP_ROT</code></p> <p>After execution:</p> Stack Script hash(1100)TrueTrue hash(0001)OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>hash(1100) True True hash(0001)</code></p> <p>After execution:</p> Stack Script hash(0001)hash(1100)TrueTrue OP_EQUALOP_BOOLOROP_VERIFY <p>Execution: <code>hash(0001) hash(1100) OP_EQUAL</code></p> <p>After execution:</p> Stack Script FalseTrueTrue OP_BOOLOROP_VERIFY <p>Execution: <code>False True OP_BOOLOR</code></p> <p>After execution:</p> Stack Script TrueTrue OP_VERIFY <p>Execution: <code>True OP_VERIFY</code></p> <p>After execution:</p> Stack Script True <p><code>True</code> is left in the stack, since the value of False is <code>1</code>, so we can say that <code>1100</code> is the bit commitment of <code>1</code>.</p>"},{"location":"2024-05-28/bit-commitment/#if-0001-is-pushed-to-the-stack","title":"If 0001 is pushed to the stack","text":"<p>Since the execution process is similar, we will just put the post-execution state below.</p> Stack Script 0001 OP_HASH160OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(0001) OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(0001)hash(0001) hash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(1100)hash(0001)hash(0001) OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script False/0hash(0001) OP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script FalseFalsehash(0001) OP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(0001)FalseFalse hash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(0001)hash(0001)FalseFalse OP_EQUALOP_BOOLOROP_VERIFY Stack Script TrueFalseFalse OP_BOOLOROP_VERIFY Stack Script TrueFalse OP_VERIFY Stack Script False <p><code>False</code> is left in the stack, since the value of False is <code>0</code>, so we can say that <code>0001</code> is the bit commitment of <code>0</code>.</p>"},{"location":"2024-05-28/bit-commitment/#if-1111-is-pushed-to-the-stack","title":"If 1111 is pushed to the stack","text":"<p>Since the execution process is similar, we will just put the post-execution state below.</p> Stack Script 1111 OP_HASH160OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(1111) OP_DUPhash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(1111)hash(1111) hash(1100)OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(1100)hash(1111)hash(1111) OP_EQUALOP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script False/0hash(1111) OP_DUPOP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script FalseFalsehash(1111) OP_ROThash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(1111)FalseFalse hash(0001)OP_EQUALOP_BOOLOROP_VERIFY Stack Script hash(0001)hash(1111)FalseFalse OP_EQUALOP_BOOLOROP_VERIFY Stack Script FalseFalseFalse OP_BOOLOROP_VERIFY Stack Script FalseFalse OP_VERIFY Will revert and terminate due to OP_VERIFY fail to verify. ## Reference - https://www.youtube.com/live/VIg7BjX_lJw?si=djNaeeufQ6Pq0oIl - https://github.com/SGeetansh/Lamport_Signatures - https://docs.rs/lamport_signatures/latest/src/lamport_signatures - https://github.com/AtropineTears/Lamport-rs/tree/master - https://www.cs.umd.edu/~jkatz/crypto/f02/lectures/lecture36.pdf - https://en.bitcoin.it/wiki/Script - https://bitcoinmagazine.com/technical/script-state-from-lamport-signatures-"},{"location":"2024-05-29/bitvm/","title":"BitVM \u4ecb\u7ecd","text":"<p>\u8fd9\u7bc7\u7b14\u8bb0\u57fa\u4e8e Robin Linus \u5728 ZKProof \u4f1a\u8bae\u4e0a\u7684\u5206\u4eab, \u89c6\u9891\u94fe\u63a5: https://www.youtube.com/live/VIg7BjX_lJw?si=djNaeeufQ6Pq0oIl</p> <p>\u7531\u4e8e\u6211\u4e5f\u5728\u5b66\u4e60, \u4e3a\u65b9\u4fbf\u66f4\u597d\u7684\u7406\u89e3, \u7ed3\u5408\u89c6\u9891\u6211\u52a0\u4e86\u4e00\u4e9b\u6211\u7406\u89e3\u7684\u5185\u5bb9, \u8fd9\u90e8\u5206\u5185\u5bb9\u5728\u7b14\u8bb0\u4e2d\u6211\u4e0d\u505a\u7279\u522b\u8bf4\u660e, \u5982\u679c\u53d1\u73b0\u9519\u8bef, \u90a3\u80af\u5b9a\u662f\u6211\u7684\u9519\u8bef, \u611f\u8c22\u5411\u6211\u6307\u51fa.</p> <p></p> <p>\u8fd9\u4e2a\u5206\u4eab\u7684\u4e3b\u9898\u662f BitVM, \u8ba9 Bitcoin \u62e5\u6709\u66f4\u52a0 smarter \u7684 contracts.</p> <p>Motivation: \u5e0c\u671b\u6bd4\u7279\u5e01\u53ef\u4ee5\u88ab\u6570\u5341\u4ebf\u7684\u4eba\u4f7f\u7528, \u4f46\u76ee\u524d\u8fd8\u6ca1\u6709\u5b9e\u73b0, BitVM \u5e0c\u671b\u5728\u8fd9\u91cc\u6709\u6240\u5e2e\u52a9.</p> <p>\u672a\u6765\u4eba\u4eec\u53ef\u80fd\u4e0d\u4f1a\u627f\u62c5\u5f97\u8d77\u4e3b\u7f51\u7684\u4ea4\u6613\u8d39, \u6240\u4ee5\u53ef\u80fd\u4f1a\u589e\u52a0\u533a\u5757\u5927\u5c0f\u4ee5\u5bb9\u7eb3\u66f4\u591a\u7684\u4ea4\u6613\u4ece\u800c\u53ef\u4ee5\u51cf\u5c11\u624b\u7eed\u8d39, \u4f46\u662f\u589e\u52a0\u533a\u5757\u5927\u5c0f\u4f1a\u635f\u5bb3\u53bb\u4e2d\u5fc3\u5316\u7684\u7a0b\u5ea6, \u56e0\u4e3a\u8282\u70b9\u7684\u5b58\u50a8\u4f1a\u589e\u52a0, \u9a8c\u8bc1\u533a\u5757\u7684\u8fd0\u7b97\u4e5f\u4f1a\u589e\u52a0, \u8ba9\u4e00\u4e9b\u914d\u7f6e\u4f4e\u7684\u673a\u5668\u96be\u4ee5\u8fd0\u884c\u8282\u70b9, \u6240\u4ee5\u533a\u5757\u5927\u5c0f\u4e5f\u4e0d\u4f1a\u589e\u52a0\u592a\u591a(\u6bd4\u5982\u4e0d\u4f1a\u589e\u52a0\u5230 GB \u7ea7\u522b).</p> <p></p> <p>\u6240\u4ee5\u957f\u671f\u6765\u770b, \u7528\u6237\u8fd8\u662f\u8d1f\u62c5\u4e0d\u4e86\u4e3b\u7f51\u7684\u8d39\u7528, \u8fd9\u5c31\u8ba9\u4e00\u4e9b sidechain, zk-rollup, zkCoins \u7b49\u4e8c\u5c42\u65b9\u6848\u53d8\u5f97\u6709\u7528\u4e86. \u53e6\u5916\u5728\u4e8c\u5c42\u4e0a, \u53ef\u4ee5\u5feb\u901f\u548c\u4fbf\u5b9c\u7684\u8bd5\u9a8c\u4e00\u4e9b\u521b\u65b0. \u5728\u8fd9\u4e2a\u7406\u60f3\u7684\u4e16\u754c\u4e2d, \u6211\u4eec\u5e0c\u671b\u6240\u6709\u7684\u4e8c\u5c42\u65b9\u6848\u90fd\u7528 Lightning \u4e92\u76f8\u8fde\u63a5. \u4f46\u662f\u95ee\u9898\u6765\u4e86, \u6211\u4eec\u5982\u4f55\u66f4\u597d\u7684\u6784\u5efa\u8fd9\u4e9b bridge \u5462? \u8fd9\u6d89\u53ca\u5230\u6211\u4eec\u5982\u4f55\u7528\u53bb\u4fe1\u4efb\u6216\u8005\u4fe1\u4efb\u6700\u5c0f\u5316\u7684\u65b9\u5f0f\u628a BTC \u8de8\u5230\u4e8c\u5c42\u4e0a, \u800c\u5f53\u524d\u8de8\u94fe\u7684\u65b9\u5f0f\u5229\u7528\u7684\u662f\u591a\u7b7e\u6258\u7ba1\u7528\u6237\u7684\u8d44\u91d1, \u663e\u7136\u8fd9\u5e76\u4e0d\u6ee1\u8db3\u53bb\u4fe1\u4efb\u7684\u8981\u6c42.</p> <p></p> <p>BitVM \u5b9e\u9645\u4e0a\u4e00\u4e2a\u57fa\u4e8e\u6bd4\u7279\u5e01\u7684 hack, \u6280\u672f\u6808\u5982\u4e0a\u56fe\u6240\u8ff0, \u53ef\u4ee5\u770b\u5230 BitVM \u5f15\u5165\u4e86\u5e26\u72b6\u6001\u7684\u811a\u672c(Stateful scripts), \u57fa\u4e8e\u8fd9\u4e9b\u811a\u672c\u6784\u5efa\u4e86 BitVM, \u57fa\u4e8e BitVM \u6784\u5efa\u4e86 Bridge. \u8fd9\u4e2a\u5206\u4eab\u4e5f\u662f\u56f4\u7ed5\u8fd9\u4e2a\u6280\u672f\u6808\u6765\u8bb2\u7684.</p>"},{"location":"2024-05-29/bitvm/#stateful-scripts","title":"Stateful scripts","text":"<p>BitVM \u80cc\u540e\u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u811a\u672c\u5f15\u5165\u72b6\u6001. \u6709\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd.</p>"},{"location":"2024-05-29/bitvm/#_1","title":"\u5229\u7528\u7b7e\u540d\u5b9e\u73b0\u72b6\u6001","text":"<p>\u6bd4\u7279\u5e01\u4e2d\u6ca1\u6709\u72b6\u6001\u7684\u6982\u5ff5, \u5373\u6ca1\u6cd5\u5728\u4e24\u4e2a\u4ea4\u6613/\u811a\u672c\u4e2d\u4fdd\u8bc1\u7528\u5230\u7684\u4e24\u4e2a\u503c\u662f\u76f8\u7b49\u7684. \u4e3e\u4f8b\u6765\u8bf4, \u5bf9\u4e8e  script1 \u548c script2, \u5b83\u4eec\u90fd\u7528\u5230\u4e86 x = 42 \u8fd9\u4e2a\u503c, \u4f46\u5728\u903b\u8f91\u4e0a\u65e0\u6cd5\u7ea6\u675f script1 \u548c script2 \u4e2d\u7528\u5230\u7684 x \u503c\u662f\u76f8\u7b49\u7684.</p> <p>\u56e0\u4e3a\u7b7e\u540d\u6709\u5bf9\u6d88\u606f\u627f\u8bfa\u7684\u7279\u6027, \u6240\u4ee5\u5982\u679c\u53ef\u4ee5\u7ed9 x = 42 \u8fdb\u884c\u7b7e\u540d, \u5219\u53ef\u4ee5\u5b9e\u73b0\u7b7e\u540d\u548c\u6d88\u606f\u7684\u7ed1\u5b9a, \u8fd9\u6837\u6301\u6709\u8fd9\u4e2a\u7b7e\u540d\u5c31\u610f\u5473\u7740\"\u643a\u5e26\"\u4e86\u7b7e\u540d\u6240\u627f\u8bfa\u7684\u6d88\u606f, \u5c31\u53ef\u4ee5\u5b9e\u73b0\u72b6\u6001\u7684\u529f\u80fd. \u6bd4\u5982 Alice \u7b7e\u540d x = 42, \u751f\u6210\u7b7e\u540d sig1, \u5219 Bob \u6216\u8005\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728 script2 \u4e2d\u4f7f\u7528 sig1, \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u72b6\u6001\u529f\u80fd.</p> <p>\u5982\u4f55\u7528\u6bd4\u7279\u5e01\u811a\u672c\u9a8c\u8bc1\u6808\u4e0a\u4efb\u610f\u503c\u7684\u7b7e\u540d?</p> <p>\u76ee\u524d\u4e3b\u7f51\u6ca1\u6709\u64cd\u4f5c\u7801\u652f\u6301. \u76ee\u524d\u53ea\u652f\u6301\u5bf9\u6574\u4e2a\u4ea4\u6613\u8fdb\u884c\u9a8c\u7b7e. \u793e\u533a\u63d0\u8bae\u7684 CSFS(Check Signature From Stack) \u64cd\u4f5c\u7801\u53ef\u4ee5\u505a\u5230\u5bf9\u6808\u4e0a\u7684\u4efb\u4f55\u503c\u9a8c\u7b7e, \u4f46\u4e3b\u7f51\u5c1a\u4e0d\u652f\u6301.</p> <p>\u8fd8\u6709\u5176\u5b83\u7684\u529e\u6cd5\u5417?</p> <p>\u6709. \u89e3\u51b3\u65b9\u6848\u662f\u5229\u7528 Lamport \u7b7e\u540d.</p> <p></p> <p>Lamport \u7b7e\u540d\u6982\u5ff5\u4e0a\u975e\u5e38\u7b80\u5355, \u4ec5\u5229\u7528\u4e86 hash \u51fd\u6570, \u53ef\u4ee5\u5229\u7528\u6bd4\u7279\u5e01\u811a\u672c\u5c06 Lamport \u7b7e\u540d\u5b9e\u73b0\u51fa\u6765. \u4e0d\u8fc7 Lamport \u7b7e\u540d\u7684\u7f3a\u70b9\u662f\u79d8\u94a5\u548c\u7b7e\u540d\u90fd\u5360\u4e86\u592a\u5927\u7684\u5c3a\u5bf8. \u4f46 Lamport \u7b7e\u540d\u4f9d\u7136\u975e\u5e38\u6709\u7528, \u53ef\u4ee5\u7528\u6765\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7b7e\u540d, \u6bd4\u5982 u8, u32 \u548c u160.</p> <p>\u4e0b\u9762\u770b\u770b\u5982\u4f55\u5229\u7528 Lamport \u7b7e\u540d\u9a8c\u8bc1 1-bit \u7684\u6d88\u606f. \u8be6\u7ec6\u539f\u7406\u53ef\u4ee5\u53c2\u8003\u6211\u7684Bit commitment \u7b14\u8bb0.</p> <p></p> <p>\u5229\u7528\u4e0a\u56fe\u4e2d\u7684\u6bd4\u7279\u5e01\u811a\u672c:</p> <ul> <li>\u5982\u679c\u63d0\u4f9b\u6570\u5b57 1 \u5bf9\u5e94\u7684\u7b7e\u540d(hash1 \u7684\u539f\u50cf)\u6765\u6267\u884c\u811a\u672c, \u5219\u7b7e\u540d\u4f1a\u9a8c\u8bc1\u901a\u8fc7, \u6808\u4e0a\u4f1a\u7559\u4e0b 1 \u8fd9\u4e2a\u503c.</li> <li>\u5982\u679c\u63d0\u4f9b\u6570\u5b57 0 \u5bf9\u5e94\u7684\u7b7e\u540d(hash0 \u7684\u539f\u50cf)\u6765\u6267\u884c\u811a\u672c, \u5219\u7b7e\u540d\u4f1a\u9a8c\u8bc1\u901a\u8fc7, \u6808\u4e0a\u4f1a\u7559\u4e0b 0 \u8fd9\u4e2a\u503c.</li> <li>\u5982\u679c\u63d0\u4f9b\u5176\u5b83\u503c\u6765\u6267\u884c\u811a\u672c, \u5219\u811a\u672c\u9a8c\u8bc1\u5931\u8d25</li> </ul> <p>\u56e0\u4e3a\u8fd9\u4e2a\u811a\u672c\u4e2d\u5305\u542b hash1 \u548c hash0 \u7684\u5404 20 \u5b57\u8282, \u518d\u52a0\u4e0a\u539f\u50cf\u7684 20 \u5b57\u8282, \u56e0\u6b64\u6bcf\u4e2a bit \u7684 commitment \u9700\u8981\u5bf9\u5e94 60 \u4e2a\u5b57\u8282\u7684\u6570\u636e, \u8fd9\u4e2a\u5c3a\u5bf8\u6bd4\u8f83\u5927. \u5229\u7528 Winternitz \u7b7e\u540d\u53ef\u4ee5\u628a\u5c3a\u5bf8\u964d\u4f4e\u5230 25 \u5b57\u8282, \u4f46\u662f\u5c3a\u5bf8\u4f9d\u7136\u5f88\u5927.</p>"},{"location":"2024-05-29/bitvm/#connector-outputs","title":"\u5229\u7528 Connector Outputs \u5b9e\u73b0\u72b6\u6001","text":"<p>\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u72b6\u6001\u529f\u80fd\u7684\u65b9\u6cd5, \u53eb\u505a Connector Outputs.</p> <p>\u57fa\u672c\u601d\u60f3\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u9610\u8ff0. Alice \u63d0\u524d\u7b7e\u597d\u4e86\u4e00\u7b14\u4ea4\u6613, \u627f\u8bfa\u5982\u679c Conditional Tx \u53ef\u4ee5\u5c06 Condition Tx \u4e2d\u7684  <code>Connector</code> output \u4f5c\u4e3a\u8f93\u5165, \u5219 Bob \u53ef\u4ee5\u6536\u5230 Alice \u7684 10 BTC.</p> <p></p> <p>Connector Output \u5728\u4e0a\u56fe\u7684\u4f8b\u5b50\u4e2d\u6307\u7684\u662f\u56fe\u4e2d\u4e0b\u90e8\u5206\u84dd\u8272\u7ebf\u6307\u793a\u7684 <code>Connector</code>, \u8fd9\u4e2a <code>Connector</code> \u662f\u4e0a\u9762\u4e24\u7b14\u4ea4\u6613\u7684\u8fde\u63a5\u5668, \u56e0\u4e3a\u53ea\u6709\u5c06 <code>Connector</code> \u4f5c\u4e3a input \u8f93\u5165\u5230\u53f3\u4fa7\u7684 Conditional Tx \u4e2d, Bob \u624d\u80fd\u6536\u5230 Alice \u7684 10 BTC.</p> <p></p> <p>\u5728\u8fd9\u91cc\u5e26\u6709\u72b6\u6001\u529f\u80fd\u6307\u7684\u662f, \u5982\u679c\u6709\u53e6\u5916\u4e00\u7b14\u4ea4\u6613 Alternative Tx \u5148\u5c06 <code>Connector</code> \u4f5c\u4e3a input \u8f93\u5165\u5e76\u6210\u529f\u53d1\u9001\u4e86\u4ea4\u6613, \u5219 Bob \u518d\u4e5f\u4e0d\u80fd\u901a\u8fc7\u6267\u884c Conditional Tx \u6765\u6536\u5230 Alice \u7684 10 BTC \u4e86.</p>"},{"location":"2024-05-29/bitvm/#bitvm_1","title":"BitVM \u67b6\u6784","text":"<p>BitVM \u5229\u7528\u7684\u673a\u5236\u662f\u4e50\u89c2\u7684\u8ba1\u7b97(Optimistic computation), \u53ea\u6709\u53d1\u751f\u4e89\u8bae\u7684\u65f6\u5019\u624d\u6267\u884c\u6602\u8d35\u7684\u64cd\u4f5c, \u6b63\u5e38\u7684\u4ea4\u6613\u53ea\u662f\u4e00\u7b14\u666e\u901a\u7684\u4ea4\u6613. BitVM \u4e3b\u8981\u76ee\u7684\u4e0d\u4f1a\u505a\u5177\u4f53\u7684\u8ba1\u7b97, \u800c\u662f\u901a\u8fc7\u7b80\u6d01\u7684\u673a\u5236\u62d2\u7edd\u9519\u8bef\u7684\u4ea4\u6613, \u4fdd\u8bc1\u72b6\u6001\u7684\u6b63\u786e\u8f6c\u6362. \u8fd9\u4e00\u70b9\u548c ZKP(\u96f6\u77e5\u8bc6\u8bc1\u660e)\u7684\u673a\u5236\u5f88\u50cf, BitVM \u4e5f\u6b63\u5728\u6784\u5efa SNARK verifier \u7528\u6765\u9a8c\u8bc1\u901a\u7528\u7684\u8ba1\u7b97.</p>"},{"location":"2024-05-29/bitvm/#advanced-bitcoin-scripts","title":"Advanced Bitcoin Scripts","text":"<p>BitVM \u56e2\u961f\u4e5f\u5728\u6784\u5efa\u4e00\u79cd\u9ad8\u7ea7\u811a\u672c\u8bed\u8a00, \u53ef\u4ee5\u770b\u505a\u662f\u6bd4\u7279\u5e01\u811a\u672c\u8bed\u8a00\u7684\u5143\u8bed\u8a00(meta language), \u53ef\u4ee5\u76f8\u5bf9\u5bb9\u6613\u7684\u5b9e\u73b0\u66f4\u590d\u6742\u529f\u80fd\u7684\u6bd4\u7279\u5e01\u811a\u672c.</p> <p>\u6bd4\u5982\u53ef\u4ee5\u5c55\u5f00\u5faa\u73af\u548c\u6784\u5efa\u51fd\u6570, \u53ef\u4ee5\u7ec4\u5408\u4e0d\u540c\u7684 opcode. \u5229\u7528\u8fd9\u4e2a\u8bed\u8a00\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684 hash \u51fd\u6570. \u4e5f\u5b9e\u73b0\u4e86 Lamport \u7b7e\u540d\u548c Connector outputs. \u8fd8\u80fd\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u811a\u672c, \u6bd4\u5982\u590d\u6742\u7684 Taptree, \u4ee5\u53ca\u5927\u578b\u7684 TX graph.</p>"},{"location":"2024-05-29/bitvm/#bitvm-bridges","title":"BitVM Bridges","text":"<p>Bridge \u7684\u4f5c\u7528\u662f\u53ef\u4ee5\u628a BTC \u5e26\u5230\u522b\u7684\u7cfb\u7edf\u4e2d, \u867d\u7136\u76ee\u524d BitVM \u7684\u7cfb\u7edf\u6709\u4e9b\u7b28\u91cd, \u4f46\u5b83\u4ecd\u7136\u662f\u6709\u7528\u7684, \u53ef\u4ee5\u7ed9\u5927\u989d\u8d44\u91d1\u505a\u76f8\u5bf9\u5b89\u5168\u7684\u8de8\u94fe\u64cd\u4f5c, \u800c\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u7684\u5c0f\u989d swap \u800c\u8a00, \u53ef\u4ee5\u4f7f\u7528\u95ea\u7535\u7f51\u7edc(LN) \u6765\u5b8c\u6210. BitVM \u7684\u4e00\u4e2a\u4e3b\u8981\u9650\u5236\u662f Operator \u662f\u56fa\u5b9a\u7684\u4e00\u7ec4\u4eba, \u4e0d\u80fd\u968f\u65f6\u66ff\u6362, \u800c\u9a8c\u8bc1\u8005\u53ef\u4ee5\u662f\u4efb\u4f55\u4eba. \u8fd9\u6837\u5c31\u63d0\u4f9b\u4e86\u5f88\u5f3a\u7684\u5b89\u5168\u4fdd\u8bc1, \u56e0\u4e3a\u5c31\u7b97\u6240\u6709\u7684 Operator \u90fd\u4f5c\u6076, \u4e5f\u4e0d\u80fd\u62ff\u8d70\u7528\u6237\u7684\u94b1.</p> <p>Trusted Setup \u9636\u6bb5\u53ef\u4ee5\u6709\u6700\u591a 1000 \u4e2a Operator \u5bf9 TX graph \u8fdb\u884c\u7b7e\u540d, \u4e4b\u540e\u7b7e\u540d\u8005\u9700\u8981\u5220\u9664\u4e22\u5f03\u81ea\u5df1\u7b7e\u540d\u6240\u7528\u7684\u79c1\u94a5, \u53ea\u8981\u4fdd\u8bc1\u6709\u4e00\u4e2a Operator \u4e22\u5f03\u4e86\u81ea\u5df1\u7684\u79c1\u94a5, trusted setup \u5c31\u662f\u5b89\u5168\u7684(safe).</p> <p>\u603b\u8ba1\u6709 100 \u4e2a Operator, \u53ea\u9700\u8981\u6709\u4e00\u4e2a\u8bda\u5b9e\u7684 Operator \u6b63\u5e38\u884c\u4e8b, \u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7528\u6237\u7684 Peg out(\u51fa\u91d1)\u6b63\u5e38\u8fdb\u884c(live). \u5982\u679c\u4e00\u65b9\u672c\u8eab\u662f\u6d41\u52a8\u6027\u63d0\u4f9b\u65b9, \u90a3\u4ed6\u53ef\u4ee5\u53c2\u4e0e trusted setup ceremony, \u90a3\u8fd9\u4e2a bridge \u5bf9\u4e8e\u4ed6\u6765\u8bf4\u5c31\u662f trustless \u7684\u4e86.</p> <p></p> <p>\u4e0a\u56fe\u663e\u793a\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c\u7684 Bridge \u7684\u5de5\u4f5c\u6d41\u7a0b</p> <ul> <li>Peg in: Alice \u53d1\u9001 100 BTC \u5230\u591a\u7b7e\u5730\u5740, \u5728 sidechain \u751f\u6210 100 Wrapped BTC \u53d1\u9001\u5230 Bob \u5730\u5740</li> <li>Peg out: <ul> <li>Bob \u5728 sidechain burn 100 Wrapped BTC, \u5e0c\u671b\u5728\u6bd4\u7279\u5e01\u4e3b\u7f51\u6536\u5230 100 BTC</li> <li>Operator \u89c2\u5bdf\u5230 Bob \u7684 burn \u4ea4\u6613, Operator \u628a\u4ed6\u81ea\u5df1\u7684\u94b1\u7ed9 Bob</li> <li>Bob \u76f4\u63a5\u53d6\u8d70\u94b1</li> <li>Operator \u5e0c\u671b\u53d6\u8d70 100 BTC, \u5bf9\u5e94\u7684\u4ea4\u6613\u6709\u591a\u4e2a\u8f93\u5165:<ul> <li>\u7b2c\u4e00\u4e2a\u6765\u81ea\u4e8e Alice \u7684 Peg in \u4ea4\u6613</li> <li>\u7b2c\u4e8c\u4e2a\u6765\u81ea\u4e8e Kick off \u4ea4\u6613\u4e2d\u7684 delay output, \u8fbe\u6210\u7684\u6548\u679c\u662f\u76f4\u5230 Kick off \u4ea4\u6613\u63d0\u4ea4\u5230\u94fe\u4e0a\u7684 6 \u4e2a\u6708\u540e, Operator \u624d\u80fd\u7528\u6b64\u811a\u672c\u89e3\u9501\u62ff\u5230 100 BTC, \u76ee\u7684\u662f\u7559\u4e0b\u8db3\u591f\u7684\u65f6\u95f4, \u9632\u6b62\u4f5c\u6076\u7684\u53ef\u80fd</li> <li>\u7b2c\u4e09\u4e2a\u6765\u81ea\u4e8e Kick off \u4ea4\u6613\u4e2d\u7684 Connector output. \u8fd9\u4e2a Connector output \u4e5f\u662f\u88ab Operator \u7b7e\u540d\u8fc7\u7684, \u8fd9\u6837\u5982\u679c verifier \u53d1\u73b0\u95ee\u9898\u5c31\u53ef\u4ee5\u901a\u8fc7 Slash \u4ea4\u6613\u9500\u6bc1 Connector output, \u5bfc\u81f4 Peg out \u4ea4\u6613\u6ca1\u6cd5\u6267\u884c, Operator \u65e0\u6cd5\u53d6\u56de 100 BTC, \u8fbe\u5230\u60e9\u7f5a\u7684\u76ee\u7684</li> </ul> </li> </ul> </li> </ul> <p></p> <p>\u76ee\u524d BitVM \u4f7f\u7528\u7684\u662f\u57fa\u4e8e\u914d\u5bf9\u7684 SNARK, \u5177\u4f53\u7528\u7684\u662f fflonk. \u94fe\u4e0a verifier \u662f\u7528\u811a\u672c\u6765\u5b9e\u73b0\u7684, \u5c3a\u5bf8\u975e\u5e38\u5927, \u81f3\u5c11\u6709\u51e0 GB. \u7136\u800c\u4e00\u4e2a\u533a\u5757\u4e2d\u811a\u672c\u6700\u5927\u53ea\u80fd\u4e3a 4 MB, \u6ca1\u6cd5\u4e00\u6b21\u6027\u6267\u884c\u6574\u4e2a verifier \u7a0b\u5e8f, \u9a8c\u8bc1\u67d0\u4e2a\u8ba1\u7b97\u662f\u5426\u6b63\u786e. \u6240\u4ee5 BitVM2 \u91c7\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u8ba1\u7b97\u62c6\u5206\u6210\u591a\u4e2a\u5c0f\u7684\u8ba1\u7b97, \u628a\u4e0a\u4e00\u6b65\u5f97\u5230\u7684\u7ed3\u679c\u4f5c\u4e3a\u4e0b\u4e00\u6b65\u7684\u53c2\u6570\u7ee7\u7eed\u6267\u884c, \u8fd9\u6837\u6267\u884c\u5230\u6700\u540e\u53ef\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u6700\u7ec8\u7ed3\u679c. \u8fd9\u6837\u5c31\u9700\u8981 commit \u591a\u4e2a\u4e2d\u95f4\u7ed3\u679c, \u6bd4\u5982 1000 \u4e2a. \u5047\u8bbe\u6211\u4eec\u60f3\u8ba1\u7b97 \\(f(x) = y\\), \u4f46\u662f \\(f\\) \u51fd\u6570\u592a\u5927\u6ca1\u6cd5\u6ca1\u6cd5\u76f4\u63a5\u8ba1\u7b97, \u6211\u4eec\u628a\u8ba1\u7b97\u8fc7\u7a0b\u62c6\u6210 1000 \u4efd, \u7136\u540e commit \u4e2d\u95f4\u7ed3\u679c:</p> <ul> <li>\\(f_1(x) = z_1\\)</li> <li>\\(f_2(z_1) = z_2\\)</li> <li>\\(f_3(z_2) = z_3\\)</li> <li>...</li> <li>\\(f_{1000}(z_{2999}) = y\\)</li> </ul> <p>\u6bcf\u4e2a \\(f_i\\) \u90fd\u76f8\u5bf9\u5c0f\u4e14\u53ef\u4ee5\u8ba1\u7b97\u7684. \\(f_i\\) \u6700\u5927\u53ef\u4ee5\u4e3a 4 MB, 1000 \u4e2a\u76f8\u5f53\u4e8e 4 GB \u7684\u811a\u672c\u5927\u5c0f. </p> <p>\u5982\u679c\u53d1\u73b0\u95ee\u9898, \u53ea\u9700\u8981\u627e\u5230\u5176\u4e2d\u67d0\u4e00\u6b65\u6267\u884c\u9519\u8bef\u5c31\u884c\u4e86, \u4f8b\u5982\u5982\u679c \\(f_{42}(z_{41}) \\neq  z_{42}\\), \u90a3\u6574\u4e2a\u9a8c\u8bc1\u5c31\u4f1a\u5931\u8d25.</p> <p>\u56e0\u4e3a\u6267\u884c\u4e00\u4e2a 4 MB \u7684\u811a\u672c\u5c31\u80fd\u9a8c\u8bc1\u67d0\u4e00\u6b65\u6267\u884c\u7684\u9519\u8bef, \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u53ef\u4ee5\u5728\u4e00\u4e2a\u533a\u5757\u4e2d\u9a8c\u8bc1\u51e0 GB \u5927\u5c0f\u811a\u672c\u4ee3\u8868\u7684\u7a0b\u5e8f.</p> <p> \u4e0a\u56fe\u662f\u4e00\u4e2a\u66f4\u5177\u4f53\u4e00\u4e9b\u7684 Bridge \u5982\u4f55\u5de5\u4f5c\u7684\u89e3\u91ca:</p> <ul> <li>Peg in: Alice \u53d1\u9001 100 BTC \u5230\u591a\u7b7e\u5730\u5740, \u5728 sidechain \u751f\u6210 100 Wrapped BTC \u53d1\u9001\u5230 Bob \u5730\u5740</li> <li>Peg out: <ul> <li>Bob \u5728 sidechain burn 100 Wrapped BTC, \u5e0c\u671b\u5728\u6bd4\u7279\u5e01\u4e3b\u7f51\u6536\u5230 100 BTC</li> <li>Operator \u89c2\u5bdf\u5230 Bob \u7684 burn \u4ea4\u6613, Operator \u628a\u81ea\u5df1\u7684\u94b1\u7ed9 Bob</li> <li>Bob \u76f4\u63a5\u53d6\u8d70\u94b1</li> </ul> </li> <li>\u5269\u4e0b\u5c31\u770b Operator \u8fd9\u8fb9\u7684\u903b\u8f91</li> <li>Operator \u5e0c\u671b\u53d6\u8d70 100 BTC, \u628a\u94b1\u53d6\u8d70\u7684\u903b\u8f91, \u6709\u4e24\u4e2a\u5206\u652f\u53ef\u4ee5\u505a\u5230:<ul> <li>Happy path 1: Kick off -&gt; Take 2 -&gt;  Operator \u62ff\u8d70 100 BTC<ul> <li>\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4eba\u6765 dispute, \u5219\u4e24\u5468\u540e\u53ef\u4ee5\u53d6\u8d70 100 BTC</li> </ul> </li> <li>Happy path 2: Kick off -&gt; Assert -&gt; Take 2 -&gt; Operator \u62ff\u8d70 100 BTC<ul> <li>Kick off: <ul> <li>\u5982\u679c\u6709\u4eba\u6000\u7591 Operator \u4f5c\u6076, \u5219\u53ef\u4ee5\u5f3a\u5236\u8981\u6c42 Operator \u5c06\u53d1\u9001\u7ed9 Bob 100 BTC \u7684 SNARK \u8bc1\u660e\u7684\u4e2d\u95f4\u6267\u884c\u7ed3\u679c\u53d1\u5230\u94fe\u4e0a. </li> <li>\u5f3a\u5236\u7684\u65b9\u5f0f\u662f\u83b7\u53d6 Connector A \u7684\u6240\u6709\u6743, \u8ba9 Operator \u6ca1\u6cd5\u5229\u7528 Connector A \u4f5c\u4e3a input \u6210\u529f\u6267\u884c Take 1 \u4ea4\u6613\u8fdb\u800c\u53d6\u8d70 100 BTC</li> <li>\u5982\u4f55\u83b7\u53d6 Connector A \u7684\u6240\u6709\u6743? \u53ef\u4ee5\u76f4\u63a5\u8d2d\u4e70. \u7531\u4e8e Connector A \u662f\u7531 Operator \u7b7e\u540d\u7684, \u8fd9\u4e2a output \u53ef\u4ee5\u7531\u4efb\u4f55\u4eba\u82b1\u8d39(\u5229\u7528\u4e86 ANYONECANYAP \u64cd\u4f5c\u7801), \u53ea\u8981\u7ed9\u652f\u4ed8 Operator 1 BTC \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e2a output \u7684\u6240\u6709\u6743. \u8fd9 1 BTC \u4e3a\u4e86\u652f\u4ed8 Operator \u5728\u4e0b\u9762\u6311\u6218\u4e2d(Assert)\u9700\u8981\u82b1\u8d39\u7684\u6210\u672c</li> </ul> </li> <li>Assert: \u73b0\u5728 Operator \u53ea\u80fd\u5c1d\u8bd5\u8ba9 Take 2 \u4ea4\u6613\u6210\u529f\u624d\u80fd\u5f97\u5230 100 BTC. \u7531\u4e8e Take 2 \u4ea4\u6613\u4f9d\u8d56 Assert \u4ea4\u6613\u7684 output, \u800c Assert \u9700\u8981 Operator \u63d0\u4ea4 SNARK \u8bc1\u660e\u7684\u4e2d\u95f4\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\u624d\u884c, \u6240\u4ee5 Operator \u4e00\u5b9a\u4f1a\u914d\u5408\u505a\u8fd9\u4e2a\u52a8\u4f5c</li> <li>\u5982\u679c\u6ca1\u6709\u4eba Disprove, \u5219 Operator \u8fc7\u4e24\u5468\u540e\u53ef\u4ee5\u53d6\u8d70 100 BTC</li> </ul> </li> </ul> </li> <li>Operator \u88ab\u60e9\u7f5a\u7684\u903b\u8f91<ul> <li>Unhappy path: Kick off -&gt; Assert -&gt; Disprove -&gt; Connector C \u88ab\u82b1\u8d39 -&gt; Operator \u65e0\u6cd5\u82b1\u8d39 100 BTC<ul> <li>\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u6267\u884c Disprove \u4ea4\u6613</li> <li>\u5982\u679c Disprove \u4ea4\u6613\u6210\u529f, \u5219 Connector C \u88ab\u82b1\u8d39(burn), Take 2 \u4ea4\u6613\u65e0\u6cd5\u88ab\u6267\u884c, \u5bfc\u81f4 Operator \u65e0\u6cd5\u82b1\u8d39 100 BTC</li> </ul> </li> </ul> </li> </ul> <p>\u4e0a\u9762\u7684\u8fc7\u7a0b\u5c31\u662f Bridge \u5982\u4f55\u5de5\u4f5c\u7684\u6838\u5fc3\u539f\u7406.</p>"},{"location":"2024-05-29/bitvm/#bridge","title":"Bridge \u7684\u9650\u5236","text":"<ul> <li>\u590d\u6742<ul> <li>\u811a\u672c\u5b9e\u73b0\u8d77\u6765\u5f88\u590d\u6742</li> <li>SNARK verifier \u7684\u811a\u672c\u5f88\u5927</li> </ul> </li> <li>\u5e73\u8861\u6fc0\u52b1<ul> <li>Loser \u59cb\u7ec8\u5e94\u8be5\u652f\u4ed8 winner \u624b\u7eed\u8d39\u548c bounty</li> <li>\u7136\u800c\u5177\u4f53\u5956\u60e9\u7684\u6570\u989d\u5f88\u96be\u8ba1\u7b97, \u56e0\u4e3a\u8fd9\u4e9b\u6570\u503c\u662f\u5728\u8bbe\u7f6e\u9636\u6bb5\u5c31\u786e\u5b9a\u597d\u7684, \u540e\u7eed\u6ca1\u6cd5\u66f4\u65b0. \u5982\u679c\u540e\u7eed\u6536\u8d39\u8d39\u53d8\u5316\u592a\u591a, \u53ef\u80fd Disprove \u8fc7\u7a0b\u9700\u8981\u66f4\u591a\u7684\u624b\u7eed\u8d39</li> <li>\u5982\u679c\u5956\u60e9\u673a\u5236\u6bd4\u8f83\u6709\u6548, \u90a3 Disprove \u4e5f\u4e0d\u4f1a\u53d1\u751f, \u56e0\u4e3a\u4f5c\u6076\u5728\u7ecf\u6d4e\u4e0a\u4e0d\u503c\u5f97. \u8fd9\u4e00\u70b9\u5728 Optimistic \u7cfb\u7edf\u4e0a\u6709\u5f88\u597d\u7684\u8bc1\u660e</li> </ul> </li> <li>Operator \u5fc5\u987b\u57ab\u4ed8\u4e00\u7b14 Peg out \u7684\u8d44\u91d1, \u8fd9\u7b14\u8d44\u91d1\u4f1a\u88ab\u9501\u5b9a\u4e24\u5468. \u4e0d\u8fc7\u597d\u7684\u65b9\u9762\u662f, Operator \u4e0d\u9700\u8981 1:1 \u7684\u62b5\u62bc</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u7b14 Peg in \u4ea4\u6613, 1000 \u4e2a cosigner \u5fc5\u987b\u9884\u5148\u7b7e\u7f72\u5927\u7ea6 100 \u4e2a Peg out \u4ea4\u6613\uff0c\u6bcf\u4e2a Operator \u6301\u6709\u5176\u4e2d\u7684\u4e00\u4e2a</li> <li>\u8fd9 1000 \u4e2a cosigner \u53ef\u4ee5\u5bf9 Peg in \u4ea4\u6613\u8fdb\u884c\u5ba1\u67e5, \u62d2\u7edd\u7ee7\u7eed\u6267\u884c. \u4e0d\u8fc7\u4ed6\u4eec\u6ca1\u6cd5\u5ba1\u67e5 Peg out \u4ea4\u6613</li> </ul>"},{"location":"2024-05-29/bitvm/#_2","title":"\u603b\u7ed3","text":"<ul> <li>BitVM \u4e3a\u6bd4\u7279\u5e01\u5f00\u542f\u4e86\u66f4\u52a0\u667a\u80fd\u7684\u5408\u7ea6\u529f\u80fd.</li> <li>\u4f7f\u7528\u573a\u666f: \u76ee\u524d\u770b\u6765\u4e3b\u8981\u662f\u7528\u4e8e Layer 2 \u7684 Bridge</li> <li>BitVM \u662f\u5b9e\u7528\u7684, \u53ea\u662f\u6709\u4e9b\u81c3\u80bf</li> <li>\u597d\u7684\u5730\u65b9: \u4e0d\u9700\u8981\u8f6f\u5206\u53c9\u5c31\u80fd\u5b9e\u73b0 BitVM<ul> <li>\u5982\u679c\u6709\u51e0\u4e2a\u64cd\u4f5c\u7801\u652f\u6301\u4f1a\u66f4\u597d: TXHASH, OP_MUL, OP_BLOCKCHAIN</li> </ul> </li> <li>\u5e0c\u671b\u5e74\u5e95\u53ef\u4ee5\u4e0a\u7ebf\u4e3b\u7f51</li> </ul>"},{"location":"2024-05-30/why-no-zk-in-bitcoin/","title":"Why There\u2019s No ZK in Bitcoin: The Missing Pieces","text":"<p>\u672c\u6587\u7684\u7b14\u8bb0\u6765\u81ea\u4e8e 2024 \u5e74 5 \u6708 ZKProof \u4f1a\u8bae\u4e0a\u7684\u5206\u4eab: https://www.youtube.com/live/GrSCZmFuy7U?si=289T5_H3RGkhNTNR.</p> <p></p> <p>\u6211\u5c06\u8ba8\u8bba\u6bd4\u7279\u5e01\u4e2d\u7684\u96f6\u77e5\u8bc6\u548c\u7b80\u6d01\u8bc1\u660e\uff0c\u4e3a\u4ec0\u4e48\u793e\u533a\u73b0\u5728\u5bf9\u8fd9\u4e9b\u66f4\u611f\u5174\u8da3\uff0c\u672a\u6765\u53ef\u80fd\u4f1a\u53d1\u751f\u4ec0\u4e48\u4ee5\u53ca\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\u4ec0\u4e48\u3002\u9996\u5148\uff0c\u975e\u5e38\u7b80\u77ed\u5730\u4ecb\u7ecd\u4e00\u4e0b\u6211\u81ea\u5df1\uff0c\u6211\u81ea2018\u5e74\u4ee5\u6765\u4e00\u76f4\u5728\u4e00\u5bb6\u540d\u4e3aBlockstream\u7684\u516c\u53f8\u7684\u7814\u7a76\u56e2\u961f\u5de5\u4f5c\uff0c\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7b7e\u540d\u65b9\u6848\u548c\u76f8\u5173\u4e3b\u9898\u3002\u6211\u662f\u6bd4\u7279\u5e01\u52a0\u5bc6\u5e93libsecp256k1\u7684\u8d21\u732e\u8005\uff0c\u5e76\u4e14\u662f\u8be5\u751f\u6001\u7cfb\u7edf\u4e2d\u5404\u79cd\u89c4\u8303\u7684\u4f5c\u8005\uff0c\u4f8b\u5982\u6700\u8fd1\u7684\u8f6f\u5206\u53c9Taproot\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5feb\u901f\u8bf4\u660e\u4e00\u4e0b\uff0c\u6211\u4eca\u5929\u5728\u8fd9\u91cc\u63d0\u51fa\u7684\u5927\u90e8\u5206\u60f3\u6cd5\u5e76\u4e0d\u662f\u6211\u4e2a\u4eba\u6216Blockstream\u7684\uff0c\u800c\u662f\u6e90\u81ea\u5176\u4ed6\u5730\u65b9\u3002</p> <p> \u8981\u7406\u89e3\u6bd4\u7279\u5e01\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u793e\u4f1a\u7cfb\u7edf\uff0c\u56e0\u4e3a\u662f\u4eba\u4eec\u51b3\u5b9a\u4ed6\u4eec\u8fd0\u884c\u4ec0\u4e48\u8f6f\u4ef6\uff0c\u56e0\u6b64\u51b3\u5b9a\u4e86\u8981\u6267\u884c\u7684\u534f\u8bae\u89c4\u5219\u3002\u8fd9\u4e2a\u7cfb\u7edf\u4e4b\u6240\u4ee5\u4e0d\u4f1a\u53d8\u6210\u6df7\u4e71\uff0c\u662f\u56e0\u4e3a\u5728\u6bd4\u7279\u5e01\u7684\u57fa\u672c\u539f\u5219\u662f\u4ec0\u4e48\u4ee5\u53ca\u6bd4\u7279\u5e01\u7a76\u7adf\u662f\u4ec0\u4e48\u3001\u5e94\u8be5\u662f\u4ec0\u4e48\u8fd9\u4e9b\u95ee\u9898\u4e0a\u5b58\u5728\u67d0\u79cd\u5171\u8bc6\u3002\u7136\u800c\uff0c\u8981\u660e\u786e\u8fd9\u4e9b\u57fa\u672c\u539f\u5219\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u5b58\u5728\u5e7f\u6cdb\u7684\u610f\u89c1\u5206\u6b67\uff0c\u800c\u4e14\u8fd9\u4e9b\u610f\u89c1\u8fd8\u5728\u4e0d\u65ad\u6f14\u53d8\u3002\u90a3\u4e48\uff0c\u662f\u4ec0\u4e48\u793e\u4f1a\u5951\u7ea6\u7ef4\u7cfb\u7740\u6bd4\u7279\u5e01\u5462\uff1f</p> <p></p> <p>\"\u6211\u4e00\u76f4\u5728\u7814\u7a76\u4e00\u4e2a\u65b0\u7684\u7535\u5b50\u73b0\u91d1\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u5b8c\u5168\u662f\u70b9\u5bf9\u70b9\u7684\uff0c\u4e0d\u9700\u8981\u53ef\u4fe1\u7684\u7b2c\u4e09\u65b9\"\u3002\u8fd9\u662f\u4e2d\u672c\u806a\u5728\u5bc6\u7801\u5b66\u90ae\u4ef6\u5217\u8868\u4e0a\u5ba3\u5e03\u6bd4\u7279\u5e01\u65f6\u7684\u4e00\u6bb5\u8bdd\u3002\u7136\u800c\uff0c\u6bd4\u7279\u5e01\u7684\u8bbe\u8ba1\u9650\u5236\u4e86\u7f51\u7edc\u53ef\u4ee5\u652f\u6301\u7684\u6700\u5927\u541e\u5410\u91cf\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u5bf9\u4ea4\u6613\u7a7a\u95f4\u7684\u9700\u6c42\u4e0a\u5347\uff0c\u5c31\u4f1a\u51fa\u73b0\u7ade\u4ef7\u6218\uff0c\u5bfc\u81f4\u4ea4\u6613\u8d39\u7528\u8fc5\u901f\u589e\u52a0\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u770b\u5230\u7684\u4ee5\u7f8e\u5143\u8ba1\u7684\u6700\u9ad8\u8d39\u7528\u662f\u6700\u8fd1\u4e00\u6b21\u533a\u5757\u51cf\u534a\u4e4b\u540e\uff0c\u5f53\u65f6\u4e00\u4e2a\u4e2d\u7b49\u4f18\u5148\u7ea7\u7684\u5e73\u5747\u4ea4\u6613\u4f30\u8ba1\u9700\u8981150\u7f8e\u5143\u3002\u800c\u5728\u4e00\u4e2a\u4efb\u610f\u7684\u65e5\u5b50\uff0c\u6bd4\u5982\u4e0a\u5468\u4e94\uff0c\u60c5\u51b5\u901a\u5e38\u8981\u5e73\u9759\u5f97\u591a\uff0c\u4ea4\u6613\u8d39\u7528\u5927\u7ea6\u662f1\u7f8e\u5143\u5de6\u53f3\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8bb8\u591a\u52aa\u529b\u6295\u5165\u5230\u4e86\u6bd4\u7279\u5e01\u7684\u95ea\u7535\u7f51\u7edc\u7684\u5f00\u53d1\u4e2d\u3002\u4f46\u57282016\u5e74\u53d1\u5e03\u7684\u539f\u59cb\u95ea\u7535\u7f51\u7edc\u8bba\u6587\u4e2d\uff0c\u5df2\u7ecf\u4f30\u8ba1\u5b83\u53ea\u80fd\u652f\u6301\u6570\u5343\u4e07\u7528\u6237\uff0c\u79bb\u8986\u76d6\u5730\u7403\u4e0a\u7684\u6bcf\u4e00\u4e2a\u4eba\u8fd8\u5f88\u8fdc\u3002</p> <p></p> <p>\u4e2d\u672c\u806a\u5728\u90ae\u4ef6\u5217\u8868\u4e0a\u7684\u516c\u544a\u7ee7\u7eed\u5217\u51fa\u4e86\u6bd4\u7279\u5e01\u7684\u4e3b\u8981\u7279\u6027\u4e4b\u4e00\uff0c\u5373\u53c2\u4e0e\u8005\u53ef\u4ee5\u662f\u533f\u540d\u7684\u3002</p> <p>\u786e\u5b9e\uff0c\u53c2\u4e0e\u8005\u4e0d\u9700\u8981\u6ce8\u518c\u7167\u7247\u548c\u8eab\u4efd\u8bc1\u6765\u4f7f\u7528\u6bd4\u7279\u5e01\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u4ea4\u6613\u6cc4\u9732\u4e86\u5927\u91cf\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u663e\u8457\u5730\u5e2e\u52a9\u53bb\u533f\u540d\u5316\u7528\u6237\u3002</p> <p>\u6709\u4e00\u4e9b\u6d41\u884c\u7684\u5de5\u5177\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u8fd9\u4e9b\u9690\u79c1\u95ee\u9898\uff0c\u4f46\u8fd9\u4e9b\u5de5\u5177\u6700\u8fd1\u53d7\u5230\u4e86\u975e\u5e38\u4ee4\u4eba\u62c5\u5fe7\u7684\u653b\u51fb\u3002\u6bd4\u5982\uff0cSamourai CoinJoin\u94b1\u5305\u7684\u5f00\u53d1\u8005\u4e0a\u4e2a\u6708\u88abFBI\u902e\u6355\uff0c\u4e00\u5468\u540e\uff0cWasabi\u94b1\u5305\u7684\u5f00\u53d1\u8005\u5173\u95ed\u4e86\u4ed6\u4eec\u7684CoinJoin\u534f\u8c03\u5668\u3002</p> <p> \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u8bf4\uff0c\u4eca\u5929\u7684\u751f\u6001\u7cfb\u7edf\u5e76\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\u6bd4\u7279\u5e01\u7684\u7406\u5ff5\uff0c\u6280\u672f\u603b\u4f53\u4e0a\u8fd8\u5728\u4e0d\u65ad\u53d1\u5c55\u3002\u56e0\u6b64\uff0c\u4e0e\u666e\u904d\u7684\u770b\u6cd5\u76f8\u53cd\uff0c\u6bd4\u7279\u5e01\u793e\u533a\u7684\u5927\u591a\u6570\u4eba\u5e76\u4e0d\u8ba4\u4e3a\u534f\u8bae\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u6709\u4e0d\u5c11\u50cf\u6211\u8fd9\u6837\u70ed\u8877\u4e8e\u6539\u8fdb\u5b83\u7684\u4eba\u3002</p> <p>\u6bd4\u7279\u5e01\u534f\u8bae\u5e94\u8be5\u5982\u4f55\u6f14\u8fdb\u5462?</p> <p></p> <p>\u6240\u4ee5\uff0cZK \u548c SNARKs \u5728\u6bd4\u7279\u5e01\u4e2d\u53ef\u4ee5\u505a\u4ec0\u4e48\uff1f\u975e\u5e38\u7b80\u8981\u5730\u8bf4\uff0c\u6709\u5f88\u591a\u63d0\u8bae\u6765\u89e3\u51b3\u63d0\u5230\u7684\u95ee\u9898\uff0c\u5927\u591a\u6570\u4e0d\u6d89\u53ca SNARKs\uff0c\u4f46\u5b83\u4eec\u80fd\u505a\u4ec0\u4e48\u5462\uff1f</p> <ol> <li> <p>\u663e\u8457\u6539\u5584\u7528\u6237\u9690\u79c1\uff1a</p> <ul> <li>\u4f7f\u7528\u540c\u6001 Peterson \u627f\u8bfa\u5bf9\u4ea4\u6613\u503c\u548c\u8303\u56f4\u8bc1\u660e\uff08\u5982 Blockstream \u7684 Element \u4fa7\u94fe\u4e2d\u90e8\u7f72\u7684\u90a3\u6837\uff09\u3002</li> <li>\u901a\u8fc7\u53ef\u94fe\u63a5\u7b7e\u540d\uff08\u5982 Monero \u4e2d\uff09\u9690\u85cf\u4ea4\u6613\u56fe\u3002</li> <li>\u5b9e\u73b0\u771f\u6b63\u7684\u79c1\u5bc6\u4ea4\u6613\uff08\u5982\u73b0\u4ee3 Zcash \u4e2d\uff09\u3002</li> <li> <p>\u63d0\u9ad8\u4ea4\u6613\u541e\u5410\u91cf\uff1a</p> </li> <li> <p>\u4f8b\u5982\uff0c\u901a\u8fc7\u5efa\u7acb\u4e0e\u5176\u4ed6\u7cfb\u7edf\u7684\u6865\u6881\uff08\u5982 2014 \u5e74\u63d0\u51fa\u7684\u5efa\u8bae\uff09\uff0c\u53ef\u4ee5\u663e\u8457\u589e\u52a0\u4ea4\u6613\u541e\u5410\u91cf\u3002</p> </li> </ul> </li> </ol> <p></p> <p>\u9274\u4e8e\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6280\u672f\u624b\u6bb5\u5df2\u7ecf\u5b58\u5728\u4e86\u8fd9\u4e48\u4e45\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4eec\u4eca\u5929\u8fd8\u4e0d\u662f\u534f\u8bae\u7684\u4e00\u90e8\u5206\uff1f</p> <p>\u5176\u4e2d\u4e00\u4e2a\u4e3b\u8981\u539f\u56e0\u662f\u6bd4\u7279\u5e01\u5f88\u96be\u6539\u53d8\uff0c\u800c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4ef6\u597d\u4e8b\u3002\u56e0\u4e3a\u5982\u679c\u6539\u53d8\u6bd4\u7279\u5e01\u5f88\u5bb9\u6613\uff0c\u90a3\u4e48\u4ee5\u6076\u610f\u65b9\u5f0f\u6539\u53d8\u548c\u653b\u51fb\u5b83\u4e5f\u4f1a\u5f88\u5bb9\u6613\u3002</p> <p>\u8fd9\u5f15\u51fa\u4e86\u4e00\u4e2a\u81ea\u7136\u7684\u95ee\u9898\uff1a\u6211\u4eec\u5728\u4e0d\u6539\u53d8\u6bd4\u7279\u5e01\u7684\u60c5\u51b5\u4e0b\u80fd\u505a\u4ec0\u4e48\uff1f</p> <p></p> <p>\u5728\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u56de\u987e\u4e00\u4e0b\u6bd4\u7279\u5e01\u7684\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u3002\u4e3a\u4e86\u5c06\u6bd4\u7279\u5e01\u8f6c\u79fb\u7ed9\u4ed6\u4eba\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4ea4\u6613\uff0c\u5e76\u5c06\u5176\u5e7f\u64ad\u5230\u7f51\u7edc\u4e0a\u3002\u4ea4\u6613\u7684\u8f93\u51fa\u53ef\u4ee5\u88ab\u79f0\u4e3a\u5b9e\u9645\u7684 coin\uff0c\u5b83\u4eec\u6709\u4e00\u4e2a\u9644\u52a0\u7684\u91d1\u989d\u3002\u63a5\u6536\u8005\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u65b0\u4ea4\u6613\u6765\u82b1\u8d39\u8fd9\u4e9b\u8f93\u51fa\uff0c\u8fd9\u4e2a\u65b0\u4ea4\u6613\u4f1a\u751f\u6210\u65b0\u7684\u8f93\u51fa\uff0c\u5e76\u6709\u6548\u5730\u5c06 coin \u53d1\u9001\u7ed9\u5176\u4ed6\u4eba\u3002\u8bf7\u6ce8\u610f\uff0c\u6bd4\u7279\u5e01\u4e2d\u6ca1\u6709\u5168\u5c40\u72b6\u6001\uff0c\u7279\u522b\u662f\u6ca1\u6709\u8d26\u6237\u72b6\u6001\uff0c\u53ea\u6709\u4ea4\u6613\u8f93\u51fa\uff0c\u5b83\u4eec\u8981\u4e48\u88ab\u82b1\u8d39\uff0c\u8981\u4e48\u672a\u88ab\u82b1\u8d39\u3002</p> <p>\u9664\u4e86\u91d1\u989d\u5916\uff0c\u6bcf\u4e2a\u8f93\u51fa\u90fd\u6709\u4e00\u4e2a\u9644\u52a0\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u7528\u4e00\u79cd\u53eb\u505a\u6bd4\u7279\u5e01\u811a\u672c\u7684\u8bed\u8a00\u7f16\u5199\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u63a7\u5236\u8c01\u53ef\u4ee5\u82b1\u8d39\u8be5\u4ea4\u6613\u8f93\u51fa\u3002\u5982\u679c\u4f60\u5411\u7a0b\u5e8f\u63d0\u4f9b\u6b63\u786e\u7684 witness\uff0c\u4f60\u5c31\u80fd\u591f\u82b1\u8d39\u5b83\u3002\u6bd4\u7279\u5e01\u811a\u672c\u662f\u4e00\u79cd\u57fa\u4e8e\u5806\u6808(stack)\u7684\u8bed\u8a00\uff0c\u5305\u542b\u4e00\u7cfb\u5217\u6240\u8c13\u7684\u64cd\u4f5c\u7801(opcode)\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u7531\u591a\u4e2a\u64cd\u4f5c\u7801\u7ec4\u6210, \u5b83\u4eec\u57fa\u4e8e\u5806\u6808\u5143\u7d20\u8ba1\u7b97\u5e76\u5c06\u8ba1\u7b97\u7ed3\u679c\u653e\u56de\u5806\u6808\u3002\u811a\u672c\u4ece\u6bd4\u7279\u5e01\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5f00\u59cb\u5c31\u5df2\u7ecf\u5b58\u5728\u3002</p> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u811a\u672c\u7531\u67d0\u4e2a\u516c\u94a5\u548c\u68c0\u67e5\u7b7e\u540d\u7684\u64cd\u4f5c\u7801\u7ec4\u6210\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7801\u786e\u4fdd\u8981\u82b1\u8d39\u8fd9\u679acoin\uff0c\u5fc5\u987b\u63d0\u4f9b\u5bf9\u7ed9\u5b9a\u516c\u94a5\u7684\u652f\u51fa\u4ea4\u6613\u7684\u7b7e\u540d\u3002</p> <p></p> <p>\u6bd4\u7279\u5e01\u811a\u672c\u80fd\u505a\u4ec0\u4e48\uff1f</p> <ul> <li>\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u5806\u6808\uff0c\u53ef\u4ee5\u68c0\u67e5\u76f8\u7b49\u6027\uff0c\u5e76\u53ef\u4ee5\u6839\u636e\u5806\u6808\u4e0a\u7684\u503c\u8fdb\u884c\u5206\u652f\u64cd\u4f5c</li> <li>\u53ef\u4ee5\u5bf932\u4f4d\u6570\u5b57\u8fdb\u884c\u6709\u9650\u7684\u7b97\u672f\u8fd0\u7b97\uff0c\u5373\u52a0\u6cd5\u548c\u51cf\u6cd5</li> <li>\u53ef\u4ee5\u54c8\u5e0c\u6570\u636e\uff0c\u5e76\u53ef\u4ee5\u68c0\u67e5 ECDSA \u548c Schnorr \u7b7e\u540d</li> </ul> <p>\u6bd4\u7279\u5e01\u811a\u672c\u4e0d\u80fd\u505a\u4ec0\u4e48\uff1f</p> <ul> <li>\u6ca1\u6709\u5faa\u73af\u3001\u8df3\u8f6c\u3001\u9012\u5f52\uff0c\u5b83\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\u7684</li> <li>\u4e0d\u80fd\u8fdb\u884c\u6309\u4f4d\u64cd\u4f5c</li> <li>\u7f3a\u4e4f\u8fdb\u884c\u4e58\u6cd5\u6216\u9664\u6cd5\u7684\u7b97\u672f\u64cd\u4f5c\u7801</li> <li>\u4e0d\u80fd\u8fde\u63a5\u5806\u6808\u4e0a\u7684\u5143\u7d20</li> <li>\u51e0\u4e4e\u6ca1\u6709\u68c0\u67e5\u4ea4\u6613\u6570\u636e\u7684\u80fd\u529b\uff0c\u8fd9\u610f\u5473\u7740\u811a\u672c\u4e0d\u80fd\u8bbf\u95ee\u4ea4\u6613\u91d1\u989d\u4fe1\u606f\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6ca1\u6709\u529e\u6cd5\u5c06\u72b6\u6001\u4ece\u4e00\u4e2a\u4ea4\u6613\u8f93\u51fa\u4f20\u9012\u5230\u4e0b\u4e00\u4e2a\u4ea4\u6613\u8f93\u51fa</li> </ul> <p>\u5728\u6bd4\u7279\u5e01\u7684\u65e9\u671f\u7248\u672c\u4e2d\uff0c\u811a\u672c\u5177\u6709\u8fd9\u4e9b\u529f\u80fd\u4e2d\u7684\u4e00\u4e9b\uff0c\u4f46\u5b83\u4eec\u88ab\u4e2d\u672c\u806a\u7981\u7528\u4e86\u3002\u8fd9\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u53d1\u73b0\u67d0\u4e9b\u64cd\u4f5c\u7801\u5b58\u5728\u6f0f\u6d1e\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u8fde\u63a5\u4e24\u4e2a\u5806\u6808\u5143\u7d20\u7684\u64cd\u4f5c\u7801(OP_CAT)\u53ef\u80fd\u4f1a\u88ab\u7528\u6765\u8fdc\u7a0b\u653b\u51fb\u6bd4\u7279\u5e01\u8282\u70b9\u5bfc\u81f4\u5176\u5d29\u6e83\uff0c\u4e2d\u672c\u806a\u51fa\u4e8e\u8c28\u614e\u8003\u8651\uff0c\u8fd8\u7981\u7528\u4e86\u5176\u4ed6\u64cd\u4f5c\u7801\u3002</p> <p>\u53ef\u4ee5 verify SNARK \u5417?</p> <p></p> <p>\u90a3\u4e48\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u4f60\u80fd\u5728\u6bd4\u7279\u5e01\u811a\u672c\u4e2d\u9a8c\u8bc1 SNARK \u5417\uff1f</p> <p>\u539f\u5219\u4e0a\uff0c\u6bd4\u7279\u5e01\u811a\u672c\u4e2d\u7684\u57fa\u672c\u64cd\u4f5c\u8db3\u4ee5\u9a8c\u8bc1\u4efb\u4f55\u8ba1\u7b97\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\u7684\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u4e0d\u53ef\u80fd\u5b9e\u73b0 SNARK \u9a8c\u8bc1\u5668\uff0c\u56e0\u4e3a\u8fd9\u5c06\u9700\u8981\u4e00\u4e2a\u8d85\u8fc7\u6211\u4eec\u53ef\u4ee5\u653e\u5165\u6bd4\u7279\u5e01\u533a\u5757\u7684 4 \u5146\u5b57\u8282\u7684\u811a\u672c\u3002</p> <p>\u5728\u5927\u578b\u6709\u9650\u57df\u4e0a\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u7684\u5b9e\u73b0\u975e\u5e38\u6602\u8d35\u3002\u4f8b\u5982\uff0cBitVM \u5b9e\u73b0\u4e86\u4e24\u4e2a 254 \u4f4d\u6574\u6570\u7684\u4e58\u6cd5\uff0c\u8981\u6c42\u811a\u672c\u8fbe\u5230 77,000 \u5b57\u8282\u3002</p> <p>\u6ca1\u6709\u8fde\u63a5\u5806\u6808\u5143\u7d20\u7684\u80fd\u529b\uff0c\u68c0\u67e5 Merkle \u8bc1\u660e\u975e\u5e38\u6602\u8d35\u3002</p> <p>\u811a\u672c\u6ca1\u6709\u62bd\u8c61\uff0c\u672c\u8d28\u4e0a\u9700\u8981\u5c55\u5f00\u6240\u6709\u64cd\u4f5c\uff0c\u6bd4\u5982\u5faa\u73af\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5730\u6539\u53d8\u6bd4\u7279\u5e01\u534f\u8bae\uff0c\u6dfb\u52a0\u66f4\u5f3a\u5927\u7684\u64cd\u4f5c\u7801\uff1f</p> <p>\u6b63\u5982\u6211\u63d0\u5230\u7684\uff0c\u6539\u53d8\u6bd4\u7279\u5e01\u5f88\u96be\u3002\u8fd9\u4e2a\u7cfb\u7edf\u53ea\u6709\u5728\u6240\u6709\u53c2\u4e0e\u8005\u90fd\u9075\u5faa\u5b8c\u5168\u76f8\u540c\u7684\u534f\u8bae\u89c4\u5219\u65f6\u624d\u6709\u7528\uff0c\u800c\u8981\u5728\u65b0\u7684\u534f\u8bae\u89c4\u5219\u4e0a\u8fbe\u6210\u5927\u81f4\u5171\u8bc6\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e2d\u592e\u51b3\u7b56\u8005\u3002\u4efb\u4f55\u6539\u53d8\u90fd\u6709\u6743\u8861\u548c\u53cd\u5bf9\uff0c\u5bf9\u4e8e\u6709\u4e9b\u4eba\u6765\u8bf4\uff0c\u5b83\u505a\u5f97\u592a\u5c11\uff0c\u5bf9\u4e8e\u53e6\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u5b83\u505a\u5f97\u592a\u591a\uff0c\u5bf9\u4e8e\u8fd8\u6709\u4e00\u4e9b\u4eba\u6765\u8bf4\uff0c\u5b83\u505a\u9519\u4e86\u4e8b\u3002\u6ca1\u6709\u529e\u6cd5\u8861\u91cf\u662f\u5426\u5df2\u7ecf\u8fbe\u6210\u4e86\u5927\u81f4\u5171\u8bc6\uff0c\u5982\u679c\u5bf9\u66f4\u65b0\u6ca1\u6709\u5171\u8bc6\uff0c\u90a3\u4e48\u94fe\u5206\u88c2\u7684\u98ce\u9669\u5c31\u5b58\u5728\u3002</p> <p>\u5f53\u7136\uff0c\u8fc7\u53bb\u4e5f\u6709\u66f4\u65b0\uff0c\u6700\u8fd1\u7684\u66f4\u65b0\u662f 2017 \u5e74\u7684 SegWit \u548c 2021 \u5e74\u7684 Taproot\u3002</p> <p></p> <p>Taproot \u4e00\u6b21\u6539\u53d8\u4e86\u8bb8\u591a\u534f\u8bae\u89c4\u5219\uff0c\u4ece\u6700\u521d\u7684\u60f3\u6cd5\u5728\u90ae\u4ef6\u5217\u8868\u4e0a\u53d1\u5e03\u5230\u6fc0\u6d3b\uff0c\u82b1\u4e86\u4e09\u5e74\u534a\u7684\u65f6\u95f4\u3002</p> <p>\u5b83\u6210\u529f\u7684\u4e24\u4e2a\u5173\u952e\u56e0\u7d20\u662f\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u5b83\u9009\u62e9\u4e86\u663e\u800c\u6613\u89c1\u7684\u6539\u8fdb\uff0c\u5305\u62ec\u6e05\u7406\u548c\u9519\u8bef\u4fee\u590d\uff1b</li> <li>\u5176\u6b21\uff0c\u5b83\u6ca1\u6709\u6539\u53d8\u73b0\u6709\u7684\u5b89\u5168\u5047\u8bbe\u3002\u4f8b\u5982\uff0c\u5b83\u5141\u8bb8\u4f7f\u7528 Schnorr \u7b7e\u540d\u4ee3\u66ff ECDSA \u7b7e\u540d\uff0c\u4e8c\u8005\u90fd\u662f\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u5047\u8bbe\uff0c\u5e76\u4f7f\u7528\u6bd4\u7279\u5e01\u5b9e\u73b0\u4e2d\u7684\u76f8\u540c\u692d\u5706\u66f2\u7ebf\u3002</li> </ul> <p>\u4e0e\u6211\u4eec\u7684\u8ba8\u8bba\u76f8\u5173\u7684\u5b9e\u9645\u53d8\u5316\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ol> <li>Taproot \u964d\u4f4e\u4e86\u6700\u574f\u60c5\u51b5\u7684\u811a\u672c\u9a8c\u8bc1\u6210\u672c\uff0c\u56e0\u6b64\u80fd\u591f\u5220\u9664\u5148\u524d\u5b58\u5728\u7684\u811a\u672c\u9650\u5236\u3002\u811a\u672c\u7684\u5927\u5c0f\u4ec5\u53d7\u533a\u5757\u5927\u5c0f\uff08\u7ea6 4 \u5146\u5b57\u8282\uff09\u7684\u9650\u5236\u3002</li> <li>Taproot \u6dfb\u52a0\u4e86\u4e00\u4e9b\u5347\u7ea7\u673a\u5236\u3002</li> <li>Taproot \u51cf\u5c11\u4e86\u94fe\u4e0a\u9700\u8981\u63ed\u793a\u7684\u811a\u672c\u3002\u5982\u679c\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u811a\u672c\u5199\u6210\u811a\u672c A \u6216\u811a\u672c B\uff0cTaproot \u5141\u8bb8\u5c06\u6574\u4e2a\u7a0b\u5e8f\u627f\u8bfa(commit)\u5230\u4e00\u4e2a Merkle \u6811\u4e2d\uff0c\u6bcf\u4e2a\u811a\u672c\u4f4d\u4e8e\u4e0d\u540c\u7684\u53f6\u5b50\u4e0a\u3002\u5728\u53d1\u9001\u4ea4\u6613\u65f6\uff0c\u4f60\u53ea\u9700\u63ed\u793a\u4f60\u6ee1\u8db3\u7684\u811a\u672c\u548c\u76f8\u5e94\u7684 Merkle \u8bc1\u660e\u3002</li> </ol> <p></p> <p>\u65e2\u7136\u53ef\u4ee5\u6539\u53d8\u6bd4\u7279\u5e01\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u6dfb\u52a0\u4e00\u4e2a\u4e13\u7528\u7684\u64cd\u4f5c\u7801\u6765\u9a8c\u8bc1 SNARK\uff1f</p> <p>\u6dfb\u52a0\u4e00\u4e2a OP_SNARK \u4e0e Taproot \u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u8bbe\u8ba1\u7a7a\u95f4\u5de8\u5927\u3002</p> <p>\u6240\u6709\u6bd4\u7279\u5e01\u8282\u70b9\u90fd\u9700\u8981\u6c38\u8fdc\u652f\u6301\u8be5\u7279\u5b9a\u7684 OP_SNARK \u65b9\u6848\uff0c\u4ee5\u907f\u514d\u7528\u6237\u65e0\u6cd5\u4f7f\u7528\u4ed6\u4eec\u7684\u8d44\u91d1\uff0c\u8fd9\u5c06\u589e\u52a0\u5de8\u5927\u7684\u6280\u672f\u503a\u52a1\u3002</p> <p>\u6b64\u5916\uff0cOP_SNARK \u4e5f\u975e\u5e38\u590d\u6742\uff0c\u5bf9\u6bd4\u6765\u770b Taproot \u4ec5\u6dfb\u52a0\u4e86\u7ea6 1600 \u884c\u4ee3\u7801\uff08\u4e0d\u5305\u62ec\u6d4b\u8bd5\uff09\u3002</p> <p>\u8c01\u6765\u5ba1\u6838 OP_SNARK\uff1f\u5982\u4f55\u5728\u51e0\u4e4e\u6ca1\u6709\u4eba\u7406\u89e3\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u751f\u6001\u7cfb\u7edf\u7684\u5171\u8bc6\uff1f</p> <p>\u56e0\u6b64\uff0c\u4eca\u5929\u770b\u6765\u8fd9\u4e0d\u4f1a\u5f88\u5feb\u53d1\u751f\u3002</p> <p></p> <p>\u4f46\u662f\uff0c\u8fd8\u6709\u5176\u4ed6\u9014\u5f84\u53ef\u4ee5\u5728\u6bd4\u7279\u5e01\u811a\u672c\u4e2d\u9a8c\u8bc1 SNARK\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u7b80\u5355\u7684\u64cd\u4f5c\u7801\u4f7f\u811a\u672c\u66f4\u5f3a\u5927\uff0c\u4f7f\u4eba\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u7f16\u5199 SNARK \u9a8c\u8bc1\u5668\u3002</p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u95ee\u9898\u662f\u811a\u672c\u5f88\u96be\u7f16\u5199\u3002\u56e0\u6b64\uff0cBlockstream \u7814\u7a76\u56e2\u961f\u6b63\u5728\u5f00\u53d1 Simplicity\uff0c\u8fd9\u662f\u4e00\u79cd\u65e8\u5728\u66ff\u4ee3\u6bd4\u7279\u5e01\u811a\u672c\u7684\u8bed\u8a00\u3002Simplicity \u4e13\u4e3a\u5171\u8bc6\u7cfb\u7edf\u8bbe\u8ba1\uff0c\u6545\u610f\u8bbe\u8ba1\u6210\u4e0d\u56fe\u7075\u5b8c\u5907\uff0c\u6613\u4e8e\u9759\u6001\u5206\u6790\u548c\u5f62\u5f0f\u9a8c\u8bc1\u3002</p> <p>\u7136\u800c\uff0c\u5c06 Simplicity \u6dfb\u52a0\u5230\u6bd4\u7279\u5e01\u4e2d\u5c06\u662f\u53e6\u4e00\u4e2a\u76f8\u5bf9\u8f83\u5927\u7684\u53d8\u5316\u3002</p> <p></p> <p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u63d0\u6848\uff0c\u4f7f\u6bd4\u7279\u5e01\u811a\u672c\u66f4\u5f3a\u5927\uff0c\u5373 OP_CAT\u3002</p> <p>\u8c01\u542c\u8bf4\u8fc7 OP_CAT\uff1f\u4e5f\u8bb8\u6709 10% \u7684\u4eba\u77e5\u9053\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5b58\u5728\u4e8e\u6bd4\u7279\u5e01\u6700\u521d\u7248\u672c\u4e2d\u7684\u64cd\u4f5c\u7801\uff0c\u4f46\u7531\u4e8e\u53ef\u80fd\u7684\u8d44\u6e90\u8017\u5c3d\u653b\u51fb\u88ab\u4e2d\u672c\u806a\u7981\u7528\u3002</p> <p>\u793e\u533a\u7684\u63d0\u6848\u662f\u91cd\u65b0\u542f\u7528\u5b83\uff0c\u4fee\u590d\u653b\u51fb\uff0c\u8fd9\u5176\u5b9e\u5f88\u5bb9\u6613\u3002</p> <p>\u5b83\u7684\u529f\u80fd\u662f\u5f39\u51fa(pop)\u5806\u6808\u9876\u90e8\u7684\u4e24\u4e2a\u5143\u7d20\uff0c\u5c06\u5b83\u4eec\u8fde\u63a5\u8d77\u6765\uff0c\u7136\u540e\u653e\u56de\u5806\u6808\u3002</p> <p>\u542c\u8d77\u6765\u975e\u5e38\u65e0\u804a\uff0c\u4f46\u5b9e\u9645\u4e0a\u5728\u6bd4\u7279\u5e01\u811a\u672c\u4e2d\u975e\u5e38\u5f3a\u5927\u3002\u4f8b\u5982\uff0c\u7531\u4e8e\u811a\u672c\u65e0\u6cd5\u8bbf\u95ee\u4ea4\u6613\u91d1\u989d\u6216\u5176\u4ed6\u4fe1\u606f\uff0c\u4f46\u6709\u4e86 OP_CAT\uff0c\u8fd9\u5c06\u6210\u4e3a\u53ef\u80fd\u3002OP_CAT \u8fd8\u5141\u8bb8\u68c0\u67e5 Merkle \u8bc1\u660e\uff0c\u8fd9\u5728\u4eca\u5929\u662f\u4e0d\u5b9e\u9645\u7684\uff0c\u8fd8\u6709\u66f4\u591a\u529f\u80fd\u3002\u6bcf\u5468\u4f3c\u4e4e\u90fd\u6709\u4eba\u63d0\u51fa\u65b0\u7684\u4f7f\u7528 OP_CAT \u7684\u5947\u602a\u60f3\u6cd5\u3002</p> <p>\u8fd9\u662f\u5426\u6709\u52a9\u4e8e\u5728\u811a\u672c\u4e2d\u9a8c\u8bc1 SNARK\uff1f</p> <p>\u6709\u4e9b\u5e2e\u52a9\uff0c\u56e0\u4e3a\u9a8c\u8bc1 Merkle \u8bc1\u660e\u6709\u52a9\u4e8e\u9a8c\u8bc1\u57fa\u4e8e FRI \u7684 SNARK\uff0c\u4f46\u811a\u672c\u53ef\u80fd\u4ecd\u7136\u592a\u5927\uff0c\u65e0\u6cd5\u653e\u5165\u6bd4\u7279\u5e01\u533a\u5757\u3002</p> <p>\u90a3\u4e48\uff0c\u8fd9\u4e2a\u63d0\u6848\u7684\u72b6\u6001\u5982\u4f55\uff1f</p> <p>\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5f88\u591a\u5e74\uff0c\u4f46\u4f3c\u4e4e\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8ba4\u8bc6\u5230\u4ea4\u6613\u68c0\u67e5(introspection)\u7684\u6709\u7528\u6027\u3002\u4e0e\u5176\u4ed6\u63d0\u6848\u76f8\u6bd4\uff0cOP_CAT \u7684\u660e\u663e\u4f18\u52bf\u5728\u4e8e\u5b83\u4ee5\u524d\u5728\u6bd4\u7279\u5e01\u811a\u672c\u4e2d\u5b58\u5728\u8fc7\uff0c\u56e0\u6b64\u66f4\u5bb9\u6613\u5728\u793e\u533a\u4e2d\u8fbe\u6210\u5171\u8bc6\u3002</p> <p>\u7136\u800c\uff0cOP_CAT \u542f\u7528\u7684\u4ea4\u6613\u68c0\u67e5\u7c7b\u578b\u4e5f\u53ef\u80fd\u5bfc\u81f4\u6709\u5bb3\u7684\u77ff\u5de5\u53ef\u63d0\u53d6\u4ef7\u503c(MEV: Miner Extractable Value)\uff0c\u8fd9\u8ba9\u4e00\u4e9b\u4eba\u975e\u5e38\u62c5\u5fe7\u3002</p> <p>\u56e0\u6b64\uff0c\u6bd4\u7279\u5e01\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u6f5c\u5728\u7684\u8def\u5f84\uff0c\u901a\u8fc7\u542f\u7528\u66f4\u591a\u7b80\u5355\u7684\u64cd\u4f5c\u7801\uff0c\u5982 OP_CAT\uff0c\u6700\u7ec8\u4f7f\u5728\u811a\u672c\u4e2d\u9a8c\u8bc1 SNARK \u6210\u4e3a\u53ef\u80fd\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6700\u8fd1\u6709\u4e00\u4e2a\u540d\u4e3a\u201cGreat Script Restoration\u201d\u7684\u63d0\u6848\uff0c\u542f\u7528\u4e86\u4e58\u6cd5\u64cd\u4f5c\u7801\uff0c\u5e76\u5141\u8bb8\u6240\u6709\u7b97\u672f\u64cd\u4f5c\u7801\u4ee5\u4efb\u610f\u7cbe\u5ea6\u64cd\u4f5c\u3002</p>"},{"location":"2024-05-30/why-no-zk-in-bitcoin/#_1","title":"\u786c\u4ef6\u8981\u6c42","text":"<p>\u5728\u8003\u8651\u6bd4\u7279\u5e01\u7684\u53d8\u5316\u65f6\uff0c\u4e00\u4e2a\u5173\u952e\u6307\u6807\u662f\u8fd0\u884c\u4e00\u4e2a\u9a8c\u8bc1\u6240\u6709\u6bd4\u7279\u5e01\u89c4\u5219\u7684\u6bd4\u7279\u5e01\u8282\u70b9\u7684\u8d44\u6e90\u8981\u6c42\u3002\u5728\u56fe\u7247\u4e2d\u53ef\u4ee5\u770b\u5230\u6211\u7684\u4e2a\u4eba\u6bd4\u7279\u5e01\u8282\u70b9\u3002\u4e3a\u4e86\u4f7f\u6bd4\u7279\u5e01\u5177\u6709\u6297\u5ba1\u67e5\u6027\u548c\u5bf9\u6297\u62e5\u6709\u5de8\u5927\u8d44\u6e90\u7684\u653b\u51fb\u8005\u7684\u5f39\u6027\uff0c\u6211\u4eec\u5e0c\u671b\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u9a8c\u8bc1\u534f\u8bae\u89c4\u5219\u3002\u5982\u679c\u5305\u542b\u67d0\u79cd SNARK \u9a8c\u8bc1\uff0c\u8fd0\u884c\u6bd4\u7279\u5e01\u8282\u70b9\u7684\u6210\u672c\u4e0d\u5e94\u663e\u8457\u589e\u52a0\u3002</p> <p>\u76ee\u524d\uff0c\u4e00\u4e2a\u533a\u5757\u53ef\u4ee5\u5305\u542b\u6700\u591a 4 \u5146\u5b57\u8282\u7684\u6570\u636e\uff0c\u9884\u8ba1\u6bcf 10 \u5206\u949f\u627e\u5230\u4e00\u4e2a\u533a\u5757\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u533a\u5757\u6570\u636e\u90fd\u53ef\u4ee5\u586b\u6ee1\u811a\u672c\u548c\u89c1\u8bc1\u6570\u636e\u3002\u533a\u5757\u76ee\u524d\u6700\u591a\u53ef\u4ee5\u5305\u542b 80,000 \u6b21\u7b7e\u540d\u9a8c\u8bc1\u64cd\u4f5c\u3002\u5982\u679c\u6211\u4eec\u6dfb\u52a0\u65b0\u7684\u534f\u8bae\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u8ba1\u5165\u8fd9\u4e2a\u9650\u5236\uff0c\u4f46\u8fd9\u8868\u660e\u4e86\u5f53\u524d\u533a\u5757\u9a8c\u8bc1\u7684\u9650\u5236\u3002\u5e73\u5747\u6bcf\u4e2a\u533a\u5757\u6709 7,000 \u5230 10,000 \u6b21\u7b7e\u540d\u64cd\u4f5c\uff0c\u6211\u7684 2020 \u5e74\u82f1\u7279\u5c14 CPU \u4e0a\u9a8c\u8bc1\u4e00\u4e2a\u6bd4\u7279\u5e01\u533a\u5757\u7684\u7b2c 90 \u767e\u5206\u4f4d\u65f6\u95f4\u662f 3.2 \u79d2\u3002\u5f53\u7136\uff0c\u5f71\u54cd\u533a\u5757\u9a8c\u8bc1\u7684\u56e0\u7d20\u4e0d\u53ea\u662f\u7b7e\u540d\u9a8c\u8bc1\u3002</p> <p></p> <p>\u786c\u4ef6\u94b1\u5305\u901a\u5e38\u7528\u4e8e\u957f\u671f\u5b58\u50a8\uff0c\u5b83\u4eec\u662f\u5e26\u6709\u5c4f\u5e55\u7684\u5c0f\u8bbe\u5907\uff0c\u5b58\u50a8\u5bc6\u94a5\u5e76\u751f\u6210\u7b7e\u540d\u3002\u5b83\u4eec\u901a\u5e38\u5177\u6709\u8f83\u5f31\u7684 CPU\uff0c\u4f8b\u5982 240 MHz \u53cc\u6838 CPU \u548c\u4e00\u4e9b\u5185\u5b58\uff0c\u6709\u4e9b\u66f4\u5f3a\uff0c\u6709\u4e9b\u66f4\u5f31\uff0c\u901a\u5e38\u5728\u7b7e\u7f72\u6bd4\u7279\u5e01\u4ea4\u6613\u65f6\u54cd\u5e94\u975e\u5e38\u8fc5\u901f\u3002</p> <p></p> <p>\u6211\u505a\u4e86\u4e00\u4e2a\u5c0f\u8c03\u67e5\uff0c\u8be2\u95ee\u7528\u6237\u80fd\u63a5\u53d7\u7684\u7b7e\u540d\u8bbe\u5907\u751f\u6210\u8bc1\u660e\u7684\u6700\u957f\u7b49\u5f85\u65f6\u95f4\uff0c\u8bb8\u591a\u4eba\u5b9e\u9645\u4e0a\u53ef\u4ee5\u63a5\u53d7\u66f4\u957f\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u7279\u522b\u662f\u5982\u679c\u80fd\u5e26\u6765\u663e\u8457\u7684\u597d\u5904\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u8ba8\u8bba\u6539\u53d8\u6bd4\u7279\u5e01\u534f\u8bae\uff0c\u4f46\u6709\u5f88\u591a\u4e0d\u9700\u8981\u534f\u8bae\u53d8\u66f4\u7684\u5e94\u7528\u3002\u6211\u60f3\u5f3a\u8c03\u4e00\u4e2a\u4e0e BitVM \u8ba8\u8bba\u76f8\u5173\u7684\u5e94\u7528\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u5176\u4ed6\u5e94\u7528\uff0c\u8bf7\u5728\u6f14\u8bb2\u540e\u8ba8\u8bba\u3002\u6211\u4eec\u73b0\u5728\u8981\u770b\u7684\u662f\u7b80\u6d01\u7684\u94fe\u72b6\u6001\u8bc1\u660e\uff0c\u5b83\u8bc1\u660e\u7ed9\u5b9a\u7684\u5b57\u8282\u6570\u7ec4\u662f\u6709\u6548\u533a\u5757\u94fe\u7684\u533a\u5757\u54c8\u5e0c\u3002</p> <p></p> <p>\u8fd9\u5141\u8bb8\u505a\u4ec0\u4e48\uff1f</p> <p>\u9996\u5148\uff0c\u6709\u4e86\u8fd9\u79cd\u8bc1\u660e\uff0c\u5c31\u4e0d\u9700\u8981\u5bf9\u533a\u5757\u94fe\u4e2d\u7684\u6bcf\u4e2a\u533a\u5757\u8fdb\u884c\u6602\u8d35\u7684\u9a8c\u8bc1\uff0c\u76ee\u524d\u5728\u4e00\u53f0\u5f3a\u5927\u7684\u53f0\u5f0f\u673a\u4e0a\u8ffd\u8d76\u6700\u65b0\u533a\u5757\u94fe\u9700\u8981 5 \u5c0f\u65f6 30 \u5206\u949f\uff0c\u800c\u5728\u6811\u8393\u6d3e\u5927\u5c0f\u7684\u8bbe\u5907\u4e0a\u9700\u8981\u51e0\u5929\u3002</p> <p>\u5176\u6b21\uff0c\u94fe\u72b6\u6001\u8bc1\u660e\u662f\u4e0e BitVM \u6865\u63a5\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002</p> <p>ZeroSync \u56e2\u961f\u63a2\u7d22\u4e86\u8fd9\u4e9b\u8bc1\u660e\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u66f4\u5f31\u7684\u201c\u5934\u94fe\u8bc1\u660e\u201d\uff0c\u8bc1\u660e\u4e86\u533a\u5757\u5934\u7684\u6b63\u786e\u6027\uff0c\u800c\u4e0d\u6d89\u53ca\u533a\u5757\u4e2d\u5305\u542b\u7684\u4ea4\u6613\u3002\u5b83\u8bc1\u660e\u5b58\u5728\u4e00\u6761\u533a\u5757\u5934\u94fe\uff0c\u5e76\u4e14\u6709\u5b83\u58f0\u79f0\u7684\u5de5\u4f5c\u91cf\u8bc1\u660e\u3002</p> <p>\u76ee\u524d\u533a\u5757\u94fe\u7531 840,000 \u4e2a\u533a\u5757\u5934\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5934 80 \u5b57\u8282\uff0c\u533a\u5757\u5934\u94fe\u9700\u8981\u5bf9\u6bcf\u4e2a\u5934\u8fdb\u884c\u53cc\u91cd SHA-256 \u8ba1\u7b97\u3002</p> <p>ZeroSync \u7684\u5b9e\u73b0\u4f7f\u7528 STARKs\uff0c\u8bc1\u660e\u6210\u672c\u7ea6\u4e3a 4000 \u7f8e\u5143\uff0c\u6211\u7684\u6d4f\u89c8\u5668\u9700\u8981 3 \u79d2\u949f\u6765\u9a8c\u8bc1\u3002</p> <p></p> <p>\u4f46\u7531\u4e8e\u6ca1\u6709\u9a8c\u8bc1\u4ea4\u6613\uff0c\u533a\u5757\u5934\u94fe\u8bc1\u660e\u53ea\u80fd\u5728\u5047\u8bbe\u62e5\u6709\u6700\u591a\u5de5\u4f5c\u91cf\u8bc1\u660e\u7684\u533a\u5757\u94fe\u662f\u6709\u6548\u7684\u524d\u63d0\u4e0b\u5c06\u6bd4\u7279\u5e01\u5ba2\u6237\u7aef\u540c\u6b65\u5230\u6700\u65b0\u533a\u5757\u3002\u4e0d\u8fc7\uff0c\u53ef\u80fd\u5b58\u5728\u653b\u51fb\u8005\u6316\u6398\u5305\u542b\u65e0\u6548\u4ea4\u6613\u7684\u533a\u5757\u94fe\uff0c\u4f8b\u5982\u4ece\u65e0\u5230\u6709\u521b\u5efa coin \u7684\u4ea4\u6613\u3002\u521b\u5efa\u8fd9\u6837\u7684\u94fe\u5f88\u6602\u8d35\uff0c\u4e0d\u8fc7\u53ef\u80fd\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u6536\u76ca. \u4f46\u6709\u80fd\u529b\u5b8c\u5168\u9a8c\u8bc1\u534f\u8bae\u7684\u8282\u70b9\u4f1a\u62d2\u7edd\u8fd9\u6837\u7684\u94fe\uff0c\u8fd9\u610f\u5473\u7740\u653b\u51fb\u8005\u5c06\u5931\u53bb\u4ed6\u4eec\u672c\u6765\u53ef\u4ee5\u83b7\u5f97\u7684\u533a\u5757\u5956\u52b1\u3002</p> <p></p> <p>\u7136\u800c\uff0c\u5982\u679c\u5728\u653b\u51fb\u4e2d\u53ef\u4ee5\u7a83\u53d6\u7684\u91d1\u989d\u8db3\u591f\u5927\uff0c\u533a\u5757\u5934\u94fe\u8bc1\u660e\u5c31\u4e0d\u591f\u4e86\u3002\u5982\u679c\u6211\u4eec\u60f3\u8bc1\u660e\u5b8c\u6574\u7684\u94fe\u72b6\u6001\uff0c\u5219\u9700\u8981\u8bc1\u660e\u6bd4\u7279\u5e01\u7684\u6240\u6709\u534f\u8bae\u89c4\u5219\u3002</p> <p>\u8fd9\u5c06\u9700\u8981\u8bc1\u660e\u8d85\u8fc7 secp256k1 \u692d\u5706\u66f2\u7ebf\u4e0a\u7684 ECDSA \u548c Schnorr \u7b7e\u540d\u9a8c\u8bc1\uff0c\u6bcf\u6708\u7ea6 3000 \u4e07\u4e2a\u7b7e\u540d\uff0c\u603b\u8ba1\u7ea6 25 \u4ebf\u4e2a\u7b7e\u540d\u3002</p> <p>\u8fd8\u9700\u8981\u5927\u91cf\u7684 SHA-256 \u54c8\u5e0c\uff0c\u4e00\u4e2a\u975e\u5e38\u7c97\u7565\u7684\u4e0b\u9650\u662f\u533a\u5757\u94fe\u7684\u5927\u5c0f\uff0c\u5373\u6bcf\u6708\u7ea6 7 GB\uff0c\u603b\u8ba1\u8d85\u8fc7 650 GB\uff0c\u4f46\u66f4\u6709\u53ef\u80fd\u662f 2 \u5230 3 \u500d\u3002</p> <p>\u8bc1\u660e\u7cfb\u7edf\u9700\u8981\u4e0e\u6bd4\u7279\u5e01\u534f\u8bae\u89c4\u5219\u7684\u6bcf\u4e2a\u9519\u8bef\u5b8c\u5168\u517c\u5bb9\uff0c\u8fd9\u88ab\u8ba4\u4e3a\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u6bd4\u7279\u5e01\u7684 C++ \u4ee3\u7801\u662f\u89c4\u8303\uff0c\u5177\u6709\u5927\u91cf\u5947\u602a\u7684\u8fb9\u754c\u60c5\u51b5\u3002\u6709\u4e00\u4e9b\u5e93\u5c01\u88c5\u4e86\u534f\u8bae\u7684\u89c4\u5219\uff0c\u53c2\u8003 libbitcoinkernel\u3002</p> <p></p> <p>\u73b0\u5728\u6211\u4eec\u6765\u5230 BitVM\uff0c\u8fd9\u65e0\u7591\u662f\u65e0\u9700\u534f\u8bae\u53d8\u66f4\u5373\u53ef\u5b9e\u73b0 SNARK \u7684\u6700\u4ee4\u4eba\u5174\u594b\u7684\u5e94\u7528\u3002\u6211\u539f\u672c\u8ba1\u5212\u73b0\u5728\u6982\u8ff0 BitVM\uff0c\u4f46\u5c06\u5176\u7559\u7ed9\u4e0b\u4e00\u4e2a\u6f14\u8bb2\uff0cRobin \u4f1a\u66f4\u597d\u5730\u89e3\u91ca\u5b83\u3002\u7b80\u8981\u6982\u8ff0\u4e00\u4e0b\uff0c\u5b83\u4f7f\u5728\u6bd4\u7279\u5e01\u4e0a\u9a8c\u8bc1\u4efb\u4f55\u8ba1\u7b97\u6210\u4e3a\u53ef\u80fd\uff0c\u5b9e\u9645\u4e0a\u80fd\u5426\u5b9e\u73b0\u6709\u7528\u7684\u8ba1\u7b97\u8fd8\u6709\u5f85\u8bc1\u660e\uff0c\u4f46\u4f3c\u4e4e\u53ef\u80fd\u81f3\u5c11\u4f1a\u770b\u5230\u4e00\u4e9b\u6709\u7528\u7684\u8ba1\u7b97\u88ab\u9a8c\u8bc1\u3002</p> <p>BitVM \u514b\u670d\u4e86\u6700\u5927\u811a\u672c\u5927\u5c0f\u9650\u5236\uff0c\u4f7f\u7528\u4e86\u4e24\u79cd\u6280\u672f\u3002</p> <p>\u9996\u5148\uff0c\u5b83\u4f7f\u7528 Taproot Merkle \u6811\u7684\u811a\u672c\u3002</p> <p>\u5176\u6b21\uff0c\u4e3b\u8981\u521b\u65b0\u662f\u542f\u7528\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8de8\u5355\u4e2a\u811a\u672c\u8bbf\u95ee\u7684\u952e\u503c\u5b58\u50a8\uff0c\u4ece\u800c\u5141\u8bb8\u8fde\u63a5\u591a\u4e2a\u811a\u672c\u3002\u6bd4\u7279\u5e01\u534f\u8bae\u4e0d\u5f3a\u5236\u4fdd\u8bc1\u952e\u503c\u5b58\u50a8\u7684\u5b8c\u6574\u6027\uff0cBitVM \u9700\u8981\u4f7f\u7528\u6b3a\u8bc8\u8bc1\u660e\u6765\u68c0\u67e5\u6076\u610f\u7528\u6237\u3002\u5982\u679c\u8bc1\u660e\u8005\u53d1\u5e03\u65e0\u6548\u58f0\u660e\u6216\u9519\u8bef\u4f7f\u7528\u952e\u503c\u5b58\u50a8\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u5e7f\u64ad\u4e00\u7b14\u4ea4\u6613\uff0c\u8868\u660e\u8bc1\u660e\u8005\u884c\u4e3a\u4e0d\u5f53\uff0c\u5e76\u83b7\u5f97\u8bc1\u660e\u8005\u7684\u8d44\u91d1\u3002</p> <p></p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u6bd4\u7279\u5e01\u9762\u4e34\u91cd\u5927\u6311\u6218\uff0c\u5404\u79cd\u4e3e\u63aa\u6b63\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002</p> <p>\u7136\u800c\uff0c\u6539\u53d8\u6bd4\u7279\u5e01\u4f9d\u7136\u56f0\u96be\uff0c\u8fd9\u662f\u597d\u4e8b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u662f\u53bb\u4e2d\u5fc3\u5316\u7684\uff0c\u4f46\u6211\u4eec\u4e5f\u6210\u529f\u5730\u6539\u53d8\u4e86\u6bd4\u7279\u5e01\u3002</p> <p>\u8bb8\u591a\u4eba\u5bf9 SNARK \u5728\u4e0d\u8fdc\u7684\u5c06\u6765\u89e3\u51b3\u4e00\u4e9b\u6311\u6218\u611f\u5230\u5174\u594b\u3002</p> <p>\u5728\u4e2d\u671f\u6216\u957f\u671f\u5185\u83b7\u5f97 SNARK \u7684\u6700\u53ef\u884c\u65b9\u6cd5\uff0c\u4e5f\u8bb8\u662f BitVM \u9700\u8981\u66f4\u591a\u7814\u7a76\u548c\u5f00\u53d1\uff0c\u4ee5\u8bc1\u660e\u5b83\u5728\u5b9e\u8df5\u4e2d\u80fd\u505a\u6709\u7528\u7684\u4e8b\u60c5; \u4ee5\u53ca\u91cd\u65b0\u542f\u7528\u811a\u672c\u64cd\u4f5c\u7801\uff0c\u8fd9\u9700\u8981\u8bc1\u660e\u8fd9\u6837\u505a\u7684\u597d\u5904\u8fdc\u5927\u4e8e\u98ce\u9669\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6311\u6218\uff0c\u8c03\u67e5\u54ea\u4e9b\u7b80\u5355\u7684\u64cd\u4f5c\u7801\u53ef\u4ee5\u5b9e\u9645\u5141\u8bb8\u5728\u811a\u672c\u4e2d\u9a8c\u8bc1 SNARK\uff0c\u6216\u8005 OP_CAT \u6216\u201cGreat Script Restoration\u201d\u53ef\u4ee5\u5b9e\u73b0\u4ec0\u4e48\u3002</p> <p>\u6240\u4ee5\uff0c\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u6709\u8bb8\u591a\u4ee4\u4eba\u5174\u594b\u7684\u673a\u4f1a\u53ef\u4ee5\u4f7f\u8fd9\u79cd\u6280\u672f\u53d8\u5f97\u5b9e\u7528\uff0c\u5f00\u53d1\u51fa\u521b\u65b0\u548c\u6709\u7528\u7684\u5e94\u7528\u3002</p>"},{"location":"2024-06-01/bitvm-script/","title":"BitVM Script","text":""},{"location":"2024-06-23/commutative-algebra/","title":"\u4ea4\u6362\u4ee3\u6570\u5b66\u4e60\u7b14\u8bb0","text":"<p>\u73af(ring) - \u963f\u8d1d\u5c14\u7fa4(\u5c01\u95ed\u6027, \u7ed3\u5408\u5f8b, \u4ea4\u6362\u5f8b, \u5355\u4f4d\u5143, \u9006\u5143) + \u4e58\u6cd5\u5bf9\u52a0\u6cd5\u6ee1\u8db3\u5206\u914d\u5f8b - \u4f8b\u5b50: \u6574\u6570\u73af</p> <p>\u73af\u540c\u6001(ring homomorphism) - \u662f\u4e00\u79cd mapping, \u4ece A \u5230 B, \u6ee1\u8db3:     - f(x + y) = f(x) + f(y), \u53ef\u4ee5\u63a8\u5bfc\u51fa:         - f(x - y) = f(x) - f(y)         - f(0)= 0     - f(xy) = f(x) f(y)     - f(1) = 1</p> <p>\u73af A \u7684\u5b50\u73af(subring) - \u5982\u679c\u73af A \u7684\u5b50\u96c6 S \u5728\u52a0\u6cd5\u548c\u4e58\u6cd5\u8fd0\u7b97\u4e0b\u662f\u5c01\u95ed\u7684\uff0c\u4e14\u5305\u542b A \u7684\u540c\u5143\u7d20(identity element)\uff0c\u5219 S \u662f A \u7684\u5b50\u73af\u3002 - \u4ece S \u5230 A \u6ee1\u8db3\u73af\u540c\u6001</p> <p>\u7406\u60f3(ideal) - a \u662f \u73af A \u7684\u7406\u60f3, \u5982\u679c:     - a \u662f A \u7684\u5b50\u96c6     - a \u662f\u52a0\u6cd5\u5b50\u7fa4     - AI \\(\\subseteq\\) a - \u6240\u4ee5\u5982\u679c x \\(\\in\\) A, y \\(\\in\\) a, \u5219 x * y \\(\\in\\) a - \u4f8b\u5b50     - A \u4e3a\u6574\u6570\u73af     - a = (0). a \u4e2d\u53ea\u6709 0. \u5bf9\u4e8e A \u4e2d\u7684\u4efb\u610f x, x * 0 = 0 \\(\\in\\) a     - a = (1). a \u7b49\u4e8e A. \u5bf9\u4e8e A \u4e2d\u7684\u4efb\u610f x, x * 1 = x \\(\\in\\) a</p> <p>\u5546\u73af - \u7531\u591a\u4e2a\u7b49\u4ef7\u7c7b\u7ec4\u6210, \u662f\u73af A \u901a\u8fc7 a \u8fdb\u884c\u4e86\u7b49\u4ef7\u7c7b\u7684\u5212\u5206\u7684\u7ed3\u679c - \u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u89c6\u4e3a\u5546\u73af\u7684\u4e00\u4e2a\u5143\u7d20 - \u4e3e\u4f8b     - \u5546\u73af \\(\\mathbb{Z/2Z}\\), \u901a\u8fc7\u5bf9 A \u8fdb\u884c\u6a21 2 \u5f97\u5230\u7684     - \u6709\u4e24\u4e2a\u7b49\u4ef7\u7c7b \\([0]\\) \u548c \\([1]\\), \u5206\u522b\u662f\u5076\u6570\u548c\u5947\u6570\u7684\u96c6\u5408</p> <p>\u6838(kernel) - \u662f\u73af\u540c\u6001\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5 - \u662f\u73af A \u4e2d\u7684\u5143\u7d20\u7684\u96c6\u5408, \u8fd9\u4e9b\u5143\u7d20\u90fd\u4f1a\u6620\u5c04\u5230 B \u4e2d\u7684 0 \u5143\u7d20 - \u6027\u8d28: \u6838\u662f\u73af A \u7684\u4e00\u4e2a\u7406\u60f3.  - \u4f8b\u5b50     - \u8003\u8651\u73af\u540c\u6001 \\(\\phi: \\mathbb{Z} \\to \\mathbb{Z}/6\\mathbb{Z}\\)\uff0c\u5b9a\u4e49\u4e3a \\(\u03d5(a)=a \\mod\u2009\u20096\\)     - \u8fd9\u91cc\u6838 ker\u2061(\u03d5) \u662f\u6240\u6709\u88ab\u6620\u5c04\u5230 0 \u7684\u6574\u6570\u7684\u96c6\u5408\uff0c\u5373\u6240\u6709 6 \u7684\u500d\u6570     - \u4e5f\u53ef\u4ee5\u8bf4 \\(\\mathbb{nZ}\\) \u662f\u73af\u540c\u6001 \u03d5 \u7684 kernel</p> <p>\u50cf(image) - \u662f\u73af\u540c\u6001\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5 - \u662f\u4e00\u7ec4\u8f93\u51fa\u5143\u7d20\u7684\u96c6\u5408, \u8fd9\u4e9b\u5143\u7d20\u6765\u81ea\u4e8e\u73af\u540c\u6001\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u8f93\u51fa\u7ed3\u679c - \u6027\u8d28: \u50cf\u662f\u73af B \u7684\u4e00\u4e2a\u5b50\u73af - \u4f8b\u5b50:      - \u8003\u8651\u73af\u540c\u6001 \\(\\phi: \\mathbb{Z} \\to \\mathbb{Z}/6\\mathbb{Z}\\)\uff0c\u5b9a\u4e49\u4e3a \\(\u03d5(a)=a \\mod\u2009\u20096\\)     - \u8fd9\u91cc\u50cf Im\u2061(\u03d5)\\\u662f\u901a\u8fc7\u53d6\u6a21 6 \u8fd0\u7b97\u5f97\u5230\u7684\u6240\u6709\u4e0d\u540c\u7684\u4f59\u6570\u96c6\u5408, \u5373 { 0 , 1 , 2 , 3 , 4 , 5 } </p> <p>\u96f6\u9664\u5b50(zero divisors) - x \u662f\u73af A \u7684\u96f6\u9664\u5b50, \u5982\u679c: y \\(\\neq\\) 0 \u4e14 xy = 0 - \u96f6\u9664\u5b50\u662f\"\u4e0d\u597d\"\u7684\u5143\u7d20</p> <p>\u6574\u73af\uff08integral domain\uff09 - \u6ca1\u6709\u96f6\u9664\u5b50\u7684\u73af\u79f0\u4e3a\u6574\u73af - \u5373\u5982\u679c xy = 0, \u5219 x=0 \u6216 y=0</p> <p>\u5e42\u96f6\u5143\uff08Nilpotent Elements\uff09 - A \u662f\u73af Q \u7684\u5e42\u96f6\u5143, \u5982\u679c: n &gt; 0 \u4e14 x^n = 0 - \u5e42\u96f6\u5143\u662f\u96f6\u56e0\u5b50, \u800c\u96f6\u56e0\u5b50\u4e0d\u4e00\u5b9a\u662f\u5e42\u96f6\u5143 - \\(k[x] / x^4\\) \u4e2d\u7684 x \u662f Nilpotent - \u662f\"\u4e0d\u597d\"\u7684\u5143\u7d20</p> <p>\u5355\u4f4d\u5143\uff08Units\uff09 - \u5355\u4f4d\u5143\u662f\u80fd\u591f\u6574\u9664 1 \u7684\u5143\u7d20, \u5373 x \u662f\u73af A \u7684\u5355\u4f4d\u5143, \u5982\u679c: xy = 1 - y \u53ef\u4ee5\u8868\u793a\u4e3a \\(y = x^{-1}\\) - A \u4e2d\u7684\u5355\u4f4d\u5143\u5f62\u6210\u4e00\u4e2a\uff08\u4e58\u6cd5\uff09\u963f\u8d1d\u5c14\u7fa4\u3002 - \u662f\"\u597d\"\u7684\u5143\u7d20</p> <p>\u5927\u591a\u6570\u7684\u5143\u7d20\u65e2\u4e0d\u662f Nilpotent \u4e5f\u4e0d\u662f Unit</p> <p>\u4e3b\u7406\u60f3 - \u4e3b\u7406\u60f3 (a) \u5305\u542b\u6240\u6709\u5f62\u5f0f\u4e3a ra \u7684\u5143\u7d20\uff0c\u5176\u4e2d r \u662f\u73af A \u4e2d\u7684\u4efb\u610f\u5143\u7d20 - \u4f8b\u5b50     - \u8003\u8651\u6574\u6570\u73af \\(\\mathbb{Z}\\)\uff0c\u9009\u53d6\u5176\u4e2d\u7684\u5143\u7d20 a = 2     - \u7531 2 \u751f\u6210\u7684\u4e3b\u7406\u60f3\u662f (2)     - \u8fd9\u4e2a\u4e3b\u7406\u60f3\u5305\u62ec\u6240\u6709 2 \u7684\u6574\u6570\u500d\u6570\u7684\u6570 - \u5982\u679c x \u662f\u5355\u4f4d\u5143, \u5219\u8868\u793a\u4e3a (1), \u5373 A \u672c\u8eab, (1) = A - 0 \u7406\u60f3 (0) \u901a\u5e38\u5c31\u7528 0 \u6765\u8868\u793a</p> <p>\u6bcf\u4e2a field \u662f\u4e00\u4e2a\u6574\u73af, \u4f46\u6574\u73af\u4e0d\u4e00\u5b9a\u662f field</p> <p>field \u91cc\u9762\u662f\u6ca1\u6709 substructure \u7684, \u6ca1\u6709 ideal(\u9664\u4e86 (0) \u548c (1))</p> <p>\u547d\u9898 1.2 \u8bf4\u660e\u4e86\u5728\u4e00\u4e2a\u73af A \u4e2d\uff0c\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\u662f\u7b49\u4ef7\u7684\uff1a</p> <ol> <li>A \u662f\u4e00\u4e2a\u57df\uff1b</li> <li>A \u4e2d\u552f\u4e00\u7684\u7406\u60f3\u662f (0) \u548c (1)</li> <li>A \u5230\u4efb\u610f\u975e\u96f6\u73af B \u7684\u540c\u6001\u90fd\u662f\u5355\u5c04\u3002</li> </ol> <p>\u8bc1\u660e 1 -&gt; 2: \u82e5 A \u662f\u4e00\u4e2a\u57df\uff0c\u90a3\u4e48 A \u4e2d\u552f\u4e00\u7684\u7406\u60f3\u662f (0) \u548c (1) - (0) \u662f\u73af A \u7684\u7406\u60f3, \u56e0\u4e3a\u5bf9\u4e8e\u4efb\u4f55\u7684 y \\(\\in\\) A, y * 0 = 0  - \u5982\u679c a \u662f A \u4e2d\u7684\u975e 0 \u7406\u60f3, \u7531\u4e8e y \\(\\in\\) A,  x \\(\\in\\) a,  xy \\(\\in\\) a, \u4e14\u5b58\u5728 xy = 1(\u56e0\u4e3a A \u662f\u57df), \u5219 xy = 1 \\(\\in\\) a - \u5982\u679c 1 \\(\\in\\) a, \u5219\u5bf9\u4e8e\u4efb\u4f55\u7684  z \\(\\in\\) A, 1 \\(\\cdot\\) z = z \\(\\in\\) a, \u5219 a \u5305\u542b\u73af A \u7684\u6240\u6709\u5143\u7d20, \u6240\u4ee5 a = (1) - \u6240\u4ee5\u7ed3\u8bba\u6210\u7acb</p> <p>\u8bc1\u660e 2 -&gt; 3: \u5982\u679cA \u4e2d\u552f\u4e00\u7684\u7406\u60f3\u662f (0) \u548c (1), \u5219A \u5230\u4efb\u610f\u975e\u96f6\u73af B \u7684\u540c\u6001\u90fd\u662f\u5355\u5c04 - \u7531\u4e8e ker(\u03d5) \u662f A \u7684\u7406\u60f3, \u6240\u4ee5 ker(\u03d5) \u53ea\u80fd\u662f (0) \u6216\u8005 (1) - \u5047\u8bbe ker(\u03d5)  = (1)     - \u5219 A \u7684\u6240\u6709\u5143\u7d20\u90fd\u6620\u5c04\u5230 B \u4e2d\u7684 0, \u5219 B \u53ea\u6709 0, \u4e0e\u5047\u8bbe\u4e0d\u4e00\u81f4, \u6240\u4ee5\u53ea\u80fd ker(\u03d5)  = (0) - \u5355\u5c04\u5b9a\u4e49     - \u4e00\u4e2a\u6620\u5c04 \u03d5: A -&gt; B \u662f\u5355\u5c04\u7684, \u5f53\u4e14\u4ec5\u5f53:     - \u5bf9\u6240\u6709 a, b \\(\\in\\) A, \u5982\u679c \u03d5(a) = \u03d5(b), \u5219 a = b - \u5f53 ker(\u03d5)  = (0)     - \u7531\u4e8e \u03d5 \u662f\u73af\u540c\u6001, \u5219 \u03d5(a - b)  = \u03d5(a) - \u03d5(b) = \\(0_B\\)     - \u5219 \u03d5(a - b) \\(\\in\\) ker(\u03d5)     - \u7531\u4e8e ker(\u03d5) = { \\(0_A\\) }, \u5219 a - b = \\(0_A\\), \u5219 a = b     - \u6ee1\u8db3\u5355\u5c04\u7684\u6761\u4ef6</p> <p>\u8bc1\u660e 3 -&gt; 1: \u5982\u679cA \u5230\u4efb\u610f\u975e\u96f6\u73af B \u7684\u540c\u6001\u90fd\u662f\u5355\u5c04, \u5219 A \u662f\u4e00\u4e2a\u57df - \u5229\u7528\u53cd\u8bc1\u6cd5, \u5047\u8bbe A \u4e0d\u662f\u4e00\u4e2a field, \u5219\u5b58\u5728\u4e00\u4e2a x \u6ee1\u8db3 x \u4e0d\u4e3a unit  - \u5219\u53ef\u4ee5\u5229\u7528 x \u6784\u9020\u4e00\u4e2a\u5546\u73af B = A/(x),  - \u4ece\u73af A \u5230\u5546\u73af B \u662f\u4e00\u4e2a\u81ea\u7136\u7684\u6620\u5c04, \u800c\u4e14\u6bcf\u4e2a a \\(\\in\\) A \u5728 B \u4e2d\u90fd\u4e3a 0 - \u8fd9\u6837\u5c31\u4e0d\u6ee1\u8db3\u5355\u5c04\u7684\u521d\u59cb\u6761\u4ef6 - \u6240\u4ee5\u5047\u8bbe\u4e0d\u6210\u7acb, \u6240\u4ee5 A \u662f\u4e00\u4e2a field</p> <p>\u7d20\u7406\u60f3(prime ideal) - \u5728\u73af A \u4e2d, \u4e00\u4e2a\u7406\u60f3 p \u88ab\u6210\u4e3a\u7d20\u7406\u60f3, \u5982\u679c\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6     - p \\(\\neq\\) (1) (\u5373 p \u4e0d\u662f\u6574\u4e2a\u6362)     - \u5982\u679c xy \\(\\in\\) p, \u5219 x \\(\\in\\) p \u6216 y \\(\\in\\) p </p> <p>prime ideal \u53ef\u4ee5\u5207\u4e1c\u897f</p> <p>p \u662f\u7d20\u7406\u60f3 &lt;=&gt; A/p \u662f\u6574\u73af(integral domain) - \u5982\u679c p \u662f\u7d20\u7406\u60f3     - \u5982\u679c \\(\\bar{x} \\cdot \\bar{y} = 0\\),  \u5219 \\(\\bar{xy} = 0\\), \u5219\u610f\u5473\u7740\u5728 A/p \u4e2d xy \\(\\in\\) p, \u56e0\u4e3a 0 \u5728 A/p \u4e2d\u610f\u5473\u7740 p \u4e2d\u7684\u6240\u6709\u5143\u7d20     - \u56e0\u4e3a\u7d20\u7406\u60f3\u7684\u6027\u8d28: \u5982\u679c xy = p, \u5219 x \\(\\in\\) p \u6216 y \\(\\in\\) p, \u6240\u4ee5 x=0 \u6216 y=0     - \u6240\u4ee5 A/p \u662f\u6574\u73af - \u5982\u679c A/p \u662f\u6574\u73af(integral domain)     - \u5047\u8bbe p \u4e0d\u662f\u7d20\u7406\u60f3     - \u5219\u5b58\u5728 xy  \\(\\in\\) p, \u5176\u4e2d x \\(\\notin\\) p \u4e14 y \\(\\notin\\) p     - \u5219\u5728 A/p \u4e2d  \\(\\bar{x} \\neq 0\\) \u4e14 \\(\\bar{y} \\neq 0\\)     - \u6240\u4ee5\u5728 A/p \u4e2d, \u5bf9\u4e8e \\(\\bar{x} \\cdot \\bar{y} = 0\\), \u610f\u5473\u7740  \\(\\bar{x}\\) \u6216  \\(\\bar{y}\\) \u662f\u96f6\u56e0\u5b50     - \u8fd9\u4e0eA/p \u662f\u6574\u73af\u7684\u5047\u8bbe\u77db\u76fe     - \u6240\u4ee5 p \u662f\u7d20\u7406\u60f3</p> <p>\u8fd9\u4e2a\u5b9a\u4e49\u4e4b\u6240\u4ee5\u91cd\u8981\uff0c\u662f\u56e0\u4e3a\u5b83\u6355\u6349\u4e86\u7d20\u6570\u5728\u6574\u6570\u73af\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u6027\u8d28\uff0c\u5e76\u5c06\u5176\u63a8\u5e7f\u5230\u4e00\u822c\u7684\u73af\u3002\u5728\u6574\u6570\u73af \\(\\mathbb{Z}\\) \u4e2d\uff0c\u7d20\u6570\u7684\u4e00\u4e2a\u57fa\u672c\u6027\u8d28\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u7d20\u6570 p \u80fd\u6574\u9664\u4e24\u4e2a\u6574\u6570\u7684\u4e58\u79ef\uff0c\u90a3\u4e48 p \u81f3\u5c11\u80fd\u6574\u9664\u5176\u4e2d\u7684\u4e00\u4e2a\u6574\u6570\u3002\u5373\uff0c\u5982\u679c p\u2223ab\uff0c\u90a3\u4e48 p\u2223a \u6216 p\u2223b\u3002\u8fd9\u4e00\u6027\u8d28\u662f\u7d20\u6570\u7684\u91cd\u8981\u7279\u5f81\u4e4b\u4e00\uff0c\u5b83\u4fdd\u8bc1\u4e86\u7d20\u6570\u5728\u6570\u8bba\u4e2d\u7684\u5206\u89e3\u552f\u4e00\u6027\u3002</p> <p>\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u7d20\u7406\u60f3\u7684\u5b9a\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u907f\u514d\u96f6\u56e0\u5b50\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7684\u5f15\u5165\u3002</p> <p>\u6700\u5927\u7406\u60f3(maximal ideal) - \u7406\u60f3 m \u662f A \u7684\u6700\u5927\u7406\u60f3, \u5982\u679c:     - m \u4e0d\u662f (1)     - \u4e0d\u5b58\u5728 a, \u4f7f\u5f97 m \\(\\subset\\) a \\(\\subset\\) (1) - m \u662f\u6700\u5927\u7406\u60f3 &lt;=&gt; A/m \u662f field     - m \u662f\u6700\u5927\u7406\u60f3 =&gt; A/m \u662f field         - \u5982\u679c\u5b58\u5728\u7406\u60f3 a, \u4f7f\u5f97 m \\(\\subseteq\\) a \\(\\subseteq\\) (1)         - \u5219 a \u53ea\u53ef\u80fd\u662f - \u5bf9\u5e94\u7684\u51e0\u4f55\u4f53\u5c31\u662f\u4e00\u4e2a\u70b9 - \u51fd\u6570 f mod x-z \u5f97\u5230\u7684\u7ed3\u679c\u662f f \u5728 z \u70b9\u7684\u6c42\u503c</p> <p>\u81ea\u5df1\u4e3e\u4f8b\u5b50\u7684\u8bdd: \u53ef\u4ee5\u7528\u591a\u9879\u5f0f\u73af, \u56e0\u4e3a\u591a\u9879\u5f0f\u73af\u5bf9\u5e94\u7684\u662f\u6574\u4e2a\u7a7a\u95f4\u4e0a\u7684\u51fd\u6570, \u6574\u6570\u73af\u662f\u6bd4\u8f83\u5dee\u7684\u7ed3\u6784</p> <p>\u6211\u4eec\u672a\u6765\u7814\u7a76\u7684\u4e1c\u897f\u90fd\u662f\u548c\u51e0\u4f55\u4f53\u76f8\u5173\u7684, \u6216\u8005\u662f\u591a\u9879\u5f0f\u96f6\u70b9\u6784\u6210\u7684\u51e0\u4f55\u4f53</p> <p>\u8bfe\u540e\u9898\u91cc\u5927\u591a\u6570\u90fd\u662f\u591a\u9879\u5f0f\u73af</p> <p>\u540e\u9762\u4e3b\u8981\u5173\u5fc3\u591a\u9879\u5f0f\u73af\u548c\u5546\u73af\u5c31\u591f\u4e86</p>"},{"location":"2024-09-03/Drawing-root-of-unity-complex-n4.excalidraw/","title":"Drawing root of unity complex n4.excalidraw","text":"<p>\u26a0  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 You can decompress Drawing data with the command palette: 'Decompress current Excalidraw file'. For more info check in plugin settings under 'Saving'</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n4.excalidraw/#excalidraw-data","title":"Excalidraw Data","text":"","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n4.excalidraw/#text-elements","title":"Text Elements","text":"<p>2\u03c0/4 ^MA6dv8iE</p> <p>z1 = cos(0) + isin(0)= 1 ^g9BTpIS5</p> <p>z2 = cos(2\u03c0/4) + isin(2\u03c0/4) ^rphbzXKP</p> <p>z3 = cos(4\u03c0/4) + isin(4\u03c0/4) ^VyxoPZX9</p> <p>z4 = cos(6\u03c0/4) + isin(6\u03c0/4) ^HFKpy1sp</p> <p>%%</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n4.excalidraw/#drawing","title":"Drawing","text":"<p><pre><code>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\n</code></pre> %%</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n8.excalidraw/","title":"Drawing root of unity complex n8.excalidraw","text":"<p>\u26a0  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 You can decompress Drawing data with the command palette: 'Decompress current Excalidraw file'. For more info check in plugin settings under 'Saving'</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n8.excalidraw/#excalidraw-data","title":"Excalidraw Data","text":"","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n8.excalidraw/#text-elements","title":"Text Elements","text":"<p>\u03c0/4 ^MA6dv8iE</p> <p>z1 = cos(0) + isin(0)= 1 ^g9BTpIS5</p> <p>z2 = cos(\u03c0/4) + isin(\u03c0/4) ^rphbzXKP</p> <p>z5 = cos(4\u03c0/4) + isin(4\u03c0/4) ^VyxoPZX9</p> <p>z7 = cos(6\u03c0/4) + isin(6\u03c0/4) ^HFKpy1sp</p> <p>z3 = cos(2\u03c0/4) + isin(2\u03c0/4) ^GpDFQo65</p> <p>z4 = cos(3\u03c0/4) + isin(3\u03c0/4) ^j2kYxYAC</p> <p>z6 = cos(5\u03c0/4) + isin(5\u03c0/4) ^Ba6x6c3L</p> <p>z8 = cos(7\u03c0/4) + isin(7\u03c0/4) ^jImyCbWD</p> <p>%%</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-complex-n8.excalidraw/#drawing","title":"Drawing","text":"<p><pre><code>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=\n</code></pre> %%</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-group-n16.excalidraw/","title":"Drawing root of unity group n16.excalidraw","text":"<p>\u26a0  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. \u26a0 You can decompress Drawing data with the command palette: 'Decompress current Excalidraw file'. For more info check in plugin settings under 'Saving'</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-group-n16.excalidraw/#excalidraw-data","title":"Excalidraw Data","text":"","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-group-n16.excalidraw/#text-elements","title":"Text Elements","text":"<p>1 ^g9BTpIS5</p> <p>-13(4) ^HFKpy1sp</p> <p>-9(8) ^Ba6x6c3L</p> <p>-15(2) ^jImyCbWD</p> <p>9 ^jGjFeFFm</p> <p>13 ^eF6p1bwJ</p> <p>15 ^G3Kr5dPa</p> <p>-1(16) ^jOJkBx0N</p> <p>11 ^XqmCNpPo</p> <p>5 ^3zfNNTeN</p> <p>10 ^3reP4b0Z</p> <p>3 ^mPm0OFSo</p> <p>-3(14) ^jSo0CpMg</p> <p>-10(7) ^EvejqqWD</p> <p>-5(12) ^y6lpDHiJ</p> <p>-11(6) ^kAg5X55Q</p> <p>%%</p>","tags":["excalidraw"]},{"location":"2024-09-03/Drawing-root-of-unity-group-n16.excalidraw/#drawing","title":"Drawing","text":"<p><pre><code>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\n\nzoEYEwrIeyGchZutWTgAu0LDrBAW4AeAgAB4EAA=\n</code></pre> %%</p>","tags":["excalidraw"]},{"location":"2024-09-03/roots-of-unity/","title":"Roots of Unity: An Introduction","text":""},{"location":"2024-09-03/roots-of-unity/#what-is-a-root-of-unity","title":"What is a Root of Unity?","text":"<p>A root of unity is a complex number \\(z\\) that satisfies the equation:</p> \\[ z^n = 1 \\] <p>where \\(n &gt; 0\\). The goal is to find all \\(z\\) values such that, when raised to the power of \\(n\\), they equal 1.</p>"},{"location":"2024-09-03/roots-of-unity/#roots-of-unity-in-the-complex-field","title":"Roots of Unity in the Complex Field","text":"<p>In the complex field, we can use Euler's formula to find roots of unity. Euler\u2019s formula states:</p> \\[ e^{ix} = \\cos(x) + i\\sin(x) \\] <p>For \\(x = 2\\pi\\), we get:</p> \\[ e^{i2\\pi} = \\cos(2\\pi) + i\\sin(2\\pi) = 1 \\] <p>This means that \\(e^{i2\\pi}\\), \\(e^{i4\\pi}\\), and \\(e^{i6\\pi}\\) all equal 1, as they correspond to rotations by full circles on the complex plane.</p>"},{"location":"2024-09-03/roots-of-unity/#finding-the-n-th-roots-of-unity","title":"Finding the \\(n\\)-th Roots of Unity","text":"<p>To find all the \\(n\\)-th roots of unity, we generalize using Euler's formula. The equation \\(z^n = 1\\) can be written as:</p> \\[ z = e^{2k\\pi i/n} = \\cos\\left(\\frac{2k\\pi}{n}\\right) + i\\sin\\left(\\frac{2k\\pi}{n}\\right) \\] <p>where \\(k = 0, 1, 2, \\dots, n-1\\). There are \\(n\\) distinct roots of unity because after \\(k = n-1\\), the values cycle back to previously found roots.</p>"},{"location":"2024-09-03/roots-of-unity/#visualizing-roots-on-the-unit-circle","title":"Visualizing Roots on the Unit Circle","text":"<p>Each root divides the unit circle into \\(n\\) equal parts. For example:</p> <ul> <li>For \\(n = 4\\): The roots of \\(z^4 = 1\\) divide the circle into four equal sections, each separated by an angle of \\(\\pi/2\\) radians.</li> <li>For \\(n = 8\\): The roots of \\(z^8 = 1\\) divide the circle into eight equal sections, each separated by an angle of \\(\\pi/4\\) radians.</li> </ul> <p>Here is a diagram that illustrates the positions of the roots for \\(n = 4\\):</p> <p></p> <p>Here is a diagram that illustrates the positions of the roots for \\(n = 8\\):</p> <p></p>"},{"location":"2024-09-03/roots-of-unity/#roots-of-unity-in-finite-fields","title":"Roots of Unity in Finite Fields","text":"<p>The concept of roots of unity also extends to finite fields. In a finite field, every nonzero element is a root of unity. For example, consider the finite field \\(F_{17} = \\{0, 1, 2, 3, \\dots, 16\\}\\). In this field, the equation:</p> \\[ z^{16} \\equiv 1 \\mod 17 \\] <p>is satisfied by all nonzero elements of \\(F_{17}\\).</p> <p></p>"},{"location":"2024-09-03/roots-of-unity/#primitive-root-of-unity","title":"Primitive Root of Unity","text":"<p>In a finite field, the primitive root of unity is the smallest number that can generate all nonzero elements of the field when raised to successive powers. Let\u2019s find the primitive root in \\(F_{17}\\):</p> <ul> <li>For \\(a = 1\\): The powers of 1 just give \\(\\{1\\}\\), so 1 is not a primitive root.</li> <li>For \\(a = 2\\): The powers of 2 modulo 17 give \\(\\{2, 4, 8, 16, 15, 13, 7, 1\\}\\), but this does not cover all the nonzero elements.</li> <li>For \\(a = 3\\): The powers of 3 modulo 17 generate all nonzero elements of \\(F_{17}\\), so 3 is a primitive root.</li> </ul>"},{"location":"2024-09-03/roots-of-unity/#conclusion","title":"Conclusion","text":"<p>By using Euler\u2019s formula in the complex field and modular arithmetic in finite fields, we can find the roots of unity and primitive roots of unity. The concept is crucial in fields like number theory, cryptography.</p>"},{"location":"2024-09-11/field-extensions/","title":"Field Extensions","text":"<p>Thanks the inputs from Guo Yu, Kurt Pan, Wangyao, Xiaoxiong, Jade, Xiaoxue, Miranda.</p> <p></p> <p>Field extensions refer to the process of adding new elements to an existing field, known as the base field. This not only expands the field but allows us to perform arithmetic operations with the new elements. For example, consider adding the element \\(\\sqrt{2}\\) to the field of rational numbers \\(\\mathbb{Q}\\). Once \\(\\sqrt{2}\\) is introduced, we can perform various calculations such as:</p> \\[ -\\sqrt{2}, \\frac{3}{\\sqrt{2}}, 5 + \\sqrt{2}, \\left(\\sqrt{2} + \\frac{3}{2}\\right)^3, \\frac{\\sqrt{2}}{3 + \\sqrt{2}} \\] <p>These expressions can be simplified as follows:</p> \\[ \\frac{3}{\\sqrt{2}} = \\frac{3}{2} \\sqrt{2} \\] \\[ \\left(\\sqrt{2} + \\frac{3}{2}\\right)^3 = \\left(\\sqrt{2} + \\frac{3}{2}\\right)^2 \\left(\\sqrt{2} + \\frac{3}{2}\\right) = \\frac{99}{8} + \\frac{35}{4} \\sqrt{2} \\] \\[ \\frac{\\sqrt{2}}{3 + \\sqrt{2}} = \\frac{\\sqrt{2}(3 - \\sqrt{2})}{(3 + \\sqrt{2})(3 - \\sqrt{2})} = -\\frac{2}{7} + \\frac{3}{7} \\sqrt{2} \\] <p>Notice that the results all follow the structure \\(a + b\\sqrt{2}\\), where \\(a, b \\in \\mathbb{Q}\\). Hence, this extension field can be represented as:</p> \\[ E = \\{a + b\\sqrt{2} \\mid a, b \\in \\mathbb{Q}\\} \\] <p>Thus, \\(\\mathbb{Q} \\subset E \\subset \\mathbb{R} \\subset \\mathbb{C}\\).</p> <p>You might be more familiar with the field of complex numbers \\(\\mathbb{C}\\), where each element can be written as \\(a + bi\\), with \\(a, b \\in \\mathbb{R}\\), and \\(i\\) being a new element introduced into the base field \\(\\mathbb{R}\\). Similarly, \\(\\sqrt{2}\\) and \\(i\\) play analogous roles, each introducing a new symbol to their respective base fields, forming extension fields. This process is at the heart of field extensions.</p>"},{"location":"2024-09-11/field-extensions/#finite-fields-and-their-extensions","title":"Finite Fields and Their Extensions","text":"<p>Next, consider how to extend finite fields. Take the finite field \\(\\mathbb{Z}_2 = \\{0, 1\\}\\). If we introduce \\(\\sqrt{2}\\) into this field, using the same method as above, the resulting extension field would be:</p> \\[ E = \\{a + b\\sqrt{2} \\mid a, b \\in \\mathbb{Z}_2\\} \\] <p>Since \\(a\\) and \\(b\\) can only be \\(0\\) or \\(1\\), we get:</p> \\[ E = \\{0, 1, \\sqrt{2}, 1 + \\sqrt{2}\\} \\] <p>Similarly, if we introduce an element like \\(i\\) or any element of symbol \\(t\\), the extension becomes:</p> \\[ E = \\{0, 1, t, 1 + t\\} \\] <p>This method of extending fields works, but there is a more general approach that always succeeds: using irreducible polynomials.</p>"},{"location":"2024-09-11/field-extensions/#field-extensions-using-irreducible-polynomials","title":"Field Extensions Using Irreducible Polynomials","text":"<p>An irreducible polynomial is one that has no roots in the base field. For instance, \\(x^2 - 2 = 0\\) has no roots in \\(\\mathbb{Q}\\), but it does have roots in \\(\\mathbb{R}\\) and \\(\\mathbb{C}\\), where the roots are \\(\\pm \\sqrt{2}\\). This is precisely the process of introducing new elements into the base field.</p> <p>The reason for using irreducible polynomials is that they ensure the introduction of a new element. If a polynomial were reducible, its roots would already exist in the base field, failing to extend it.</p> <p>To extend a field using an irreducible polynomial, we use a quotient:</p> \\[ E = F[t]/\\langle p(t) \\rangle \\] <p>Where \\(p(t)\\) is an irreducible polynomial over \\(F\\). \\(F[t]\\) is all possible polynomial rings over \\(F\\). This quotient construction ensures that \\(p(t)\\) has a root in the new field \\(E\\).</p> <p>You can think \\(p(t)\\) here as number 2 in \\(\\mathbb{Z}_2\\), which is 0, so over \\(E\\) we will get \\(p(t) = 0\\).</p> <p>We will use an example to explain how this works.</p>"},{"location":"2024-09-11/field-extensions/#example-extending-mathbbz_2","title":"Example: Extending \\(\\mathbb{Z}_2\\)","text":"<p>Let\u2019s take \\(F = \\mathbb{Z}_2 = \\{0, 1\\}\\), and consider the irreducible polynomial \\(p(t) = t^2 + t + 1\\). We check whether \\(p(t)\\) has roots in \\(\\mathbb{Z}_2\\):</p> \\[ p(0) = 1 \\neq 0, \\quad p(1) = 3 \\mod 2 = 1 \\neq 0 \\] <p>Since \\(p(t)\\) has no roots in \\(\\mathbb{Z}_2\\), we claim that the quotient \\(E = \\mathbb{Z}_2[t]/\\langle p(t) \\rangle\\) is an extension of \\(\\mathbb{Z}_2\\). This extension field \\(E\\) includes a root of \\(p(t)\\), because \\(p(t) = 0\\) in this quotient.</p> <p>In \\(E\\), we have the relation:</p> \\[ 1 + t + t^2 = 0 \\] <p>We can now express powers of \\(t\\) in terms of lower powers:</p> \\[ t^2 = 1 + t \\] <p>This allows us to simplify higher powers, such as:</p> \\[ t^3 = t^2 \\cdot t = (1 + t) \\cdot t = t + t^2 = t + (1 + t) = 1 \\] <p>Thus, the elements of \\(E\\) can be represented as:</p> \\[ E = \\{0, 1, t, 1 + t\\} \\] <p></p> <p>This matches the result we derived using the first method.</p>"},{"location":"2024-09-11/field-extensions/#introducing-more-elements","title":"Introducing More Elements","text":"<p>Consider the irreducible polynomial \\(p(t) = t^3 + t + 1\\) over \\(\\mathbb{Z}_2\\). Checking for roots:</p> <p>$$</p> <p>p(0) = 1 \\neq 0, \\quad p(1) = 3 \\mod 2 = 1 \\neq 0</p> <p>$$</p> <p>Since \\(p(t)\\) has no roots in \\(\\mathbb{Z}_2\\), we again form the quotient \\(E = \\mathbb{Z}_2[t]/\\langle p(t) \\rangle\\), which introduces a root of \\(p(t)\\).</p> <p>In \\(E\\), the relation becomes:</p> \\[ 1 + t + t^3 = 0 \\] <p>Thus, we can simplify powers of \\(t\\):</p> \\[ t^3 = 1 + t \\] <p>By reducing higher powers of \\(t\\), we eventually obtain the eight elements of the extension field:</p> \\[ E = \\{0, 1, t, 1 + t, t^2, 1 + t^2, t + t^2, 1 + t + t^2\\} \\] <p> Each element can be written as a linear combination of \\(\\{1, t, t^2\\}\\). So these examples demonstrate the usefulness of irreducible polynomials in constructing extension field.</p>"},{"location":"2024-09-11/field-extensions/#conclusion","title":"Conclusion","text":"<p>The quotient \\(E = F[t]/\\langle p(t) \\rangle\\) defines a field extension of \\(F\\) that contains a root of the irreducible polynomial \\(p(t)\\). This method provides a systematic way to extend fields.</p>"},{"location":"2024-09-23/fft-code/","title":"FFT Code","text":""},{"location":"2024-09-23/fft-code/#recursion-version","title":"Recursion version","text":"<pre><code>use num::complex::Complex;\n\nuse std::f64::consts::PI;\n\n\n\n// Base function for both FFT and IFFT\n\nfn fft_base(coeffs: Vec&lt;Complex&lt;f64&gt;&gt;, is_ifft: bool) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; {\n\nlet n = coeffs.len();\n\nif n == 1 {\n\nreturn coeffs;\n\n}\n\n\n\n// Split the input into even and odd indices\n\nlet even_coeffs: Vec&lt;Complex&lt;f64&gt;&gt; = coeffs.iter().step_by(2).cloned().collect();\n\nlet odd_coeffs: Vec&lt;Complex&lt;f64&gt;&gt; = coeffs.iter().skip(1).step_by(2).cloned().collect();\n\n\n\n// Calculate the twiddle factor (omega)\n\n// For IFFT, use the conjugate of the normal FFT twiddle factor\n\nlet theta = if is_ifft { -2.0 * PI / n as f64 } else { 2.0 * PI / n as f64 };\n\nlet omega = Complex::from_polar(1.0, theta);\n\n\n\n// Recursive calls for even and odd parts\n\nlet y_even = fft_base(even_coeffs, is_ifft);\n\nlet y_odd = fft_base(odd_coeffs, is_ifft);\n\n\n\n// Combine the results using the butterfly operation\n\nlet mut y = vec![Complex::new(0.0, 0.0); n];\n\nlet mut current_omega = Complex::new(1.0, 0.0);\n\nfor k in 0..n/2 {\n\nlet t = current_omega * y_odd[k];\n\ny[k] = y_even[k] + t;\n\ny[k + n/2] = y_even[k] - t;\n\ncurrent_omega *= omega;\n\n}\n\ny\n\n}\n\n\n\n// Fast Fourier Transform (FFT) function\n\nfn fft(coeffs: Vec&lt;Complex&lt;f64&gt;&gt;) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; {\n\nfft_base(coeffs, false)\n\n}\n\n\n\n// Inverse Fast Fourier Transform (IFFT) function\n\nfn ifft(coeffs: Vec&lt;Complex&lt;f64&gt;&gt;) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; {\n\nlet n = coeffs.len() as f64;\n\n// Perform IFFT and normalize the result by dividing by n\n\nfft_base(coeffs, true).iter().map(|x| x / n).collect()\n\n}\n\n\n\n#[cfg(test)]\n\nmod tests {\n\nuse super::*;\n\n\n\n#[test]\n\nfn test_fft_ifft() {\n\n// create input data\n\nlet input: Vec&lt;Complex&lt;f64&gt;&gt; = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0]\n\n.into_iter()\n\n.map(|x| Complex::new(x, 0.0))\n\n.collect();\n\n\n\n// execute FFT\n\nlet fft_result = fft(input.clone());\n\nprintln!(\"fft_result: {:?}\", fft_result);\n\n// execute IFFT\n\nlet ifft_result = ifft(fft_result);\n\nprintln!(\"ifft_result: {:?}\", ifft_result);\n\n// verify IFFT result is close to original input\n\nfor (original, result) in input.iter().zip(ifft_result.iter()) {\n\nassert!((original - result).norm() &lt; 1e-10, \"IFFT result does not match original input\");\n\n}\n\n}\n\n}\n</code></pre>"},{"location":"2024-09-23/fft-code/#iterative-version","title":"Iterative version","text":"<pre><code>use num::complex::Complex;\n\nuse std::f64::consts::PI;\n\n\n\n// Fast Fourier Transform (FFT) function\n\nfn fft(mut input: Vec&lt;Complex&lt;f64&gt;&gt;) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; {\n\nlet n = input.len();\n\nif n &lt;= 1 {\n\nreturn input;\n\n}\n\n\n\n// Bit-reversal permutation\n\nfor i in 0..n {\n\nlet j = reverse_bits(i, n);\n\nif i &lt; j {\n\ninput.swap(i, j);\n\n}\n\n}\n\n\n\n// Cooley-Tukey FFT algorithm (butterfly operations)\n\nlet mut step = 1;\n\nwhile step &lt; n {\n\nlet jump = step * 2;\n\nlet omega = Complex::from_polar(1.0, -PI / step as f64);\n\nlet mut w = Complex::new(1.0, 0.0);\n\n\n\nfor group in 0..step {\n\nfor pair in (group..n).step_by(jump) {\n\nlet t = input[pair + step] * w;\n\ninput[pair + step] = input[pair] - t;\n\ninput[pair] = input[pair] + t;\n\n}\n\nw *= omega;\n\n}\n\n\n\nstep *= 2;\n\n}\n\n\n\ninput\n\n}\n\n\n\n// Inverse Fast Fourier Transform (IFFT) function\n\nfn ifft(mut input: Vec&lt;Complex&lt;f64&gt;&gt;) -&gt; Vec&lt;Complex&lt;f64&gt;&gt; {\n\nlet n = input.len();\n\nif n &lt;= 1 {\n\nreturn input;\n\n}\n\n\n\n// Bit-reversal permutation\n\nfor i in 0..n {\n\nlet j = reverse_bits(i, n);\n\nif i &lt; j {\n\ninput.swap(i, j);\n\n}\n\n}\n\n\n\n// Cooley-Tukey IFFT algorithm (butterfly operations)\n\nlet mut step = 1;\n\nwhile step &lt; n {\n\nlet jump = step * 2;\n\nlet omega = Complex::from_polar(1.0, PI / step as f64); // Note the sign change compared to FFT\n\nlet mut w = Complex::new(1.0, 0.0);\n\n\n\nfor group in 0..step {\n\nfor pair in (group..n).step_by(jump) {\n\nlet t = input[pair + step] * w;\n\ninput[pair + step] = input[pair] - t;\n\ninput[pair] = input[pair] + t;\n\n}\n\nw *= omega;\n\n}\n\n\n\nstep *= 2;\n\n}\n\n\n\n// Normalization\n\nlet scale = 1.0 / n as f64;\n\ninput.iter_mut().for_each(|x| *x *= scale);\n\n\n\ninput\n\n}\n\n\n\n// Bit reversal function\n\nfn reverse_bits(mut num: usize, bit_count: usize) -&gt; usize {\n\nlet mut reversed = 0;\n\nfor _ in 0..bit_count.trailing_zeros() {\n\nreversed = (reversed &lt;&lt; 1) | (num &amp; 1);\n\nnum &gt;&gt;= 1;\n\n}\n\nreversed\n\n}\n\n\n\n#[cfg(test)]\n\nmod tests {\n\nuse super::*;\n\n\n\n#[test]\n\nfn test_fft_ifft() {\n\n// create input data\n\nlet input: Vec&lt;Complex&lt;f64&gt;&gt; = vec![1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0]\n\n.into_iter()\n\n.map(|x| Complex::new(x, 0.0))\n\n.collect();\n\n\n\n// execute FFT\n\nlet fft_result = fft(input.clone());\n\nprintln!(\"fft_result: {:?}\", fft_result);\n\n// execute IFFT\n\nlet ifft_result = ifft(fft_result);\n\nprintln!(\"ifft_result: {:?}\", ifft_result);\n\n// verify IFFT result is close to original input\n\nfor (original, result) in input.iter().zip(ifft_result.iter()) {\n\nassert!((original - result).norm() &lt; 1e-10, \"IFFT result does not match original input\");\n\n}\n\n}\n\n}\n</code></pre>"}]}